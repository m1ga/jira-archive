{
	"id": "126951",
	"key": "AC-884",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "12217",
			"key": "AC",
			"name": "Appcelerator - INBOX",
			"projectCategory": {
				"id": "10000",
				"description": "",
				"name": "Customer Service"
			}
		},
		"resolution": {
			"id": "7",
			"description": "",
			"name": "Invalid"
		},
		"resolutiondate": "2014-03-03T17:45:36.000+0000",
		"created": "2014-02-28T10:37:16.000+0000",
		"labels": [
			"logout",
			"node.acs",
			"users"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "stoda",
			"key": "stoda",
			"displayName": "Seth Toda",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2016-03-08T07:37:11.000+0000",
		"status": {
			"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
			"name": "Resolved",
			"id": "5",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "14544",
				"name": "Alloy",
				"description": "Please enter tickets related to the Alloy here."
			},
			{
				"id": "14550",
				"name": "Appcelerator Modules",
				"description": "Please enter tickets related to Modules here."
			}
		],
		"description": "To permit the manual logout passing the session_id as argument the content of method: 'logout',executor: function () in acs.jd at line 659 should be:\r\n\r\n{code:title=Should be|borderStyle=solid}\r\nif(typeof arguments[0] == 'function') {\r\n   var callback = arguments[0];\r\n   var req = arguments[1];\r\n   var res = arguments[2];\r\n   defaultExecutor.call(this, {}, function (evt) {\r\n      ACS.reset();\r\n      if(req && res) {\r\n         res.cookie(COOKIE_NAME, '');\r\n      }\r\n      callback(evt);\r\n   }, req, res);\r\n} else {\r\n   var data = arguments[0];\r\n   var callback = arguments[1];\r\n   var req = arguments[2];\r\n   var res = arguments[3];\r\n   defaultExecutor.call(this, data, function (evt) {\r\n      ACS.reset();\r\n      if(req && res) {\r\n         res.cookie(COOKIE_NAME, '');\r\n      }\r\n      callback(evt);\r\n      }, req, res);\r\n}\r\n{code}\r\n\r\nI have tried with this code and the ACS server respond OK so the manual logout should be correnct on the server side.\r\n\r\n(i'm sorry for my not perfect english).",
		"attachment": [],
		"flagged": false,
		"summary": "Node.ACS Logout Method does not allow manual calling",
		"creator": {
			"name": "leandromacrini@gmail.com",
			"key": "leandromacrini@gmail.com",
			"displayName": "Leandro Macrini",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"subtasks": [],
		"reporter": {
			"name": "leandromacrini@gmail.com",
			"key": "leandromacrini@gmail.com",
			"displayName": "Leandro Macrini",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"environment": "Windows",
		"comment": {
			"comments": [
				{
					"id": "295106",
					"author": {
						"name": "stoda",
						"key": "stoda",
						"displayName": "Seth Toda",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hello Leandro,\n\nCan you provide a use case? The code you provided above matches the 'remove' method on line 670. Could this work for you? ",
					"updateAuthor": {
						"name": "stoda",
						"key": "stoda",
						"displayName": "Seth Toda",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2014-02-28T18:58:55.000+0000",
					"updated": "2014-02-28T18:58:55.000+0000"
				},
				{
					"id": "295182",
					"author": {
						"name": "leandromacrini@gmail.com",
						"key": "leandromacrini@gmail.com",
						"displayName": "Leandro Macrini",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "yes the code is the same of the method 'remove' and yes, if I use it with 'logout', it works and logout from the ACS.\n\n",
					"updateAuthor": {
						"name": "leandromacrini@gmail.com",
						"key": "leandromacrini@gmail.com",
						"displayName": "Leandro Macrini",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2014-03-02T08:55:52.000+0000",
					"updated": "2014-03-02T08:55:52.000+0000"
				},
				{
					"id": "295272",
					"author": {
						"name": "stoda",
						"key": "stoda",
						"displayName": "Seth Toda",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Great! I'm glad this helped you.",
					"updateAuthor": {
						"name": "stoda",
						"key": "stoda",
						"displayName": "Seth Toda",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2014-03-03T17:45:20.000+0000",
					"updated": "2014-03-03T17:45:20.000+0000"
				},
				{
					"id": "295278",
					"author": {
						"name": "leandromacrini@gmail.com",
						"key": "leandromacrini@gmail.com",
						"displayName": "Leandro Macrini",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "thanks to you.\n\ni hope to see this on the next release ;)\n\nbye",
					"updateAuthor": {
						"name": "leandromacrini@gmail.com",
						"key": "leandromacrini@gmail.com",
						"displayName": "Leandro Macrini",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2014-03-03T17:58:32.000+0000",
					"updated": "2014-03-03T17:58:32.000+0000"
				}
			],
			"maxResults": 4,
			"total": 4,
			"startAt": 0
		}
	}
}