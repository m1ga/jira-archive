{
	"id": "140535",
	"key": "AC-1037",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "12217",
			"key": "AC",
			"name": "Appcelerator - INBOX",
			"projectCategory": {
				"id": "10000",
				"description": "",
				"name": "Customer Service"
			}
		},
		"resolution": {
			"id": "3",
			"description": "The problem is a duplicate of an existing issue.",
			"name": "Duplicate"
		},
		"resolutiondate": "2015-09-29T01:10:42.000+0000",
		"created": "2014-11-25T20:50:36.000+0000",
		"labels": [
			"TCSupportTriage"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "shossain",
			"key": "shossain",
			"displayName": "Shak Hossain",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2016-03-08T07:37:22.000+0000",
		"status": {
			"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
			"name": "Resolved",
			"id": "5",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [],
		"description": "The only time you would need to resend a confirmation is when the user lost it or did not receive it. In these scenarios, the user profile would exist but not confirmed. Yet, when I use this method when the user has not been confirmed, he gets an error message that he must confirm first. How can he confirm if he doesn't have the confirmation email? We must be able to resend in this case.\r\n\r\n\t\tCloud.Users.resendConfirmation({\r\n\t\t    email: username\r\n\t\t}, function (e) {\r\n\t\t    if (e.success) {\r\n\t\t        utils.notifyUser('Confirmation resent.', 'Please check your email.');\r\n\t\t    }\r\n\t\t    else {\r\n\t\t        utils.notifyUser('Error (121)', e.message);\r\n\t\t    }\r\n\t\t});\r\n",
		"attachment": [],
		"flagged": false,
		"summary": "Cloud.Users.resendConfirmation does not work",
		"creator": {
			"name": "mitch.starnes@bnsf.com",
			"key": "mitch.starnes@bnsf.com",
			"displayName": "Mitch Starnes",
			"active": true,
			"timeZone": "America/Chicago"
		},
		"subtasks": [],
		"reporter": {
			"name": "mitch.starnes@bnsf.com",
			"key": "mitch.starnes@bnsf.com",
			"displayName": "Mitch Starnes",
			"active": true,
			"timeZone": "America/Chicago"
		},
		"environment": "ACS",
		"comment": {
			"comments": [
				{
					"id": "339206",
					"author": {
						"name": "sliang",
						"key": "sliang",
						"displayName": "Shuo Liang",
						"active": true,
						"timeZone": "Asia/Harbin"
					},
					"body": "Hi,\r\n\r\nI see you problem. The root reason is that when you try to resend the confirmation email, you non-confirmed user is in login status. Like: after you create a new user, you can't try to call resendConfirmation API, because system will check your current login user is not confirmed yet (because session saved after you create new user.)\r\n\r\nSo based on your case, if you want call resendConfirmation API after creation. You have to logout current non confirmed user first.\r\n\r\nHope this will help you.\r\n\r\nRegards,\r\nShuo",
					"updateAuthor": {
						"name": "sliang",
						"key": "sliang",
						"displayName": "Shuo Liang",
						"active": true,
						"timeZone": "Asia/Harbin"
					},
					"created": "2015-01-15T08:27:21.000+0000",
					"updated": "2015-01-15T08:27:21.000+0000"
				},
				{
					"id": "340115",
					"author": {
						"name": "mitch.starnes@bnsf.com",
						"key": "mitch.starnes@bnsf.com",
						"displayName": "Mitch Starnes",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "The only time I would ever want to resend a confirmation is when the user has not yet confirmed. This condition will occur when the user loses the email.\r\n\r\nI need to be able to resend a confirmation to someone who didn't receive the email or who lost it.\r\n",
					"updateAuthor": {
						"name": "mitch.starnes@bnsf.com",
						"key": "mitch.starnes@bnsf.com",
						"displayName": "Mitch Starnes",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2015-01-21T16:01:26.000+0000",
					"updated": "2015-01-21T16:01:26.000+0000"
				},
				{
					"id": "340192",
					"author": {
						"name": "sliang",
						"key": "sliang",
						"displayName": "Shuo Liang",
						"active": true,
						"timeZone": "Asia/Harbin"
					},
					"body": "ye, I understand your case. All the what I commented is to tell you that your can do resendConfirmation API as long as your app do not login any non_confirmed user.  ",
					"updateAuthor": {
						"name": "sliang",
						"key": "sliang",
						"displayName": "Shuo Liang",
						"active": true,
						"timeZone": "Asia/Harbin"
					},
					"created": "2015-01-22T00:15:44.000+0000",
					"updated": "2015-01-22T00:15:44.000+0000"
				},
				{
					"id": "340200",
					"author": {
						"name": "mitch.starnes@bnsf.com",
						"key": "mitch.starnes@bnsf.com",
						"displayName": "Mitch Starnes",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "I'm saying it is not working.\r\n\r\nStep 1. User registers for app\r\nStep 2. ACS sends user a confirmation email\r\nStep 3. User does not receive email\r\nStep 4. User tries to log in but ACS sees that he has not confirmed so we prompt him to confirm.\r\nStep 5. User never received email so he cannot confirm\r\nStep 6. User clicks Resend confirmation \r\nStep 7. User gets message that he must confirm. This is makes no sense. He needs another confirmation letter.\r\n\r\n",
					"updateAuthor": {
						"name": "mitch.starnes@bnsf.com",
						"key": "mitch.starnes@bnsf.com",
						"displayName": "Mitch Starnes",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2015-01-22T01:38:40.000+0000",
					"updated": "2015-01-22T01:38:40.000+0000"
				},
				{
					"id": "340203",
					"author": {
						"name": "sliang",
						"key": "sliang",
						"displayName": "Shuo Liang",
						"active": true,
						"timeZone": "Asia/Harbin"
					},
					"body": "Let me communicate with cloud team, see if there is something else unusual. ",
					"updateAuthor": {
						"name": "sliang",
						"key": "sliang",
						"displayName": "Shuo Liang",
						"active": true,
						"timeZone": "Asia/Harbin"
					},
					"created": "2015-01-22T01:50:00.000+0000",
					"updated": "2015-01-22T01:50:00.000+0000"
				},
				{
					"id": "340205",
					"author": {
						"name": "sliang",
						"key": "sliang",
						"displayName": "Shuo Liang",
						"active": true,
						"timeZone": "Asia/Harbin"
					},
					"updateAuthor": {
						"name": "sliang",
						"key": "sliang",
						"displayName": "Shuo Liang",
						"active": true,
						"timeZone": "Asia/Harbin"
					},
					"created": "2015-01-22T02:18:11.000+0000",
					"updated": "2015-01-22T02:18:11.000+0000"
				},
				{
					"id": "340212",
					"author": {
						"name": "mitch.starnes@bnsf.com",
						"key": "mitch.starnes@bnsf.com",
						"displayName": "Mitch Starnes",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "Thank you.",
					"updateAuthor": {
						"name": "mitch.starnes@bnsf.com",
						"key": "mitch.starnes@bnsf.com",
						"displayName": "Mitch Starnes",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2015-01-22T04:14:56.000+0000",
					"updated": "2015-01-22T04:14:56.000+0000"
				}
			],
			"maxResults": 8,
			"total": 8,
			"startAt": 0
		}
	}
}