{
	"id": "131593",
	"key": "AC-1410",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "12217",
			"key": "AC",
			"name": "Appcelerator - INBOX",
			"projectCategory": {
				"id": "10000",
				"description": "",
				"name": "Customer Service"
			}
		},
		"resolution": {
			"id": "7",
			"description": "",
			"name": "Invalid"
		},
		"resolutiondate": "2014-06-14T01:23:03.000+0000",
		"created": "2014-06-11T15:20:03.000+0000",
		"labels": [
			"Module"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "mpmiranda",
			"key": "mpmiranda",
			"displayName": "Mauro Parra-Miranda",
			"active": true,
			"timeZone": "America/Mexico_City"
		},
		"updated": "2016-03-08T07:37:50.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "14550",
				"name": "Appcelerator Modules",
				"description": "Please enter tickets related to Modules here."
			}
		],
		"description": "I'm trying to add new subclasses of KrollProxy to a module as follows:\r\n\r\n@Kroll.proxy(creatableInModule=TestmoduleModule.class)\r\npublic class GeronimoProxy extends KrollProxy {\r\n\tpublic GeronimoProxy () {\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic void handleCreationDict(KrollDict options) {\r\n\t\tsuper.handleCreationDict(options);\r\n\t}\r\n}\r\n\r\nHowever, adding a single javascript call in the example app.js file:\r\n\r\nvar geronimo = testmodule.createGeronimo();\r\n\r\nfails with a runtime error of \"Uncaught TypeError: Object #<Testmodule> has no method 'createGeronimo'\r\n\r\nIf I remove the javascript call the rest of the example runs fine, including the createExample() call.\r\n\r\nI'm \"ant\"ing and then \"titanium.py run\"ing the module to test this functionality.",
		"attachment": [
			{
				"id": "48852",
				"filename": "testmodule.zip",
				"author": {
					"name": "whelling",
					"key": "whelling",
					"displayName": "Will Helling",
					"active": true,
					"timeZone": "America/Los_Angeles"
				},
				"created": "2014-06-11T15:20:03.000+0000",
				"size": 2336697,
				"mimeType": "application/zip"
			}
		],
		"flagged": false,
		"summary": "Module is not creating \"create\" methods for Proxies",
		"creator": {
			"name": "whelling",
			"key": "whelling",
			"displayName": "Will Helling",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "whelling",
			"key": "whelling",
			"displayName": "Will Helling",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": "MacOS X 10.9.3; Titanium Studio 3.2.3.201404181442; 3.2.2.GA;",
		"comment": {
			"comments": [
				{
					"id": "309049",
					"author": {
						"name": "mpmiranda",
						"key": "mpmiranda",
						"displayName": "Mauro Parra-Miranda",
						"active": true,
						"timeZone": "America/Mexico_City"
					},
					"body": "Hello,\r\n\r\nthis is unsupported in 3.2.x. In order to create this, you will need to use Ti Studio. Please check this docs:\r\n\r\nhttp://docs.appcelerator.com/titanium/3.0/#!/guide/Creating_a_New_Titanium_Module\r\n\r\nThe CLI will support the Modules creation starting with 3.3.0, right now still in testing, not public release yet. \r\n\r\nBest,\r\nMauro",
					"updateAuthor": {
						"name": "mpmiranda",
						"key": "mpmiranda",
						"displayName": "Mauro Parra-Miranda",
						"active": true,
						"timeZone": "America/Mexico_City"
					},
					"created": "2014-06-14T01:23:03.000+0000",
					"updated": "2014-06-14T01:23:03.000+0000"
				}
			],
			"maxResults": 1,
			"total": 1,
			"startAt": 0
		}
	}
}