{
	"id": "112862",
	"key": "AC-2678",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "12217",
			"key": "AC",
			"name": "Appcelerator - INBOX",
			"projectCategory": {
				"id": "10000",
				"description": "",
				"name": "Customer Service"
			}
		},
		"resolution": {
			"id": "11",
			"description": "Is not a bug in our product",
			"name": "Not Our Bug"
		},
		"resolutiondate": "2013-04-17T22:24:25.000+0000",
		"created": "2013-04-15T16:52:17.000+0000",
		"labels": [],
		"versions": [],
		"issuelinks": [
			{
				"id": "27899",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"outwardIssue": {
					"id": "111952",
					"key": "TIMOB-13278",
					"fields": {
						"summary": "CodeProcessor: Improve performance",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Low",
							"id": "4"
						},
						"issuetype": {
							"id": "6",
							"description": "gh.issue.epic.desc",
							"name": "Epic",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": {
			"name": "shossain",
			"key": "shossain",
			"displayName": "Shak Hossain",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2016-03-08T07:41:47.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "14548",
				"name": "Titanium SDK & CLI",
				"description": "Please enter tickets related to the MobileSDK here."
			}
		],
		"description": "I am getting this error \"FATAL ERROR: JS Allocation failed - process out of memory\" after running the following command of Titanium Code Processor.\r\n\r\nC:\\Users\\sheed>titanium-code-processor analyze -o android -p ti-api-processor -p ti-api-deprecation-finder -p require-provider -d C:\\Users\\sheed\\Documents\\Titan\r\nium_Studio_Workspace\\TRGYPMobileApp\r\nTitanium Code Processor v0.3.2\r\nCopyright (c) 2012-2013, Appcelerator, Inc.  All Rights Reserved.\r\ninfo: Analyzing project at \"C:\\Users\\sheed\\Documents\\Titanium_Studio_Workspace\\T\r\nRGYPMobileApp\"\r\nFATAL ERROR: JS Allocation failed - process out of memory",
		"attachment": [],
		"flagged": false,
		"summary": "Code Processor: Getting out of memory error",
		"creator": {
			"name": "debasis.shee",
			"key": "debasis.shee",
			"displayName": "Debasis Shee",
			"active": true,
			"timeZone": "America/New_York"
		},
		"subtasks": [],
		"reporter": {
			"name": "debasis.shee",
			"key": "debasis.shee",
			"displayName": "Debasis Shee",
			"active": true,
			"timeZone": "America/New_York"
		},
		"environment": "Windows 7\r\nTitanium Studio 3.0.2\r\nMobile SDK 3.0.2.v20130122123204\r\nAlloy 1.0",
		"comment": {
			"comments": [
				{
					"id": "248047",
					"author": {
						"name": "bhughes",
						"key": "bhughes",
						"displayName": "Bryan Hughes",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "node.js has a memory limit and the code processor does bump into it from time to time. The workaround is to increase the stack-size for node.js. This can be done manually by doing:\r\n\r\nnode --stack-size=10000 /path/to/titanium-code-processor/bin/codeprocessor <arguments>\r\n\r\nTo make life easier, you can always write a bash/python/node.js script that calls the code processor with the extended stack size and symlink /usr/local/bin/titanium-code-processor (or whatever) to this script\r\n\r\nUnfortunately there is nothing that can be done to change this on the code processor side to increase the stack because node.js doesn't include any APIs to increase the stack size programatically (probably because the V8 instance has already been created).",
					"updateAuthor": {
						"name": "bhughes",
						"key": "bhughes",
						"displayName": "Bryan Hughes",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2013-04-17T22:21:58.000+0000",
					"updated": "2013-04-17T22:22:42.000+0000"
				},
				{
					"id": "288653",
					"author": {
						"name": "shossain",
						"key": "shossain",
						"displayName": "Shak Hossain",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Closing since no response from the reporter.",
					"updateAuthor": {
						"name": "shossain",
						"key": "shossain",
						"displayName": "Shak Hossain",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2014-01-17T21:07:48.000+0000",
					"updated": "2014-01-17T21:07:48.000+0000"
				}
			],
			"maxResults": 3,
			"total": 3,
			"startAt": 0
		}
	}
}