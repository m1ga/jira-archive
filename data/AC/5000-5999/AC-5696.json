{
	"id": "171473",
	"key": "AC-5696",
	"fields": {
		"issuetype": {
			"id": "4",
			"description": "An improvement or enhancement to an existing feature or task.",
			"name": "Improvement",
			"subtask": false
		},
		"project": {
			"id": "12217",
			"key": "AC",
			"name": "Appcelerator - INBOX",
			"projectCategory": {
				"id": "10000",
				"description": "",
				"name": "Customer Service"
			}
		},
		"resolution": {
			"id": "11",
			"description": "Is not a bug in our product",
			"name": "Not Our Bug"
		},
		"resolutiondate": "2018-04-08T14:00:52.000+0000",
		"created": "2018-04-08T01:32:11.000+0000",
		"labels": [
			"ListItem",
			"ListView"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "shossain",
			"key": "shossain",
			"displayName": "Shak Hossain",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2018-04-08T14:00:53.000+0000",
		"status": {
			"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
			"name": "Resolved",
			"id": "5",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [],
		"description": "I have ListView which it has got different item templates. I am changing size of child views of item templates according to remote json when I fill data from controller js.\r\n\r\nMy ListView is not scrolling smooth over 10 ListItem. It is freezes (sticks around) when I scroll fast on device. I have tested different devices but result is same.\r\n\r\n Can I stop ListItem UI refresh after fill data to ListView or is it normal. I have attached sample codes. \r\n\r\nThank you in advance.",
		"attachment": [
			{
				"id": "65033",
				"filename": "kerberos.zip",
				"author": {
					"name": "Kerbooo",
					"key": "kerbooo",
					"displayName": "Kerberos",
					"active": true,
					"timeZone": "Europe/Istanbul"
				},
				"created": "2018-04-08T01:27:05.000+0000",
				"size": 8801,
				"mimeType": "application/zip"
			}
		],
		"flagged": false,
		"summary": "ListView does not scroll smooth on Android and iOS",
		"creator": {
			"name": "Kerbooo",
			"key": "kerbooo",
			"displayName": "Kerberos",
			"active": true,
			"timeZone": "Europe/Istanbul"
		},
		"subtasks": [],
		"reporter": {
			"name": "Kerbooo",
			"key": "kerbooo",
			"displayName": "Kerberos",
			"active": true,
			"timeZone": "Europe/Istanbul"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "436606",
					"author": {
						"name": "mrahman",
						"key": "mrahman",
						"displayName": "Mostafizur Rahman",
						"active": true,
						"timeZone": "Asia/Dhaka"
					},
					"body": "[~Kerbooo],\r\nThanks for sharing with us. Can you please share simple test case so that we can run on our end to reproduce the issue? We got error during project run.",
					"updateAuthor": {
						"name": "mrahman",
						"key": "mrahman",
						"displayName": "Mostafizur Rahman",
						"active": true,
						"timeZone": "Asia/Dhaka"
					},
					"created": "2018-04-08T05:28:09.000+0000",
					"updated": "2018-04-08T05:28:09.000+0000"
				},
				{
					"id": "436609",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Unfortunately this is nothing Titanium influences. Your view template is highly complex (50 sub-views, percentage-based calculations, dynamic size (Ti.UI.SIZE) which simply is too much for the dynamic layout engine used in the native UITableView. The same would occur in a native implementation, even with storyboards and Auto Layout. The reason for this is (without going too deep into how table views render cells) that the table view only keeps the visible table view cells on screen and removes / adds them dynamically on scroll. While this is highly performant for long but simple lists like a classic title / subtitle template, it gets more critical on advanced layouts which require more calculation before moving into the visible area. \r\n\r\nAs a workaround (I was in that situation before, both in native and Titanium), use a vertically based Ti.UI.ScrollView instead, which renders all subviews beforehand. Note that creating it might take longer than for a ListView, but you will *less* issues with scrolling performance when using complex views. Some tips for general optimization:\r\n- Try to avoid Ti.UI.SIZE and percentage based calculations\r\n- Avoid remote images -> Cache them, display the placeholder before and update the cell once finished\r\n- Use as less sub views as possible -> try to avoid container views, although it might be cleaner to oversee\r\n- think about the user: sometimes, designs are not made for large scrollable lists. The user can only consume a limited number of information at the same time, so laying out certain components into other views might be welcome\r\n\r\nI hope this helps a bit, please give it a try!",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-04-08T14:00:52.000+0000",
					"updated": "2018-04-08T14:00:52.000+0000"
				}
			],
			"maxResults": 2,
			"total": 2,
			"startAt": 0
		}
	}
}