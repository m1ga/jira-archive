{
	"id": "174229",
	"key": "AC-6396",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "12217",
			"key": "AC",
			"name": "Appcelerator - INBOX",
			"projectCategory": {
				"id": "10000",
				"description": "",
				"name": "Customer Service"
			}
		},
		"resolution": null,
		"resolutiondate": null,
		"created": "2019-10-08T10:50:26.000+0000",
		"labels": [],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "shossain",
			"key": "shossain",
			"displayName": "Shak Hossain",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2021-08-07T16:14:43.000+0000",
		"status": {
			"description": "The issue is open and ready for the assignee to start work on it.",
			"name": "Open",
			"id": "1",
			"statusCategory": {
				"id": 2,
				"key": "new",
				"colorName": "blue-gray",
				"name": "To Do"
			}
		},
		"components": [
			{
				"id": "14544",
				"name": "Alloy",
				"description": "Please enter tickets related to the Alloy here."
			},
			{
				"id": "14548",
				"name": "Titanium SDK & CLI",
				"description": "Please enter tickets related to the MobileSDK here."
			}
		],
		"description": "We have just release our first version with SDK 8 (8.1.0.GA), updating from 7.5.1.GA. \r\nWe have experienced a significant increase in JavascriptCore crashes with the new version – with no code changed. Going from 0-1 crashes a day to 400 a day. Below is the crash we are seeing. It is not reproducible, so it is difficult for us to provide a test case. \r\n\r\n\r\n{code:java}\r\nCrashed: Heap Helper Thread\r\n0  JavaScriptCore                 0x1cf7875e0 JSC::SlotVisitor::drain(WTF::MonotonicTime)::$_3::operator()(JSC::MarkStackArray&) const + 328\r\n1  JavaScriptCore                 0x1cf7875bc JSC::SlotVisitor::drain(WTF::MonotonicTime)::$_3::operator()(JSC::MarkStackArray&) const + 292\r\n2  JavaScriptCore                 0x1cf7848f8 JSC::SlotVisitor::drain(WTF::MonotonicTime) + 144\r\n3  JavaScriptCore                 0x1cf785138 JSC::SlotVisitor::drainFromShared(JSC::SlotVisitor::SharedDrainMode, WTF::MonotonicTime) + 580\r\n4  JavaScriptCore                 0x1cf767fe4 WTF::SharedTaskFunctor<void (), JSC::Heap::runBeginPhase(JSC::GCConductor)::$_18>::run() + 172\r\n5  JavaScriptCore                 0x1cf10f0e8 WTF::ParallelHelperClient::runTask(WTF::RefPtr<WTF::SharedTask<void ()>, WTF::DumbPtrTraits<WTF::SharedTask<void ()> > > const&) + 52\r\n6  JavaScriptCore                 0x1cf10fbc0 WTF::ParallelHelperPool::Thread::work() + 28\r\n7  JavaScriptCore                 0x1cf0e4784 WTF::Function<void ()>::CallableWrapper<WTF::AutomaticThread::start(WTF::AbstractLocker const&)::$_0>::call() + 372\r\n8  JavaScriptCore                 0x1cf127b30 WTF::Thread::entryPoint(WTF::Thread::NewThreadContext*) + 260\r\n9  JavaScriptCore                 0x1cf12903c WTF::wtfThreadEntryPoint(void*) + 12\r\n10 libsystem_pthread.dylib        0x1c7b612c0 _pthread_body + 128\r\n11 libsystem_pthread.dylib        0x1c7b61220 _pthread_start + 44\r\n12 libsystem_pthread.dylib        0x1c7b64cdc thread_start + 4 \r\n{code}\r\n",
		"attachment": [
			{
				"id": "67020",
				"filename": "2019-10-08_10-30-40.5371_+0200-fcfbcd6adc465691bd86896bef1e1392ccc071b5.crash",
				"author": {
					"name": "jonasfunk",
					"key": "jonasfunk",
					"displayName": "Jonas Funk Johannessen",
					"active": true,
					"timeZone": "America/Los_Angeles"
				},
				"created": "2019-10-08T11:51:14.000+0000",
				"size": 109919,
				"mimeType": "application/octet-stream"
			},
			{
				"id": "67959",
				"filename": "crashlog.crash",
				"author": {
					"name": "hknoechel",
					"key": "hansknoechel",
					"displayName": "Hans Knöchel",
					"active": true,
					"timeZone": "Europe/Berlin"
				},
				"created": "2021-08-07T16:14:43.000+0000",
				"size": 122328,
				"mimeType": "application/octet-stream"
			}
		],
		"flagged": false,
		"summary": "iOS: JavascriptCore app crash",
		"creator": {
			"name": "jonasfunk",
			"key": "jonasfunk",
			"displayName": "Jonas Funk Johannessen",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "jonasfunk",
			"key": "jonasfunk",
			"displayName": "Jonas Funk Johannessen",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": "\r\n{code:java}\r\n\r\nOperating System\r\n  Name                        = Mac OS X\r\n  Version                     = 10.14.6\r\n  Architecture                = 64bit\r\n  # CPUs                      = 8\r\n  Memory                      = 16.0GB\r\n\r\nNode.js\r\n  ✓  node               installed (v8.14.0)\r\n  ✓  npm                installed (v6.11.3)\r\n \r\nTitanium CLI\r\n  ✓  cli                up-to-date (v5.2.1)\r\n \r\nTitanium CLI Dependencies\r\n  ✓  adm-zip            up-to-date (v0.4.13)\r\n  ✓  async              up-to-date (v2.6.1)\r\n  ✓  colors             up-to-date (v1.3.3)\r\n  ✓  fields             up-to-date (v0.1.24)\r\n  ✓  fs-extra           up-to-date (v7.0.1)\r\n  ✓  humanize           up-to-date (v0.0.9)\r\n  ✓  longjohn           up-to-date (v0.2.12)\r\n  ✓  moment             up-to-date (v2.22.2)\r\n  ✓  node-appc          up-to-date (v0.2.49)\r\n  ✓  request            up-to-date (v2.88.0)\r\n  ✓  semver             up-to-date (v5.6.0)\r\n  ✓  sprintf            up-to-date (v0.1.5)\r\n  ✓  temp               up-to-date (v0.9.0)\r\n  ✓  winston            up-to-date (v1.1.2)\r\n \r\nTitanium SDK\r\n  ✓  latest sdk         installed (v8.1.0.GA)\r\n  ✓  selected sdk       up-to-date (v8.1.0.GA)\r\n{code}\r\n",
		"comment": {
			"comments": [
				{
					"id": "451891",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~jonasfunk], can you please provide a full crash report of the exception? Thanks!",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2019-10-08T11:33:30.000+0000",
					"updated": "2019-10-08T11:33:30.000+0000"
				},
				{
					"id": "451892",
					"author": {
						"name": "jonasfunk",
						"key": "jonasfunk",
						"displayName": "Jonas Funk Johannessen",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Attached a crash log",
					"updateAuthor": {
						"name": "jonasfunk",
						"key": "jonasfunk",
						"displayName": "Jonas Funk Johannessen",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-10-08T11:51:54.000+0000",
					"updated": "2019-10-08T11:53:11.000+0000"
				},
				{
					"id": "452023",
					"author": {
						"name": "jonasfunk",
						"key": "jonasfunk",
						"displayName": "Jonas Funk Johannessen",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "If it's any help, we use a \r\n{code:java}\r\nsetTimeout\r\n{code}\r\n to poll an API every 10 secs. I heard that javascriptcore has some issues with \r\nsetTimeout and setInterval.",
					"updateAuthor": {
						"name": "jonasfunk",
						"key": "jonasfunk",
						"displayName": "Jonas Funk Johannessen",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-10-14T09:27:21.000+0000",
					"updated": "2019-10-14T09:27:21.000+0000"
				},
				{
					"id": "452093",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Thanks for the crash log. It's very hard to tell what's going on since it's all related to the JSC internals. Without a proper reproduction test case we are unfortunately stabbing in the dark here. Can you check for memory leaks using Instruments and try to reproduce the crash in your app. Then send the collected data including the crash report? Maybe that gives some more insight.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2019-10-16T10:23:25.000+0000",
					"updated": "2019-10-16T10:23:25.000+0000"
				},
				{
					"id": "452141",
					"author": {
						"name": "sdarda",
						"key": "sdarda",
						"displayName": "Sharif AbuDarda",
						"active": false,
						"timeZone": "Asia/Dhaka"
					},
					"body": "Hello [~jonasfunk], Can you please followup here on Jan's comment? Thanks.",
					"updateAuthor": {
						"name": "sdarda",
						"key": "sdarda",
						"displayName": "Sharif AbuDarda",
						"active": false,
						"timeZone": "Asia/Dhaka"
					},
					"created": "2019-10-19T23:22:28.000+0000",
					"updated": "2019-10-19T23:22:28.000+0000"
				},
				{
					"id": "452145",
					"author": {
						"name": "jonasfunk",
						"key": "jonasfunk",
						"displayName": "Jonas Funk Johannessen",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I'm sorry to hear, since the crash count we are seeing are extreme, and as I noted, has come with SDK 8. Can it in any way be related to our use of timers? Unfortunately I'm not able to run Instruments, as the app is closing down, as soon as I start it up. I will try to see if this can be fixed.",
					"updateAuthor": {
						"name": "jonasfunk",
						"key": "jonasfunk",
						"displayName": "Jonas Funk Johannessen",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-10-21T07:29:45.000+0000",
					"updated": "2019-10-21T07:29:45.000+0000"
				},
				{
					"id": "452527",
					"author": {
						"name": "jonasfunk",
						"key": "jonasfunk",
						"displayName": "Jonas Funk Johannessen",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I have tried to check for memory leaks in Instruments. When doing that all views seems to be deallocated but all proxies doesn't. Are they not supposed to be deallocated as well? Tried running kitchensinkv2 with allocations - also all proxies persisted here. Testing on device with SDK 8.2.1.",
					"updateAuthor": {
						"name": "jonasfunk",
						"key": "jonasfunk",
						"displayName": "Jonas Funk Johannessen",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-11-07T14:11:28.000+0000",
					"updated": "2019-11-07T14:11:28.000+0000"
				},
				{
					"id": "458968",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Reproducible in 10.0.2 (with the latest fix from TIMOB-27875). Attaching the crash log here.",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2021-08-07T16:13:31.000+0000",
					"updated": "2021-08-07T16:13:31.000+0000"
				}
			],
			"maxResults": 8,
			"total": 8,
			"startAt": 0
		}
	}
}