{
	"id": "98387",
	"key": "ALOY-152",
	"fields": {
		"issuetype": {
			"id": "7",
			"description": "gh.issue.story.desc",
			"name": "Story",
			"subtask": false
		},
		"project": {
			"id": "11113",
			"key": "ALOY",
			"name": "Alloy",
			"projectCategory": {
				"id": "10400",
				"description": "Tools for developing applications",
				"name": "Tooling"
			}
		},
		"fixVersions": [
			{
				"id": "14081",
				"description": "",
				"name": "2012 Sprint 16",
				"archived": true,
				"released": false
			},
			{
				"id": "14176",
				"description": "Release 3.0.0",
				"name": "Release 3.0.0",
				"archived": false,
				"released": true,
				"releaseDate": "2012-12-13"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2012-08-07T21:48:05.000+0000",
		"created": "2012-07-30T23:54:27.000+0000",
		"priority": {
			"name": "High",
			"id": "2"
		},
		"labels": [],
		"versions": [
			{
				"id": "14081",
				"description": "",
				"name": "2012 Sprint 16",
				"archived": true,
				"released": false
			}
		],
		"issuelinks": [
			{
				"id": "19658",
				"type": {
					"id": "10020",
					"name": "Depends",
					"inward": "is dependent of",
					"outward": "depends on"
				},
				"inwardIssue": {
					"id": "98450",
					"key": "ALOY-157",
					"fields": {
						"summary": "All top-level elements in a required view should be added its parent's view hierarchy",
						"status": {
							"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
							"name": "Resolved",
							"id": "5",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "High",
							"id": "2"
						},
						"issuetype": {
							"id": "4",
							"description": "An improvement or enhancement to an existing feature or task.",
							"name": "Improvement",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "19581",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"inwardIssue": {
					"id": "98388",
					"key": "ALOY-153",
					"fields": {
						"summary": "For the Widget element change the syntax to be <Require widgetid=\"myWidgetID/> ",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "High",
							"id": "2"
						},
						"issuetype": {
							"id": "7",
							"description": "gh.issue.story.desc",
							"name": "Story",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": null,
		"updated": "2018-03-07T22:26:06.000+0000",
		"status": {
			"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
			"name": "Resolved",
			"id": "5",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "12329",
				"name": "Runtime",
				"description": "Generic bucket for uncategorized runtime issues"
			},
			{
				"id": "12326",
				"name": "XML",
				"description": "View XML and parsing"
			}
		],
		"description": " After having a lengthy discussion with Tony and Rick we may want to support both an Inculde and a Require element as the two elements provide quite disparate featues. Rick or Tony feel free to expand if you think I missed something.\r\n\r\nindex.xml\r\n<Window id=\"win1\">\r\n  <Include src=\"myMarkup\"/> \r\n</Window>\r\n\r\nWould take the markup that is in myMarkup.xml and make that markup avaialable as it is under it's parent element \"win1\". This is good for quick reuse of fragments of markup (XML). If say within myMarkup.xml you had a Button say with id \"btn1\" then within the index.js controller the Ti.UI.Button proxy is accessed through \"btn1\". There is no associated style \r\n\r\nOn the other hand\r\n\r\nindex.xml\r\n<Window id=\"win1\">\r\n  <Require src=\"myView\" id=\"view1\"/> \r\n</Window>\r\n\r\n\r\nWould take the controller (trifecto) and add that to the index.js controller. Styles and the source controller myView.js of myView is maintained. It's like a var view1 = require(\"myView\").create() being done automatically for you and the view hierarchy still under \"win1\". If myView had a Button with id \"btn1\" In index.js controller the developer would access the button through \"view1.btn1\". The advantage here is trifecto reuse and never any id collisions. If the name attribute is missing we can use the view name. \r\n\r\n\r\n\r\nFrom Rick B\r\n\r\n\r\nInclude:\r\nhttps://gist.github.com/3219597\r\n\r\nRequire:\r\nhttps://gist.github.com/3219595\r\n\r\nh4. other suggestions\r\n\r\n{code:xml}\r\n<!-- for widgets -->\r\n<Require widgetId=\"widgetId\"/>\r\n{code}\r\n",
		"attachment": [],
		"flagged": false,
		"summary": "Add an Include and Require element see description",
		"creator": {
			"name": "rmcmahon",
			"key": "rmcmahon",
			"displayName": "Russell McMahon",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "rmcmahon",
			"key": "rmcmahon",
			"displayName": "Russell McMahon",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "213110",
					"author": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Originally from Russell McMahon:\r\n\r\nSince both widgets and views will use the Require element we should have a type attribute. If type is missing default to type=\"view\"\r\n\r\n<Require type=\"widget\" id=\"widgetId\"/>\r\n<Require type=\"view\" src=\"path/to/view\"/> /* require brings in trifecto */",
					"updateAuthor": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-08-07T07:14:41.000+0000",
					"updated": "2012-08-07T07:14:41.000+0000"
				},
				{
					"id": "213111",
					"author": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "OK, but we'll need to use something else for the widget id, since *id* is reserved for Alloy use. How about we use *src* for both cases and let the *type* determine how each should be handled?\r\n\r\nh4. option #1\r\n{code:xml}\r\n<Require type=\"widget\" src=\"widgetId\"/>\r\n<Require type=\"view\" src=\"path/to/view\"/> \r\n{code}\r\n\r\nI actually like the idea of doing this initially:\r\n\r\nh4. option #2\r\n{code:xml}\r\n<Require widget=\"widgetId\"/>\r\n<Require view=\"path/to/view\"/> \r\n{code}\r\n\r\nbut it starts introducing more reserved keywords. It's also not as flexible as using *type* if we ended up adding more types. But... man does it look pretty, clean, and expressive. I don't know, I might be talking myself back into option #2 as I'm typing. Thoughts?\r\n\r\nAlso, as far as <Include>, should it just look like this?\r\n\r\n{code:xml}\r\n<Include src=\"path/to/any/xml/file\"/>\r\n\r\n<!-- example -->\r\n<Include src=\"views/myMarkup.xml\"/>\r\n{code}\r\n\r\nAn important distinction is that <Include> will happen at compile time, where <Require> will generate runtime code for accessing the generated controllers.\r\n",
					"updateAuthor": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-08-07T07:15:01.000+0000",
					"updated": "2012-08-07T09:21:01.000+0000"
				},
				{
					"id": "213157",
					"author": {
						"name": "rmcmahon",
						"key": "rmcmahon",
						"displayName": "Russell McMahon",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Option #1 looks to be best.",
					"updateAuthor": {
						"name": "rmcmahon",
						"key": "rmcmahon",
						"displayName": "Russell McMahon",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-08-07T09:37:10.000+0000",
					"updated": "2012-08-07T09:37:10.000+0000"
				}
			],
			"maxResults": 3,
			"total": 3,
			"startAt": 0
		}
	}
}