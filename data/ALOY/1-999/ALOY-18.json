{
	"id": "91760",
	"key": "ALOY-18",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "11113",
			"key": "ALOY",
			"name": "Alloy",
			"projectCategory": {
				"id": "10400",
				"description": "Tools for developing applications",
				"name": "Tooling"
			}
		},
		"fixVersions": [
			{
				"id": "14036",
				"description": "2012 Sprint 14",
				"name": "2012 Sprint 14",
				"archived": true,
				"released": true,
				"releaseDate": "2012-07-19"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2012-07-19T11:52:03.000+0000",
		"created": "2012-05-11T12:53:23.000+0000",
		"priority": {
			"name": "High",
			"id": "2"
		},
		"labels": [],
		"versions": [
			{
				"id": "14036",
				"description": "2012 Sprint 14",
				"name": "2012 Sprint 14",
				"archived": true,
				"released": true,
				"releaseDate": "2012-07-19"
			}
		],
		"issuelinks": [
			{
				"id": "17237",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"inwardIssue": {
					"id": "91742",
					"key": "ALOY-28",
					"fields": {
						"summary": "Consider using jsdom for HTML parsing and DOM creation",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "High",
							"id": "2"
						},
						"issuetype": {
							"id": "4",
							"description": "An improvement or enhancement to an existing feature or task.",
							"name": "Improvement",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": {
			"name": "tlukasavage",
			"key": "tlukasavage",
			"displayName": "Tony Lukasavage",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2013-05-01T14:56:08.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "12329",
				"name": "Runtime",
				"description": "Generic bucket for uncategorized runtime issues"
			},
			{
				"id": "12326",
				"name": "XML",
				"description": "View XML and parsing"
			}
		],
		"description": "Our current method of generating the DOM based on the HTML markup relies totally on the idea that every markup element will have an ID, as found in the {{generate_dom_source}} function of {{zipti.js}}. We need to be able to create elements in the DOM without specifying an ID. They should still be accessible through the standard DOM methods. \r\n\r\nRight now, all elements without IDs in the markup end up looking like this in the DOM:\r\n\r\n{code:javascript}\r\nvar undefined = $Ti.domDoc().createElement('div');\r\nvar undefinedattr1 = $Ti.domDoc().createAttribute('style');\r\nundefinedattr1.setNodeValue(\"-ti-text:'Content'; color:'#000';\");\r\nundefined.setAttributeNode(undefinedattr1);\r\nvar undefinedattr2 = $Ti.domDoc().createAttribute('data-ti-api');\r\nundefinedattr2.setNodeValue(\"Label\");\r\nundefined.setAttributeNode(undefinedattr2);\r\ncontent.appendChild(undefined);\r\n{code}",
		"attachment": [],
		"flagged": false,
		"summary": "Can't create DOM elements without an ID",
		"creator": {
			"name": "tlukasavage",
			"key": "tlukasavage",
			"displayName": "Tony Lukasavage",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "tlukasavage",
			"key": "tlukasavage",
			"displayName": "Tony Lukasavage",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "194565",
					"author": {
						"name": "rmcmahon",
						"key": "rmcmahon",
						"displayName": "Russell McMahon",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I agree that we need to create elements that do not have an id. The id was used in early prototypes before there was a selector engine. There does need to thought about how we manage a non id element lifecycle but it should not be too hard to put something in place.",
					"updateAuthor": {
						"name": "rmcmahon",
						"key": "rmcmahon",
						"displayName": "Russell McMahon",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-05-11T13:05:56.000+0000",
					"updated": "2012-05-11T13:05:56.000+0000"
				},
				{
					"id": "200613",
					"author": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "markup elements will use a generated ID when they are not given an ID explicitly",
					"updateAuthor": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-06-27T11:33:41.000+0000",
					"updated": "2012-06-27T11:33:41.000+0000"
				}
			],
			"maxResults": 2,
			"total": 2,
			"startAt": 0
		}
	}
}