{
	"id": "102316",
	"key": "ALOY-306",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "11113",
			"key": "ALOY",
			"name": "Alloy",
			"projectCategory": {
				"id": "10400",
				"description": "Tools for developing applications",
				"name": "Tooling"
			}
		},
		"fixVersions": [
			{
				"id": "14631",
				"description": "Alloy 0.3.1",
				"name": "Alloy 0.3.1",
				"archived": false,
				"released": true,
				"releaseDate": "2012-11-02"
			},
			{
				"id": "14598",
				"description": "2012 Sprint 21",
				"name": "2012 Sprint 21",
				"archived": true,
				"released": true,
				"releaseDate": "2012-10-22"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2012-10-12T20:53:34.000+0000",
		"created": "2012-09-27T20:43:36.000+0000",
		"priority": {
			"name": "High",
			"id": "2"
		},
		"labels": [
			"notable"
		],
		"versions": [
			{
				"id": "14177",
				"description": "2012 Sprint 20",
				"name": "2012 Sprint 20",
				"archived": true,
				"released": true,
				"releaseDate": "2012-10-08"
			}
		],
		"issuelinks": [],
		"assignee": null,
		"updated": "2018-03-07T22:26:04.000+0000",
		"status": {
			"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
			"name": "Resolved",
			"id": "5",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "12326",
				"name": "XML",
				"description": "View XML and parsing"
			}
		],
		"description": "For the following components, the code for their abstract types are generated directly in the parser, not in the generateNode() function. While this ensures that these abstract types can only be used inside of the appropriate tags, it misses the preprocessing done in generateNode(), which makes conditional determinations based on platform, formFactor, and also handles inline markup eventing.\r\n\r\n* Ti.UI.ButtonBar\r\n* Ti.UI.iOS.CoverFlowView\r\n* Ti.UI.iOS.Tabbedbar\r\n* Ti.UI.iOS.Toolbar\r\n\r\nWe need to see if there is a reasonable way to still enforce that the abstract types for these components only occur in these components, but also allow them the full processing that generateNode() provides. Separate parsers may need to be written for all abstract types as well.",
		"attachment": [],
		"flagged": false,
		"summary": "Abstract types in markup do not currently support platform, formFactor, or inline event attributes",
		"creator": {
			"name": "tlukasavage",
			"key": "tlukasavage",
			"displayName": "Tony Lukasavage",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "tlukasavage",
			"key": "tlukasavage",
			"displayName": "Tony Lukasavage",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"comment": {
			"comments": [],
			"maxResults": 0,
			"total": 0,
			"startAt": 0
		}
	}
}