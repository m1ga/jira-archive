{
	"id": "105767",
	"key": "ALOY-408",
	"fields": {
		"issuetype": {
			"id": "2",
			"description": "A new feature of the product, which has yet to be developed.",
			"name": "New Feature",
			"subtask": false
		},
		"project": {
			"id": "11113",
			"key": "ALOY",
			"name": "Alloy",
			"projectCategory": {
				"id": "10400",
				"description": "Tools for developing applications",
				"name": "Tooling"
			}
		},
		"fixVersions": [],
		"resolution": {
			"id": "2",
			"description": "The problem described is an issue which will never be fixed.",
			"name": "Won't Fix"
		},
		"resolutiondate": "2013-01-10T14:43:13.000+0000",
		"created": "2012-11-30T20:13:35.000+0000",
		"priority": {
			"name": "High",
			"id": "2"
		},
		"labels": [
			"notable"
		],
		"versions": [
			{
				"id": "14633",
				"description": "Alloy 0.3.3",
				"name": "Alloy 0.3.3",
				"archived": false,
				"released": true,
				"releaseDate": "2012-11-30"
			}
		],
		"issuelinks": [
			{
				"id": "23231",
				"type": {
					"id": "10020",
					"name": "Depends",
					"inward": "is dependent of",
					"outward": "depends on"
				},
				"inwardIssue": {
					"id": "101530",
					"key": "ALOY-284",
					"fields": {
						"summary": "Accept Titanium SDK constants in the XML markup",
						"status": {
							"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
							"name": "Resolved",
							"id": "5",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Medium",
							"id": "3"
						},
						"issuetype": {
							"id": "2",
							"description": "A new feature of the product, which has yet to be developed.",
							"name": "New Feature",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": {
			"name": "tlukasavage",
			"key": "tlukasavage",
			"displayName": "Tony Lukasavage",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2014-01-28T23:18:04.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "12329",
				"name": "Runtime",
				"description": "Generic bucket for uncategorized runtime issues"
			},
			{
				"id": "12326",
				"name": "XML",
				"description": "View XML and parsing"
			}
		],
		"description": "Currently, unless explicitly handled in a parser, all attribute values from XML attributes are treated as strings, as is the standard for XML. It would be nice for developers to have a means of putting numbers, objects, constants, or even JS in those attributes and have them be processed appropriately. To do this, we should introduce a new syntax inside the attribute values that would indicate that a value should be interpreted literally in the generated JS. \r\n\r\nAs much as I'd like to keep it in line with underscore's templating, *<%=%>*, I want to avoid having the additional angle brackets in the XML. I like the idea of using {} to wrap the value, since we are going to use this for model-view binding. We just need a prefix for it to indicate that it is not used for binding, but instead for literal JS. For that reason, I wanted to use *#{}* for the syntax. Initially I thought of using *${}*, but *$* has some meaning as it relates to controllers in Alloy and I didn't want this to be confusing. I think *#{}* is clear and simple, but I am open to alternatives. \r\n\r\nh4. examples\r\n{code:xml}\r\n<Label text=\"my string\" height=\"#{Ti.UI.SIZE}\"/>\r\n{code}\r\n\r\n{code:xml}\r\n<Button systemButton=\"#{Ti.UI.iPhone.SystemButton.ADD}\"/>\r\n{code}\r\n\r\n{code:xml}\r\n<ButtonBar labels=\"#{['label1','label2','label3']}\"/>\r\n{code}\r\n\r\nObviously some of the possible uses wouldn't be considered \"best practices\", but this functionality would be a great catch all for introducing some dynamism into the XML attribute values while we come up with tighter more concise integrations. Essentially it will prevent developers from saying \"I wish I could specify some XXXXXX value in the markup\".",
		"attachment": [],
		"flagged": false,
		"summary": "Create special notation for js, constants, etc... in XML attributes of views",
		"creator": {
			"name": "tlukasavage",
			"key": "tlukasavage",
			"displayName": "Tony Lukasavage",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "tlukasavage",
			"key": "tlukasavage",
			"displayName": "Tony Lukasavage",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "233866",
					"author": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Titanium constants covered by ALOY-284. Will create specific tickets for new syntax is use cases arise for putting more complex notation in markup attributes.",
					"updateAuthor": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2013-01-10T14:43:13.000+0000",
					"updated": "2013-01-10T14:43:13.000+0000"
				}
			],
			"maxResults": 1,
			"total": 1,
			"startAt": 0
		}
	}
}