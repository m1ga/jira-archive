{
	"id": "107114",
	"key": "ALOY-456",
	"fields": {
		"issuetype": {
			"id": "4",
			"description": "An improvement or enhancement to an existing feature or task.",
			"name": "Improvement",
			"subtask": false
		},
		"project": {
			"id": "11113",
			"key": "ALOY",
			"name": "Alloy",
			"projectCategory": {
				"id": "10400",
				"description": "Tools for developing applications",
				"name": "Tooling"
			}
		},
		"fixVersions": [
			{
				"id": "14771",
				"description": "Alloy 0.3.5",
				"name": "Alloy 0.3.5",
				"archived": false,
				"released": true,
				"releaseDate": "2013-01-18"
			},
			{
				"id": "14871",
				"description": "2013 Sprint 02",
				"name": "2013 Sprint 02",
				"archived": true,
				"released": true,
				"releaseDate": "2013-01-28"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2013-01-17T20:07:12.000+0000",
		"created": "2012-12-27T19:11:18.000+0000",
		"priority": {
			"name": "Medium",
			"id": "3"
		},
		"labels": [
			"alloy",
			"notable"
		],
		"versions": [],
		"issuelinks": [
			{
				"id": "24661",
				"type": {
					"id": "10020",
					"name": "Depends",
					"inward": "is dependent of",
					"outward": "depends on"
				},
				"inwardIssue": {
					"id": "108071",
					"key": "ALOY-470",
					"fields": {
						"summary": "models/sql_queries test app",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "High",
							"id": "2"
						},
						"issuetype": {
							"id": "2",
							"description": "A new feature of the product, which has yet to be developed.",
							"name": "New Feature",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "24636",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"outwardIssue": {
					"id": "103916",
					"key": "ALOY-345",
					"fields": {
						"summary": "Load pre-existing SQLite DBs with sql adapter",
						"status": {
							"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
							"name": "Resolved",
							"id": "5",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Medium",
							"id": "3"
						},
						"issuetype": {
							"id": "4",
							"description": "An improvement or enhancement to an existing feature or task.",
							"name": "Improvement",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": null,
		"updated": "2018-03-07T22:25:48.000+0000",
		"status": {
			"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
			"name": "Resolved",
			"id": "5",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "12329",
				"name": "Runtime",
				"description": "Generic bucket for uncategorized runtime issues"
			}
		],
		"description": "h2. update\r\n\r\nAlloy will support multiple sqlite databases in an app one of two ways:\r\n\r\n1. By adding the *db_name* property to the *definition.adapter* object to identify the name of the database you would like to use/create. See here: [LINK COMING]\r\n2. By loading from an existing database with the *db_file* field (from ALOY-345). Alloy will automatically use the basename of the file as the database. So if your db_file is \"myapp.sqlite\", then alloy will automatically use \"myapp\" as the database for all operations. \r\n\r\nIt would be nice to be able to pass a database filename as part of the model.config.adapter when creating a SQL model - instead of defaulting to the _alloy_ database name. This would be helpful for situations where we might want to have multiple databases with differing configurations - for example: one database which is shared over iCloud, and one which is unshared and stored in the cahe directory.\r\n",
		"attachment": [],
		"flagged": false,
		"summary": "Support multiple databases in sql adapter",
		"creator": {
			"name": "simon.giles",
			"key": "simon.giles",
			"displayName": "Simon Giles",
			"active": true,
			"timeZone": "America/New_York"
		},
		"subtasks": [],
		"reporter": {
			"name": "simon.giles",
			"key": "simon.giles",
			"displayName": "Simon Giles",
			"active": true,
			"timeZone": "America/New_York"
		},
		"environment": "Titanium 3.0.0.GA, Alloy 0.3.4",
		"comment": {
			"comments": [
				{
					"id": "234865",
					"author": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "test app: https://github.com/appcelerator/alloy/tree/master/test/apps/models/sql_queries",
					"updateAuthor": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2013-01-17T20:07:12.000+0000",
					"updated": "2013-01-17T20:07:12.000+0000"
				}
			],
			"maxResults": 1,
			"total": 1,
			"startAt": 0
		}
	}
}