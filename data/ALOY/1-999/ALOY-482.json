{
	"id": "108400",
	"key": "ALOY-482",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "11113",
			"key": "ALOY",
			"name": "Alloy",
			"projectCategory": {
				"id": "10400",
				"description": "Tools for developing applications",
				"name": "Tooling"
			}
		},
		"fixVersions": [
			{
				"id": "14634",
				"description": "Alloy 1.0.0",
				"name": "Alloy 1.0.0",
				"archived": false,
				"released": true,
				"releaseDate": "2013-02-19"
			},
			{
				"id": "14871",
				"description": "2013 Sprint 02",
				"name": "2013 Sprint 02",
				"archived": true,
				"released": true,
				"releaseDate": "2013-01-28"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2013-01-23T22:14:43.000+0000",
		"created": "2013-01-22T22:26:34.000+0000",
		"priority": {
			"name": "High",
			"id": "2"
		},
		"labels": [],
		"versions": [],
		"issuelinks": [
			{
				"id": "25043",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"outwardIssue": {
					"id": "108454",
					"key": "TIMOB-12399",
					"fields": {
						"summary": "iOS: No reliable way to remove all children from a proxy, and know when they are gone",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "High",
							"id": "2"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "25044",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"inwardIssue": {
					"id": "108459",
					"key": "ALOY-485",
					"fields": {
						"summary": "Collection binding on views for iOS incorrectly repopulating UI",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "High",
							"id": "2"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": null,
		"updated": "2018-03-07T22:26:01.000+0000",
		"status": {
			"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
			"name": "Resolved",
			"id": "5",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "12329",
				"name": "Runtime",
				"description": "Generic bucket for uncategorized runtime issues"
			}
		],
		"description": "When running the models/journal test app, I'm getting a series of this warning in the console:\r\n\r\n{code}\r\n[DEBUG] [WARN] Called remove for [object container] on [object scroll], but [object container] isn't a child or has already been removed.\r\n[DEBUG] [WARN] Called remove for [object container] on [object scroll], but [object container] isn't a child or has already been removed.\r\n[DEBUG] [WARN] Called remove for [object container] on [object scroll], but [object container] isn't a child or has already been removed.\r\n{code}\r\n\r\nand in the app the entries are not being cleared after the fetch(), causing lots of duplicates to appear in the scrollview. We need to figure out a reliable way to empty all views from a proxy's view hierarchy.",
		"attachment": [],
		"flagged": false,
		"summary": "View-based collection binding not properly clearing children before repopulating",
		"creator": {
			"name": "tlukasavage",
			"key": "tlukasavage",
			"displayName": "Tony Lukasavage",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "tlukasavage",
			"key": "tlukasavage",
			"displayName": "Tony Lukasavage",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "235591",
					"author": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "The problem has been resolved in models/journal test app for ios by refactoring the add.js controller to only trigger binding once per entry, but a deeper problem still exists in iOS TIMOB that can cause this issue to appear in less scrutinized collection binding code for views. This issue has been logged as TIMOB-12399.",
					"updateAuthor": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2013-01-23T22:14:43.000+0000",
					"updated": "2013-01-23T22:14:43.000+0000"
				}
			],
			"maxResults": 1,
			"total": 1,
			"startAt": 0
		}
	}
}