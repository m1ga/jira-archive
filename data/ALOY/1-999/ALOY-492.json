{
	"id": "108004",
	"key": "ALOY-492",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "11113",
			"key": "ALOY",
			"name": "Alloy",
			"projectCategory": {
				"id": "10400",
				"description": "Tools for developing applications",
				"name": "Tooling"
			}
		},
		"fixVersions": [
			{
				"id": "14872",
				"description": "2013 Sprint 03",
				"name": "2013 Sprint 03",
				"archived": true,
				"released": true,
				"releaseDate": "2013-02-11"
			}
		],
		"resolution": {
			"id": "7",
			"description": "",
			"name": "Invalid"
		},
		"resolutiondate": "2013-01-30T17:25:57.000+0000",
		"created": "2013-01-16T18:48:11.000+0000",
		"priority": {
			"name": "Medium",
			"id": "3"
		},
		"labels": [
			"leftnavbutton",
			"rightnavbar",
			"tableviewsection"
		],
		"versions": [],
		"issuelinks": [
			{
				"id": "24615",
				"type": {
					"id": "10002",
					"name": "Duplicate",
					"inward": "is duplicated by",
					"outward": "duplicates"
				},
				"outwardIssue": {
					"id": "107939",
					"key": "ALOY-466",
					"fields": {
						"summary": "Alloy TableViews with sections not reliably passing 'click' events ",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "High",
							"id": "2"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": {
			"name": "tlukasavage",
			"key": "tlukasavage",
			"displayName": "Tony Lukasavage",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2014-01-28T23:55:20.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "12329",
				"name": "Runtime",
				"description": "Generic bucket for uncategorized runtime issues"
			}
		],
		"description": "The bug can reliably be reproduced. The attached code can reproduce it. The expected behavior is to add a row to the tableviewsection. However, once we add the row and rerender the tableview (with setData), all of the eventlisteners on the tableview stop working (even the ones on other rows).\r\n\r\nThere are some weird ways to workaround the bug (but none of them can be used in my case and that's why I'm reporting this):\r\n\r\n*If you only have the rightNavBAr or leftNavbar (not both). Not even sure why this is related but if you remove one of buttons, it just works!\r\n\r\n*Use InsertRowAfter (or appendRow) instead of setData to add the row to the section. This approach works but the issue is if you don't have any row in a section and want to add a row to that section, it just won't work.\r\n\r\n*move win.open() to somewhere after setData in the code. This approach also works but I cannot really do it in my case.\r\n\r\nAll of the workarounds look pretty bizarre to me and I don't even know why they work.\r\n\r\n",
		"attachment": [
			{
				"id": "34800",
				"filename": "index.js",
				"author": {
					"name": "ffadaie",
					"key": "ffadaie",
					"displayName": "farid fadaie",
					"active": true,
					"timeZone": "America/Los_Angeles"
				},
				"created": "2013-01-16T18:48:11.000+0000",
				"size": 409,
				"mimeType": "text/javascript"
			},
			{
				"id": "34799",
				"filename": "index.xml",
				"author": {
					"name": "ffadaie",
					"key": "ffadaie",
					"displayName": "farid fadaie",
					"active": true,
					"timeZone": "America/Los_Angeles"
				},
				"created": "2013-01-16T18:48:11.000+0000",
				"size": 566,
				"mimeType": "text/xml"
			}
		],
		"flagged": false,
		"summary": "Events are blocked in special cases in TableViewSection",
		"creator": {
			"name": "ffadaie",
			"key": "ffadaie",
			"displayName": "farid fadaie",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "ffadaie",
			"key": "ffadaie",
			"displayName": "farid fadaie",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": "ios",
		"comment": {
			"comments": [
				{
					"id": "234724",
					"author": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Duplicate of ALOY-466",
					"updateAuthor": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2013-01-17T05:49:01.000+0000",
					"updated": "2013-01-17T05:49:01.000+0000"
				},
				{
					"id": "236456",
					"author": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "reopening as it may not be an exact duplicate of ALOY-466",
					"updateAuthor": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2013-01-29T18:19:23.000+0000",
					"updated": "2013-01-29T18:19:23.000+0000"
				},
				{
					"id": "236472",
					"author": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "What is the goal of this test sample? It's really confusing. It's also tough to know how it should layout with no TSS file for the style. Why are you executing this line:\n\n{code:javascript}\n$.tableView.setData($.tableView.data)\n{code}\n\nThat's going to reinitialize the table with its existing data, which would explain why all of your prior changes would be gone.  Also, you'd be better suited to put the onClick on the table itself, not on each row. It will be much faster and you can still access the individual row in the handler:\n\n{code:javascript}\nfunction onClickHandler(e) {\n    var row = e.row;\n}\n{code}",
					"updateAuthor": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2013-01-29T19:00:20.000+0000",
					"updated": "2013-01-29T19:00:20.000+0000"
				},
				{
					"id": "236558",
					"author": {
						"name": "ffadaie",
						"key": "ffadaie",
						"displayName": "farid fadaie",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Let me just explain that this is a complete sample (just create a project and add use this as index.js and index.xml. You don't really need the tss here (for reproducing the bug). It's not the best way to communicate this but bare with me. I'll try to explain.\r\n\r\n\"That's going to reinitialize the table with its existing data, which would explain why all of your prior changes would be gone.\"\r\nThere is no prior listener attached. The only listener is the one that is attached to the Row. \r\n\r\nI am not sure why using $.tableView.setData($.tableView.data) just to rerender the table (to basically show the newly added rows) should remove the listener that is attached to one of the rows. Having said that, if you remove Alloy from the equation everything works in Titanium.\r\n\r\nWhat you are suggesting (to attach the handler to the table and not the row) is possible but it's a pain to handle complex objects with it when you are dynamically creating the rows and attaching functions with various scopes to them. Handling all cases in one big function that is attached to the table (as oppose to the row) just makes the code unreadable and complex.",
					"updateAuthor": {
						"name": "ffadaie",
						"key": "ffadaie",
						"displayName": "farid fadaie",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2013-01-30T07:49:53.000+0000",
					"updated": "2013-01-30T07:50:51.000+0000"
				},
				{
					"id": "236569",
					"author": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "$.tableView.setData($.tableView.data) is not going to add new items, it's just going to re-render what's already in it. Perhaps you were storing the table data in an array or something when you were developing without Alloy? I need to see what you were doing without Alloy to see how perhaps it got messed up in translation. I'm pretty sure you think $.tableView.setData($.tableView.data) is doing something that it's not, but I'll need to see the non-Alloy code to be sure.\r\n\r\nI think the table handling the click can be handled without making the code unreadable and complex, but that is your preference, that is up to you. It will be less performant than allowing the table to handle the clicks, though.",
					"updateAuthor": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2013-01-30T12:56:50.000+0000",
					"updated": "2013-01-30T12:58:46.000+0000"
				},
				{
					"id": "236586",
					"author": {
						"name": "ffadaie",
						"key": "ffadaie",
						"displayName": "farid fadaie",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "var x = Ti.UI.createTableViewRow({title:'test'});\r\nx.addEventListener('click', function(){alert('yy')});\r\n$.projects.add(x);\r\n$.tableView.setData($.tableView.data)\r\n\r\n$.projects is already a section in $.tableView (look at index.xml). Adding a row to this section adds it to the table. You just have to rerender it to see it. This part of the code actually works. \r\n\r\nWhen/if you run this code, you will see this new row actually gets added to $.projects section BUT for some reason x.addEventListener('click', function(){alert('yy')}) gets forgotten. Basically it's like this line is not there. Everything else works.\r\n\r\n",
					"updateAuthor": {
						"name": "ffadaie",
						"key": "ffadaie",
						"displayName": "farid fadaie",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2013-01-30T17:03:41.000+0000",
					"updated": "2013-01-30T17:03:41.000+0000"
				},
				{
					"id": "236589",
					"author": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "This app works fine if you remove the window you are overlaying on the table. It is likely receiving those click events and causing the problem, despite its transparency. I understand that the native highlight is still firing on the table, but that is likely an iOS platform issue. You should probably consider just using Ti.UI.View to overlay in iOS apps rather than a full-blown Ti.UI.Window to prevent this going forward.\n\nIn the future, please reduce your issue down to the smallest test case possible. It would have saved us a lot of time here. For reference, this code works exactly as you would expect it to:\n\n{code:xml}\n<Alloy>\n\t<Window id=\"rightMenu\">\n\t\t<TableView id=\"tableView\">\n\t\t\t<TableViewSection id=\"projects\">\n\t\t\t\t<TableViewRow onClick=\"clicked\" class=\"right_menu_item\" title=\"Sign out\" >\n\t\t\t\t</TableViewRow>\n\t\t\t</TableViewSection>\n\t\t\t<TableViewSection id=\"section2\">\n\t\t\t\t<TableViewRow onClick=\"clicked\" class=\"right_menu_item\" title=\"Account\" >\n\t\t\t\t</TableViewRow>\n\t\t\t</TableViewSection>\n\t\t</TableView>\n\t</Window>\n</Alloy>\n{code}\n\n{code:javascript}\nfunction clicked(){alert('clicked')}\n\n$.rightMenu.open();\n\nvar x = Ti.UI.createTableViewRow({title:'test'});\nx.addEventListener('click', function(){alert('yy')});\n$.projects.add(x);\n$.tableView.setData($.tableView.data);\n{code}",
					"updateAuthor": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2013-01-30T17:25:36.000+0000",
					"updated": "2013-01-30T17:25:36.000+0000"
				},
				{
					"id": "236601",
					"author": {
						"name": "ffadaie",
						"key": "ffadaie",
						"displayName": "farid fadaie",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I am not sure if this is an IoS issue. If you just don't use Alloy and stick to the original titanium it just works (without any change in its architecture) \r\n\r\nWe did try to get the sample to its minimum but the issue is weird and the sample code that I sent was the smallest that we could come up with. The actual code is much bigger/more complex than this. But I understand what you are saying and will try :)",
					"updateAuthor": {
						"name": "ffadaie",
						"key": "ffadaie",
						"displayName": "farid fadaie",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2013-01-30T17:49:21.000+0000",
					"updated": "2013-01-30T17:49:50.000+0000"
				},
				{
					"id": "236610",
					"author": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Again, you haven't shared your non-Alloy equivalent of this test case, so I can make no assessment of it. Not just the few lines in question, but the actual test case.",
					"updateAuthor": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2013-01-30T17:58:20.000+0000",
					"updated": "2013-01-30T17:58:20.000+0000"
				}
			],
			"maxResults": 9,
			"total": 9,
			"startAt": 0
		}
	}
}