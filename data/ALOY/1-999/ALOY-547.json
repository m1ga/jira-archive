{
	"id": "110560",
	"key": "ALOY-547",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "11113",
			"key": "ALOY",
			"name": "Alloy",
			"projectCategory": {
				"id": "10400",
				"description": "Tools for developing applications",
				"name": "Tooling"
			}
		},
		"fixVersions": [
			{
				"id": "15271",
				"description": "Alloy 1.1.0, concurrent with SDK 3.1.0",
				"name": "Alloy 1.1.0",
				"archived": false,
				"released": true,
				"releaseDate": "2013-04-16"
			},
			{
				"id": "14875",
				"description": "2013 Sprint 06",
				"name": "2013 Sprint 06",
				"archived": true,
				"released": true,
				"releaseDate": "2013-03-25"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2013-03-18T21:15:11.000+0000",
		"created": "2013-03-04T13:48:07.000+0000",
		"priority": {
			"name": "High",
			"id": "2"
		},
		"labels": [
			"alloy",
			"require",
			"tss",
			"widget"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "tlukasavage",
			"key": "tlukasavage",
			"displayName": "Tony Lukasavage",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2013-05-01T14:56:28.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "12329",
				"name": "Runtime",
				"description": "Generic bucket for uncategorized runtime issues"
			},
			{
				"id": "12326",
				"name": "XML",
				"description": "View XML and parsing"
			}
		],
		"description": "Assuming you have an `index.xml` like:\r\n\r\n{code}\r\n<Alloy>\r\n  <Window>\r\n    <Widget src=\"my.allow.widget\" id=\"myId\" />\r\n  </Window>\r\n</Alloy>\r\n{code}\r\n\r\nAnd an `index.tss` like:\r\n\r\n{code}\r\n\"Widget\": {\r\n  top: 50\r\n}\r\n{code}\r\n\r\nThe compiled `index.js` will contain:\r\n\r\n{code}\r\n$.__views.myId = Alloy.createWidget(\"my.allow.widget\", \"widget\", {\r\n  id: \"myId\"\r\n});\r\n{code}\r\n\r\nWhile the following `index.tss`:\r\n\r\n{code}\r\n\"Require\": {\r\n  top: 50\r\n}\r\n{code}\r\n\r\nResults in the expected:\r\n\r\n{code}\r\n$.__views.myId = Alloy.createWidget(\"my.allow.widget\", \"widget\", {\r\n  top: 50,\r\n  id: \"myId\"\r\n});\r\n{code}\r\n\r\nI've ran into more examples where `<Widget />` does not inherit all functionality of `<Require />` in a correct way. Maybe it would be good idea just to replace `<Widget />` by `<Require type=\"widget\" />` as the first step in compilation so we don't have to take care of `<Widget />` anymore in the further compilation process?",
		"attachment": [],
		"flagged": false,
		"summary": "TSS selector Widget doesn't work like Require does",
		"creator": {
			"name": "fokkezb",
			"key": "fokke",
			"displayName": "Fokke Zandbergen",
			"active": true,
			"timeZone": "Europe/Amsterdam"
		},
		"subtasks": [],
		"reporter": {
			"name": "fokkezb",
			"key": "fokke",
			"displayName": "Fokke Zandbergen",
			"active": true,
			"timeZone": "Europe/Amsterdam"
		},
		"environment": "Any",
		"comment": {
			"comments": [
				{
					"id": "242758",
					"author": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "If you look at the <Widget> parser, it is in fact just a <Require type=\"widget\"> call. The reason this issue surfaced is that I change the node name and type attribute to \"widget\" when I encounter the <Widget> element, then pass the node into the parser, as widgets and requires are processed with the same parser. The problem with styling occurs because I later use a conditional based on the node name to determine what type of API is being styled. In your case above, the <Widget> elements, but the time i was done manipulating, were actually <Require>. I made a fix to that conditional check and now you can generically apply styles to <Widget>'s.",
					"updateAuthor": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2013-03-18T21:15:11.000+0000",
					"updated": "2013-03-18T21:15:11.000+0000"
				},
				{
					"id": "246743",
					"author": {
						"name": "fcasali",
						"key": "fcasali",
						"displayName": "Federico Casali",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Verified fixed.\n\nAlloy 1.1.0-cr\nCLI version 3.1.0-cr\nTiSDK : 3.1.0.v20130408154547 (RC)\nAndroid and iOS",
					"updateAuthor": {
						"name": "fcasali",
						"key": "fcasali",
						"displayName": "Federico Casali",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2013-04-09T21:37:14.000+0000",
					"updated": "2013-04-09T21:37:14.000+0000"
				}
			],
			"maxResults": 2,
			"total": 2,
			"startAt": 0
		}
	}
}