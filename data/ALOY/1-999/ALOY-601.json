{
	"id": "111412",
	"key": "ALOY-601",
	"fields": {
		"issuetype": {
			"id": "2",
			"description": "A new feature of the product, which has yet to be developed.",
			"name": "New Feature",
			"subtask": false
		},
		"project": {
			"id": "11113",
			"key": "ALOY",
			"name": "Alloy",
			"projectCategory": {
				"id": "10400",
				"description": "Tools for developing applications",
				"name": "Tooling"
			}
		},
		"fixVersions": [
			{
				"id": "15395",
				"description": "2013 Sprint 07",
				"name": "2013 Sprint 07",
				"archived": true,
				"released": true,
				"releaseDate": "2013-04-08"
			}
		],
		"resolution": {
			"id": "7",
			"description": "",
			"name": "Invalid"
		},
		"resolutiondate": "2013-04-05T12:10:43.000+0000",
		"created": "2013-03-19T18:56:13.000+0000",
		"priority": null,
		"labels": [
			"alloy",
			"alloy-cli",
			"cli"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "tlukasavage",
			"key": "tlukasavage",
			"displayName": "Tony Lukasavage",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2014-01-28T23:55:23.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [],
		"description": "When building an app for distribution purposes (in my case, ad-hoc distribution of an iPhone app to send to beta testers), I would like the build to use development or test environment variables (env:development, env:test) set in config.json instead of production variables (env:production). This would allow me to create a build that points to development backend services and test data and would be perfect for testing purposes. \r\n\r\nIt would avoid the pitfalls of manually changing paths, datasources, etc before build and changing them back when ready for production.\r\n\r\nPerhaps this feature could exist as a flag or a setting in build config.\r\n\r\noriginal discussion here:\r\nhttp://developer.appcelerator.com/question/149729/deploy-ios-ad-hoc-using-dev-environment-variables-in-configjson#answer-258914",
		"attachment": [],
		"flagged": false,
		"summary": "Use env variables from config.json for distributed builds",
		"creator": {
			"name": "ddeparolesa",
			"key": "ddeparolesa",
			"displayName": "David DeParolesa",
			"active": true,
			"timeZone": "America/New_York"
		},
		"subtasks": [],
		"reporter": {
			"name": "penrique",
			"key": "penrique",
			"displayName": "Pedro Enrique",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"environment": "Titanium 3.0.2.GA and Alloy 1.0.0",
		"comment": {
			"comments": [
				{
					"id": "245935",
					"author": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "You'll have to do this from the command line, as there's no option for it in TiStudio, but you can define an explicit \"deploytype\" for your alloy compile process. For example, if I want to compile alloy for ios and a \"development\" environment regardless of what the CLI thinks, I would do this:\r\n\r\n{code}\r\nalloy compile --config platform=ios,deploytype=development\r\n{code}\r\n\r\nNotice that there's no space between the comma, it's all one string after --config",
					"updateAuthor": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2013-04-05T12:10:43.000+0000",
					"updated": "2013-04-05T12:10:43.000+0000"
				}
			],
			"maxResults": 1,
			"total": 1,
			"startAt": 0
		}
	}
}