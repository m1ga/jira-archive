{
	"id": "92168",
	"key": "ALOY-64",
	"fields": {
		"issuetype": {
			"id": "5",
			"description": "The sub-task of the issue",
			"name": "Sub-task",
			"subtask": true
		},
		"parent": {
			"id": "91421",
			"key": "ALOY-43",
			"fields": {
				"summary": "The user want to use CSS and style by id, class and style attribute.",
				"status": {
					"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
					"name": "Closed",
					"id": "6",
					"statusCategory": {
						"id": 3,
						"key": "done",
						"colorName": "green",
						"name": "Done"
					}
				},
				"priority": {
					"name": "High",
					"id": "2"
				},
				"issuetype": {
					"id": "7",
					"description": "gh.issue.story.desc",
					"name": "Story",
					"subtask": false
				}
			}
		},
		"project": {
			"id": "11113",
			"key": "ALOY",
			"name": "Alloy",
			"projectCategory": {
				"id": "10400",
				"description": "Tools for developing applications",
				"name": "Tooling"
			}
		},
		"fixVersions": [
			{
				"id": "14036",
				"description": "2012 Sprint 14",
				"name": "2012 Sprint 14",
				"archived": true,
				"released": true,
				"releaseDate": "2012-07-19"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2012-07-19T11:52:05.000+0000",
		"created": "2012-05-22T13:37:46.000+0000",
		"priority": {
			"name": "High",
			"id": "2"
		},
		"labels": [],
		"versions": [
			{
				"id": "14036",
				"description": "2012 Sprint 14",
				"name": "2012 Sprint 14",
				"archived": true,
				"released": true,
				"releaseDate": "2012-07-19"
			}
		],
		"issuelinks": [],
		"assignee": {
			"name": "tlukasavage",
			"key": "tlukasavage",
			"displayName": "Tony Lukasavage",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2014-06-22T13:21:03.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "12326",
				"name": "XML",
				"description": "View XML and parsing"
			}
		],
		"description": "Currently we only support a subset of CSS selectors. We need to be able to handle child \\(>\\), grouping (,), siblings \\(+\\), and pseudo classes \\(:\\) as well\r\n\r\nh2. Update\r\n\r\nWe will likely support only ID, class, and possibly CSS attribute selectors in the first pass.",
		"attachment": [],
		"flagged": false,
		"summary": "Need to handle all selector types",
		"creator": {
			"name": "tlukasavage",
			"key": "tlukasavage",
			"displayName": "Tony Lukasavage",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "tlukasavage",
			"key": "tlukasavage",
			"displayName": "Tony Lukasavage",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "195627",
					"author": {
						"name": "rmcmahon",
						"key": "rmcmahon",
						"displayName": "Russell McMahon",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I thought Sizzle handled these?\r\n",
					"updateAuthor": {
						"name": "rmcmahon",
						"key": "rmcmahon",
						"displayName": "Russell McMahon",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-05-22T13:42:54.000+0000",
					"updated": "2012-05-22T13:42:54.000+0000"
				},
				{
					"id": "195629",
					"author": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "It does, but not until we get the CSS from the generated parser's format into one that Sizzle can actually handle. We can select elements with {{$Ti}} right now with any selector, but we can't apply CSS in the same fashion yet.",
					"updateAuthor": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-05-22T13:46:55.000+0000",
					"updated": "2012-05-22T13:46:55.000+0000"
				},
				{
					"id": "195631",
					"author": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "The core of the problem lies in the fact that we are specifying styles in CSS format, not JSON as they are used, which requires us to run them through the CSS generated parser before using them. The JSON output of the generated parser is not usable by itself, it needs to be converted to a form to which we can apply Sizzle before it's useful.",
					"updateAuthor": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-05-22T13:53:36.000+0000",
					"updated": "2012-05-22T13:53:36.000+0000"
				},
				{
					"id": "195642",
					"author": {
						"name": "rmcmahon",
						"key": "rmcmahon",
						"displayName": "Russell McMahon",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "\r\nOkay understood. For pseudo selector like lang and after:content we probably need to spec out, after:content is cool but I'm not sure appropriate for Titanium API.",
					"updateAuthor": {
						"name": "rmcmahon",
						"key": "rmcmahon",
						"displayName": "Russell McMahon",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-05-22T14:23:33.000+0000",
					"updated": "2012-05-22T14:23:33.000+0000"
				},
				{
					"id": "196459",
					"author": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "In light of our recent talks on CSS, the currently supported CSS notation is by id (#myId) or by class (#myClass). I'd also like to create a default, low priority selectors for {{data-ti-api}} types.  For example:\r\n\r\n{code:lang=CSS}\r\n/* by id */\r\n# myId {\r\n    /* list of css properties */\r\n}\r\n\r\n/* by class */\r\n.myClass {\r\n    /* list of css properties */\r\n}\r\n\r\n/* by api type */\r\n[data-ti-api=\"Label\"] {\r\n    -ti-color: '#fff';\r\n}\r\n{code}",
					"updateAuthor": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-05-30T06:43:17.000+0000",
					"updated": "2012-05-30T06:43:36.000+0000"
				},
				{
					"id": "200602",
					"author": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "no longer using CSS ",
					"updateAuthor": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-06-27T11:24:56.000+0000",
					"updated": "2012-06-27T11:24:56.000+0000"
				}
			],
			"maxResults": 6,
			"total": 6,
			"startAt": 0
		}
	}
}