{
	"id": "147713",
	"key": "ALOY-1370",
	"fields": {
		"issuetype": {
			"id": "4",
			"description": "An improvement or enhancement to an existing feature or task.",
			"name": "Improvement",
			"subtask": false
		},
		"project": {
			"id": "11113",
			"key": "ALOY",
			"name": "Alloy",
			"projectCategory": {
				"id": "10400",
				"description": "Tools for developing applications",
				"name": "Tooling"
			}
		},
		"fixVersions": [],
		"resolution": null,
		"resolutiondate": null,
		"created": "2015-05-11T21:17:57.000+0000",
		"priority": {
			"name": "Medium",
			"id": "3"
		},
		"labels": [
			"debugger-ios"
		],
		"versions": [
			{
				"id": "17081",
				"name": "Release 5.2.0",
				"archived": false,
				"released": true,
				"releaseDate": "2016-02-23"
			}
		],
		"issuelinks": [],
		"assignee": null,
		"updated": "2018-04-08T20:58:29.000+0000",
		"status": {
			"description": "The issue is open and ready for the assignee to start work on it.",
			"name": "Open",
			"id": "1",
			"statusCategory": {
				"id": 2,
				"key": "new",
				"colorName": "blue-gray",
				"name": "To Do"
			}
		},
		"components": [],
		"description": "When a breakpoint gets hit, if at the end of that function you step-into, the next JS function will make the debugger stop.\r\n\r\nTo reproduce:\r\n# Create an Alloy app\r\n# Copy the following code into index.js:\r\n{code}\r\nfunction doClick(e) {\r\n    alert($.label.text);\r\n    Ti.API.info(\"Testing Debug\");\r\n}\r\n\r\n$.index.open();\r\n\r\nfunction onInterval() {\r\n\tvar a = 1;\r\n\tvar b = 3;\r\n\tvar c = a + b;\r\n}\r\n\r\n// call every 4 seconds;\r\nsetInterval(onInterval, 4000);\r\n{code}\r\n#Set a breakpoint at line 8 and try to step in too.\r\n\r\nActual result:\r\nThe debugger stops at the {{onInterval}} function\r\n\r\nExpected result\r\nThe debugger should not stop at the {{onInterval}} function\r\n\r\nStudio removes any variables that are not being used like a b and c in the snippet above. Maybe we could disabled this when in debugging an app as oppose to running it. When debugging the users will most likely want to see un-used variables they are using strictly for testing purposes. If its not too much work , maybe we can consider this improvement/new feature. Thanks!  \r\n",
		"attachment": [],
		"flagged": false,
		"summary": "Alloy: Alloy/studio disregards variables that are not being used. ",
		"creator": {
			"name": "penrique",
			"key": "penrique",
			"displayName": "Pedro Enrique",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "apetkov",
			"key": "apetkov",
			"displayName": "Angel Petkov",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "371711",
					"author": {
						"name": "wluu",
						"key": "wluu",
						"displayName": "Wilson Luu",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I can still reproduce this issue on:\r\n\r\nAppcelerator Studio, build: 4.4.0.201511241829\r\nAppc CLI NPM: 4.2.2\r\nAppc CLI Core: 5.1.0\r\nArrow: 1.3.22\r\nSDK: 5.1.1.GA\r\nNode: v4.2.2\r\nOS: El Capitan (10.11.1)\r\nXcode: 7.1.1\r\nDevices: iphone 6 simulator (9.1)",
					"updateAuthor": {
						"name": "wluu",
						"key": "wluu",
						"displayName": "Wilson Luu",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2015-12-01T00:52:55.000+0000",
					"updated": "2015-12-01T00:52:55.000+0000"
				}
			],
			"maxResults": 2,
			"total": 2,
			"startAt": 0
		}
	}
}