{
	"id": "160248",
	"key": "ALOY-1500",
	"fields": {
		"issuetype": {
			"id": "2",
			"description": "A new feature of the product, which has yet to be developed.",
			"name": "New Feature",
			"subtask": false
		},
		"project": {
			"id": "11113",
			"key": "ALOY",
			"name": "Alloy",
			"projectCategory": {
				"id": "10400",
				"description": "Tools for developing applications",
				"name": "Tooling"
			}
		},
		"fixVersions": [],
		"resolution": null,
		"resolutiondate": null,
		"created": "2016-05-13T16:41:28.000+0000",
		"priority": {
			"name": "High",
			"id": "2"
		},
		"labels": [],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "fokkezb",
			"key": "fokke",
			"displayName": "Fokke Zandbergen",
			"active": true,
			"timeZone": "Europe/Amsterdam"
		},
		"updated": "2017-10-30T18:32:55.000+0000",
		"status": {
			"description": "The issue is open and ready for the assignee to start work on it.",
			"name": "Open",
			"id": "1",
			"statusCategory": {
				"id": 2,
				"key": "new",
				"colorName": "blue-gray",
				"name": "To Do"
			}
		},
		"components": [
			{
				"id": "13604",
				"name": "Tooling",
				"description": "Items related to Alloy tooling and workflow"
			}
		],
		"description": "Currently we have not found a way to access elements that are bound. Example I can't change the button color of a button that has been bound inside a table. We've tried:\r\n\r\n$[e.source.id]\r\nthis[e.source.id]\r\neval[e.source.id]\r\n\r\nEither the scope of these elements needs to be documented, or a method to update these should be provided.",
		"attachment": [],
		"flagged": false,
		"summary": "Provide an accessor method for alloy bound elements.",
		"creator": {
			"name": "kdclaw3@gmail.com",
			"key": "kdclaw3@gmail.com",
			"displayName": "Dee Clawson",
			"active": true,
			"timeZone": "America/New_York"
		},
		"subtasks": [],
		"reporter": {
			"name": "kdclaw3@gmail.com",
			"key": "kdclaw3@gmail.com",
			"displayName": "Dee Clawson",
			"active": true,
			"timeZone": "America/New_York"
		},
		"environment": "Ti SDK 5.3",
		"comment": {
			"comments": [
				{
					"id": "385684",
					"author": {
						"name": "sdarda",
						"key": "sdarda",
						"displayName": "Sharif AbuDarda",
						"active": false,
						"timeZone": "Asia/Dhaka"
					},
					"body": "Hello, \r\n\r\nThanks for creating the ticket. Our engineers will look into it. In the mean time can you please provide a visualisation of the feature available in native platform. Possibly in screenshots or in a video?. I will move this ticket to engineering for consideration. Any more information is much appreciated. \r\n\r\n Thanks.",
					"updateAuthor": {
						"name": "sdarda",
						"key": "sdarda",
						"displayName": "Sharif AbuDarda",
						"active": false,
						"timeZone": "Asia/Dhaka"
					},
					"created": "2016-05-13T18:05:09.000+0000",
					"updated": "2016-05-13T18:05:09.000+0000"
				},
				{
					"id": "385783",
					"author": {
						"name": "kdclaw3@gmail.com",
						"key": "kdclaw3@gmail.com",
						"displayName": "Dee Clawson",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "I'm not sure they is a native feature in the native platform. This whole scheme of binding and backbone is something that Appcelerator came up with. This should be a standard feature. \r\n\r\nIf I bind a collection to table, have a onClick method on that bound element. I should be able to access that element somehow. Looking through how alloy compiles in the resources folder it looks to be a basic error in how the elements are created. \r\n\r\nTake binding to a table for example:\r\n{code:javascript}\r\nfor (var i = 0; len > i; i++) {\r\n    //create table view row\r\n    var __alloyId73 = Ti.UI.createButton({\r\n                right: 0,\r\n                top: 20,\r\n                width: 50,\r\n                height: 50,\r\n                backgroundImage: \"/images/assetspec.png\",\r\n                model: _.template(\"{m.id}\", {\r\n                    m: __alloyId63.__transform\r\n                }, {\r\n                    interpolate: /\\{([\\s\\S]+?)\\}/g\r\n                }),\r\n                visible: _.template(\"{m.HAS_SPEC_VISIBLE}\", {\r\n                    m: __alloyId63.__transform\r\n                }, {\r\n                    interpolate: /\\{([\\s\\S]+?)\\}/g\r\n                })\r\n            });\r\n    //close table view row\r\n}\r\n{code}\r\n\r\nI cant access that button because my table has 200 buttons all with the id of __alloyId73. I would think if you did something like add the iterator to decleration with a simple [i] it would solve the problem.\r\n\r\n{code:javascript}\r\nvar __alloyId73[i] = Ti.UI.createButton({\r\n{code}",
					"updateAuthor": {
						"name": "kdclaw3@gmail.com",
						"key": "kdclaw3@gmail.com",
						"displayName": "Dee Clawson",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2016-05-16T11:57:10.000+0000",
					"updated": "2016-05-16T11:57:10.000+0000"
				},
				{
					"id": "385913",
					"author": {
						"name": "kdclaw3@gmail.com",
						"key": "kdclaw3@gmail.com",
						"displayName": "Dee Clawson",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "I have a better use case for this as well. We build forms using tables with a text box in each cell. We want to create a format mask as the user types text into some fields but we can't access the field from the onChange event. The theory is that when the onChange event fires we should check the text fields given text and change it according to the format mask. We can't update the model because we would loose the blur in the field. We can do this no titanium without problem, but the feature isn't there using alloy when we've bound a collection to something because all the text fields have the same, and I believe they are out of scope. ",
					"updateAuthor": {
						"name": "kdclaw3@gmail.com",
						"key": "kdclaw3@gmail.com",
						"displayName": "Dee Clawson",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2016-05-17T16:07:59.000+0000",
					"updated": "2016-05-17T16:07:59.000+0000"
				},
				{
					"id": "386423",
					"author": {
						"name": "fokkezb",
						"key": "fokke",
						"displayName": "Fokke Zandbergen",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"body": "[~kdclaw3@gmail.com] Could you include a very simpel XML view + controller as an example use case of what you'd want to achieve?",
					"updateAuthor": {
						"name": "fokkezb",
						"key": "fokke",
						"displayName": "Fokke Zandbergen",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"created": "2016-05-23T06:48:41.000+0000",
					"updated": "2016-05-23T06:48:41.000+0000"
				},
				{
					"id": "429853",
					"author": {
						"name": "fokkezb",
						"key": "fokke",
						"displayName": "Fokke Zandbergen",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"body": "@hknoechel could you unassign me? ;)",
					"updateAuthor": {
						"name": "fokkezb",
						"key": "fokke",
						"displayName": "Fokke Zandbergen",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"created": "2017-10-30T18:32:55.000+0000",
					"updated": "2017-10-30T18:32:55.000+0000"
				}
			],
			"maxResults": 6,
			"total": 6,
			"startAt": 0
		}
	}
}