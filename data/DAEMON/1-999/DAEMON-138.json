{
	"id": "170303",
	"key": "DAEMON-138",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "12519",
			"key": "DAEMON",
			"name": "Appcelerator Daemon"
		},
		"fixVersions": [],
		"resolution": {
			"id": "10100",
			"description": "This issue won't be actioned.",
			"name": "Won't Do"
		},
		"resolutiondate": "2020-05-07T14:44:31.000+0000",
		"created": "2017-11-14T17:25:21.000+0000",
		"priority": {
			"name": "Trivial",
			"id": "5"
		},
		"labels": [],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "cbarber",
			"key": "cbarber",
			"displayName": "Chris Barber",
			"active": true,
			"timeZone": "America/Chicago"
		},
		"updated": "2020-05-07T14:44:31.000+0000",
		"status": {
			"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
			"name": "Resolved",
			"id": "5",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "15608",
				"name": "appcd-gulp"
			}
		],
		"description": "When trying to get a bit more info about unhandled rejections, Node.js has a flag that can be passed in called {{\\-\\-trace\\-deprecation}}. The idea would be to add this to the {{gulp test/coverage}} task and then we'd see it in the CI logs.\r\n\r\nHowever, when this flag is set, for some reason {{nyc}} blows up because it can't load {{mocha-jenkins-reporter}}. But the rub is {{nyc}} is not supposed to load it. The {{mocha-jenkins-reporter}} is an argument to {{mocha}}, not {{nyc}}.\r\n\r\nWhen adding {{\\-\\-trace\\-deprecation}} and running {{gulp coverage}}, we get the following error:\r\n\r\n{code}\r\nError: Cannot find module '/Users/chris/appc/appc-daemon/node_modules/nyc/node_modules/istanbul-reports/lib/Users/chris/appc/appc-daemon/node_modules/mocha-jenkins-reporter'\r\n    at Function.Module._resolveFilename (module.js:536:15)\r\n    at Function.Module._load (module.js:466:25)\r\n    at Module.require (module.js:579:17)\r\n    at require (internal/module.js:11:18)\r\n    at Object.create (/Users/chris/appc/appc-daemon/node_modules/nyc/node_modules/istanbul-reports/index.js:10:20)\r\n    at /Users/chris/appc/appc-daemon/node_modules/nyc/index.js:451:24\r\n    at Array.forEach (<anonymous>)\r\n    at NYC.report (/Users/chris/appc/appc-daemon/node_modules/nyc/index.js:450:17)\r\n    at report (/Users/chris/appc/appc-daemon/node_modules/nyc/bin/nyc.js:89:7)\r\n    at /Users/chris/appc/appc-daemon/node_modules/nyc/bin/nyc.js:76:25\r\n{code}\r\n\r\nWe can fix that by applying the following patch:\r\n\r\n{code}\r\n+++ b/packages/appcd-gulp/src/templates/standard.js\r\n@@ -159,6 +159,7 @@ module.exports = (opts) => {\r\n        function runTests(cover) {\r\n                const args = [];\r\n                let { execPath } = process;\r\n+               let jenkinsReporter = resolveModule('mocha-jenkins-reporter');\r\n\r\n                // add nyc\r\n                if (cover) {\r\n@@ -178,7 +179,15 @@ module.exports = (opts) => {\r\n                                '--reporter=html',\r\n                                '--reporter=json',\r\n                                '--reporter=text',\r\n-                               '--reporter=text-summary',\r\n+                               '--reporter=text-summary'\r\n+                       );\r\n+                       if (jenkinsReporter) {\r\n+                               args.push('--reporter=' + path.relative(\r\n+                                       resolveModule('istanbul-reports', resolveModule('nyc')),\r\n+                                       jenkinsReporter\r\n+                               ));\r\n+                       }\r\n+                       args.push(\r\n                                '--require', path.resolve(__dirname, '../test-transpile.js'),\r\n                                '--show-process-tree',\r\n                                process.execPath // need to specify node here so that spawn-wrap works\r\n@@ -188,6 +197,8 @@ module.exports = (opts) => {\r\n                        process.env.APPCD_COVERAGE = 1;\r\n                }\r\n\r\n+               args.push('--trace-deprecation');\r\n+\r\n                // add mocha\r\n                const mocha = resolveModule('mocha');\r\n                if (!mocha) {\r\n@@ -201,8 +212,7 @@ module.exports = (opts) => {\r\n                        args.push('--inspect-brk');\r\n                }\r\n\r\n-               const jenkinsReporter = resolveModule('mocha-jenkins-reporter');\r\n-               if (jenkinsReporter) {\r\n+               if (!cover && jenkinsReporter) {\r\n                        args.push(`--reporter=${jenkinsReporter}`);\r\n                }\r\n\r\n@@ -241,13 +251,16 @@ module.exports = (opts) => {\r\n                }\r\n        }\r\n\r\n-       function resolveModule(name) {\r\n+       function resolveModule(name, rel) {\r\n                let dir = path.join(appcdGulpNodeModulesPath, name);\r\n                if (fs.existsSync(dir)) {\r\n                        return dir;\r\n                }\r\n\r\n                try {\r\n+                       if (rel) {\r\n+                               return require.resolve(name, { paths: [ path.join(rel, 'node_modules') ] });\r\n+                       }\r\n                        return path.dirname(require.resolve(name));\r\n                } catch (e) {\r\n                        return null;\r\n{code}\r\n\r\nBut then we run into a problem where {{mocha-jenkins-reporter}} is expecting a {{mocha}} runner object and {{nyc}} doesn't pass one in.\r\n\r\n{code}\r\n/Users/chris/appc/appc-daemon/node_modules/mocha-jenkins-reporter/node_modules/mocha/lib/reporters/base.js:252\r\n  runner.on('start', function () {\r\n         ^\r\n\r\nTypeError: runner.on is not a function\r\n    at Jenkins.Base (/Users/chris/appc/appc-daemon/node_modules/mocha-jenkins-reporter/node_modules/mocha/lib/reporters/base.js:252:10)\r\n    at new Jenkins (/Users/chris/appc/appc-daemon/node_modules/mocha-jenkins-reporter/lib/jenkins.js:40:8)\r\n    at Object.create (/Users/chris/appc/appc-daemon/node_modules/nyc/node_modules/istanbul-reports/index.js:12:16)\r\n    at /Users/chris/appc/appc-daemon/node_modules/nyc/index.js:451:24\r\n    at Array.forEach (<anonymous>)\r\n    at NYC.report (/Users/chris/appc/appc-daemon/node_modules/nyc/index.js:450:17)\r\n    at report (/Users/chris/appc/appc-daemon/node_modules/nyc/bin/nyc.js:89:7)\r\n    at /Users/chris/appc/appc-daemon/node_modules/nyc/bin/nyc.js:76:25\r\n    at ChildProcess.<anonymous> (/Users/chris/appc/appc-daemon/node_modules/nyc/node_modules/foreground-child/index.js:52:5)\r\n    at emitTwo (events.js:126:13)\r\n{code}\r\n\r\nI believe that {{mocha-jenkins-reporter}} should remain an argument to {{mocha}} and not {{nyc}} and that we need to figure out why {{nyc}} is sniping the {{\\-\\-reporter}} arg to mocha. Maybe it's doing a blind scrap on {{process.argv}}?",
		"attachment": [],
		"flagged": false,
		"summary": "appcd-gulp: Coverage tests blow up when --trace-deprecation is set",
		"creator": {
			"name": "cbarber",
			"key": "cbarber",
			"displayName": "Chris Barber",
			"active": true,
			"timeZone": "America/Chicago"
		},
		"subtasks": [],
		"reporter": {
			"name": "cbarber",
			"key": "cbarber",
			"displayName": "Chris Barber",
			"active": true,
			"timeZone": "America/Chicago"
		},
		"environment": null,
		"closedSprints": [
			{
				"id": 1194,
				"state": "closed",
				"name": "2020 Sprint 9",
				"startDate": "2020-04-24T17:09:51.572Z",
				"endDate": "2020-05-08T17:09:00.000Z",
				"completeDate": "2020-05-08T15:40:07.869Z",
				"originBoardId": 114
			}
		],
		"comment": {
			"comments": [
				{
					"id": "455397",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "Just tested this with Node 12.14.1 and despite {{\\-\\-trace\\-deprecation}} being around for years, it still doesn't work with nyc/mocha. I still get the {{runner.on}} error.\r\n\r\nFurthermore, I don't think there's a ton of value in this feature. Calling the deprecated {{util.isArray()}} does not show any deprecation messages anyways. So, dropping this feature.",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2020-05-07T14:44:31.000+0000",
					"updated": "2020-05-07T14:44:31.000+0000"
				}
			],
			"maxResults": 1,
			"total": 1,
			"startAt": 0
		}
	}
}