{
	"id": "154734",
	"key": "DAEMON-9",
	"fields": {
		"issuetype": {
			"id": "2",
			"description": "A new feature of the product, which has yet to be developed.",
			"name": "New Feature",
			"subtask": false
		},
		"project": {
			"id": "12519",
			"key": "DAEMON",
			"name": "Appcelerator Daemon"
		},
		"fixVersions": [
			{
				"id": "20774",
				"description": "",
				"name": "Appc Daemon 2.3.0",
				"archived": false,
				"released": true
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2019-06-05T03:00:18.000+0000",
		"created": "2016-02-04T07:44:08.000+0000",
		"priority": {
			"name": "Medium",
			"id": "3"
		},
		"labels": [],
		"versions": [],
		"issuelinks": [
			{
				"id": "50512",
				"type": {
					"id": "10020",
					"name": "Depends",
					"inward": "is dependent of",
					"outward": "depends on"
				},
				"inwardIssue": {
					"id": "154713",
					"key": "DAEMON-8",
					"fields": {
						"summary": "appcd: System info appc daemon plugin",
						"status": {
							"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
							"name": "Resolved",
							"id": "5",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Critical",
							"id": "1"
						},
						"issuetype": {
							"id": "2",
							"description": "A new feature of the product, which has yet to be developed.",
							"name": "New Feature",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": {
			"name": "cbarber",
			"key": "cbarber",
			"displayName": "Chris Barber",
			"active": true,
			"timeZone": "America/Chicago"
		},
		"updated": "2019-06-05T15:47:07.000+0000",
		"status": {
			"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
			"name": "Resolved",
			"id": "5",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "15054",
				"name": "windowslib",
				"description": "Library for Windows related functions"
			}
		],
		"description": "windowslib needs to be updated to ES6 syntax and expose the new detect friendly interface, namely separating the search paths from the actual detection code.",
		"attachment": [],
		"flagged": false,
		"summary": "windowslib v2",
		"creator": {
			"name": "cbarber",
			"key": "cbarber",
			"displayName": "Chris Barber",
			"active": true,
			"timeZone": "America/Chicago"
		},
		"subtasks": [],
		"reporter": {
			"name": "cbarber",
			"key": "cbarber",
			"displayName": "Chris Barber",
			"active": true,
			"timeZone": "America/Chicago"
		},
		"environment": null,
		"closedSprints": [
			{
				"id": 1141,
				"state": "closed",
				"name": "2019 Sprint 12",
				"startDate": "2019-06-03T22:00:37.435Z",
				"endDate": "2019-06-14T22:00:00.000Z",
				"completeDate": "2019-06-15T03:44:20.826Z",
				"originBoardId": 114
			},
			{
				"id": 1135,
				"state": "closed",
				"name": "2019 Sprint 10",
				"startDate": "2019-05-06T15:32:03.726Z",
				"endDate": "2019-05-19T15:32:00.000Z",
				"completeDate": "2019-05-24T19:50:33.411Z",
				"originBoardId": 228
			}
		],
		"comment": {
			"comments": [
				{
					"id": "427083",
					"author": {
						"name": "eharris",
						"key": "eharris",
						"displayName": "Ewan Harris",
						"active": true,
						"timeZone": "Europe/Dublin"
					},
					"body": "Just dropping some resources for whatever lucky soul picks this up\r\n\r\n[vswhere|https://github.com/Microsoft/vswhere] - Detects visual studio versions, we already use the query APIs in windowslib today, Microsoft has committed to always shipping this with a VS2017 install and imo we should use it.\r\n\r\n[Device Portal|https://docs.microsoft.com/en-us/windows/uwp/debug-test-perf/device-portal] - Once tSurned on by a user on their Windows 10 device, can be accessed through the web browser to perform many actions such as installing apps, performance monitoring, gathering crash data. Backed by REST APIs that should be able to be used https://docs.microsoft.com/en-us/windows/uwp/debug-test-perf/device-portal-api-core\r\n\r\n[winappdeploycmd|https://docs.microsoft.com/en-us/windows/uwp/packaging/install-universal-windows-apps-with-the-winappdeploycmd-tool] - Used in windowslib today to install apps to devic over USB. Works over USB or network. For devices over a network it must be paired by the user.",
					"updateAuthor": {
						"name": "eharris",
						"key": "eharris",
						"displayName": "Ewan Harris",
						"active": true,
						"timeZone": "Europe/Dublin"
					},
					"created": "2017-08-23T08:26:48.000+0000",
					"updated": "2017-08-23T08:26:48.000+0000"
				},
				{
					"id": "431594",
					"author": {
						"name": "eharris",
						"key": "eharris",
						"displayName": "Ewan Harris",
						"active": true,
						"timeZone": "Europe/Dublin"
					},
					"body": "Started drafting some thoughts here https://gist.github.com/ewanharris/6d9cea74b5ec55c837564df599ee6cb4\r\nStarted to set up the v2 branch and scaffold out the project etc.",
					"updateAuthor": {
						"name": "eharris",
						"key": "eharris",
						"displayName": "Ewan Harris",
						"active": true,
						"timeZone": "Europe/Dublin"
					},
					"created": "2017-12-01T14:50:22.000+0000",
					"updated": "2017-12-01T14:50:22.000+0000"
				},
				{
					"id": "431853",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "Reference: Installing the Windows SDK: https://gist.github.com/ewanharris/12968263f2a49d523d146fed09ba8c2d",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2017-12-07T17:32:29.000+0000",
					"updated": "2017-12-07T17:32:29.000+0000"
				},
				{
					"id": "434479",
					"author": {
						"name": "eharris",
						"key": "eharris",
						"displayName": "Ewan Harris",
						"active": true,
						"timeZone": "Europe/Dublin"
					},
					"body": "Seeing as we're punting this for now here's my what's done so far\r\n\r\nwindowslib (https://github.com/ewanharris/windowslib/tree/v2)\r\n\r\n* Detecting devices (uses winappdeploycmd)\r\n* Detecting visualstudio (uses vswhere)\r\n* Detecting vswhere\r\n* Detecting SDKs (8.0 and up), and SDK subcomponents like revisions/extensions\r\n* Tests for majority of the above\r\n\r\nwindows-plugin (https://github.com/ewanharris/appcd-plugin-windows/tree/windowslib_v2)\r\n* Started to wire up windowslib 2\r\n* VS detection and watching is in, tested across a couple of machines and seems to be handling ok, is very manual watching\r\n* Device detection is in, as it uses winappdeploycmd this is still using polling like, I don't like it but without some reverse engineering and c++ code I think it's the best we're gonna get\r\n* SDK detection and watching is in, tested across a couple of machines and seems happy. Does a dumb filter atm to remove 8.0, and 8.1, is build on regkeys and detect engine (yay!)",
					"updateAuthor": {
						"name": "eharris",
						"key": "eharris",
						"displayName": "Ewan Harris",
						"active": true,
						"timeZone": "Europe/Dublin"
					},
					"created": "2018-02-14T15:44:42.000+0000",
					"updated": "2018-02-14T15:44:42.000+0000"
				}
			],
			"maxResults": 4,
			"total": 4,
			"startAt": 0
		}
	}
}