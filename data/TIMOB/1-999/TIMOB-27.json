{
	"id": "60659",
	"key": "TIMOB-27",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [
			{
				"id": "11213",
				"name": "Release 0.7.0",
				"archived": true,
				"released": true,
				"releaseDate": "2009-10-05"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2011-04-17T01:50:10.000+0000",
		"created": "2011-04-15T02:22:41.000+0000",
		"priority": {
			"name": "Medium",
			"id": "3"
		},
		"labels": [
			"facebook",
			"ios",
			"iphone"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "blainhamon",
			"key": "blainhamon",
			"displayName": "Blain Hamon",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2011-04-17T01:50:10.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10206",
				"name": "iOS",
				"description": "iOS Platform"
			}
		],
		"description": "{html}<div><h2>Description</h2>\n<p>The purpose of this API is to enable developers to use the\nFacebook Connect Objective-C API via Javascript</p>\n<h2>Create Session</h2>\n<p>The first step is to create a Facebook Session</p>\n<pre>\n<code class=\"javascript\">\nvar session = Titanium.Facebook.createSession({\n    apiKey:'my_api_key',\n    appSecret:'my_app_secret',\n    proxyURL:'my proxy url'\n});\n\nvar isLoggedIn = session.resume();</code>\n</pre>\n<p>Returns true if user is already logged in, otherwise it returns\nfalse</p>\n<h2>Button Support</h2>\n<p>We need to add support for two Facebook iPhone buttons:</p>\n<pre>\n<code class=\"javascript\">Titanium.Facebook.CONNECT_BUTTON\n\nTitanium.Facebook.LOGOUT_BUTTON</code>\n</pre>\n<p>These should be supported via the systemButton property of the\nTitanium.UI.createButton API.</p>\n<p>Note: the login button when clicked automatically shows the\nLogin Dialog</p>\n<h2>Login Dialog</h2>\n<p>This API creates and displays the Facebook Login Dialog</p>\n<pre>\n<code class=\"javascript\">\nvar dialog = Titanium.Facebook.createLoginDialog({\n    session:mySessionObject,\n});\n\ndialog.show();</code>\n</pre>\n<h2>Login Event</h2>\n<pre>\n<code class=\n\"javascript\">session.addEventListener('login',function(session)\n{\n    // returns the updated session object after successful login\n});</code>\n</pre>\n<h2>Permissions Dialog</h2>\n<p>This API creates and displays the Facebook Extended Permission\nDialog</p>\n<pre>\n<code class=\n\"javascript\">var dialog = Titanium.Facebook.createPermissionsDialog({\n    permission:'permission_string'\n    success:function()\n    {\n       // permission granted - do something cool\n    },\n    cancel: function()\n    {\n       // permission not granted - too bad\n    }\n});\n\ndialog.show();</code>\n</pre>\n<h2>Generic Facebook API Requests</h2>\n<p>This API enables you to call any of the support Facebook Connect\nAPIs</p>\n<pre>\n<code class=\"javascript\">\nvar requestData = {name:'value',name2:'value2'};\n\nvar request = Titanium.Facebook.executeAPI({\n     name:'api_name',\n     data:requestData,\n     function(result)\n     {\n           // result should be JSON object return from API call\n     }\n\n});</code>\n</pre>\n<h2>Feed Dialog</h2>\n<p>This API allows you to publish a story to a user's feed.</p>\n<pre>\n<code class=\"javascript\">\nvar templateDataObj = {key:'value'};\n\nvar dialog = Titanium.Facebook.createFeedDialog({\n      templateBundleId: 12345,\n      templateData: templateDataObj,\n      function(result)\n      {\n         // was post successful\n      }\n});\n\ndialog.show();</code>\n</pre></div>{html}",
		"attachment": [],
		"flagged": false,
		"summary": "API - Facebook Connect Integration",
		"creator": {
			"name": "nwright",
			"key": "nwright",
			"displayName": "Nolan Wright",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "nwright",
			"key": "nwright",
			"displayName": "Nolan Wright",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "122670",
					"author": {
						"name": "jhaynie",
						"key": "jhaynie",
						"displayName": "Jeff Haynie",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><p>A few questions:</p>\n<ul>\n<li>\n<p>I don't like the session.resume() method - seems weird. Is this\ntheir name? Can we just use session.isLoggedIn()? Or is this the\napi that causes session to start? Maybe if it is, we could have a\nsession.connect() to cause it to connect and then\nsession.isLoggedIn() would return true/false depending on if you've\nalready done this (or not).</p>\n</li>\n<li>\n<p>is there an API to see if we already have a permission? i.e. I\ndon't want to show dialog if permission has already been granted...\nhow would you do that?</p>\n</li>\n<li>\n<p>we need a logout capability -- session.logout() ?</p>\n</li>\n</ul></div>{html}",
					"updateAuthor": {
						"name": "jhaynie",
						"key": "jhaynie",
						"displayName": "Jeff Haynie",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T02:22:41.000+0000",
					"updated": "2011-04-15T02:22:41.000+0000"
				},
				{
					"id": "122671",
					"author": {
						"name": "mculpepper",
						"key": "mculpepper",
						"displayName": "Marshall Culpepper",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><p>Facebook connect (and further OAuth) could be a really killer\nfeature for Desktop as well..</p></div>{html}",
					"updateAuthor": {
						"name": "mculpepper",
						"key": "mculpepper",
						"displayName": "Marshall Culpepper",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T02:22:41.000+0000",
					"updated": "2011-04-15T02:22:41.000+0000"
				},
				{
					"id": "122672",
					"author": {
						"name": "jhaynie",
						"key": "jhaynie",
						"displayName": "Jeff Haynie",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><p>I ended up implementing the API a little differently.</p>\n<h1>Create Login/Logout Button</h1>\n<p>Create a Facebook login/logout button and bind it to a specific\nID. You can add and remove listeners from this button once\ncreated.</p>\n<pre>\n<code class=\n\"javascript\">var button = Titanium.Facebook.createLoginButton({\n    'id':'b',\n    'style':'normal',\n    'apikey':Titanium.App.Properties.getString(\"facebook.apikey\"),\n    'secret':Titanium.App.Properties.getString(\"facebook.secret\")\n});\nbutton.addEventListener('login',function()\n{\n    console.info(\"LOGIN\");\n});\nbutton.addEventListener('logout',function()\n{\n    console.info(\"LOGOUT\");\n});</code>\n</pre>\n<p>The style property can either be normal (default if not\nspecified) or wide.</p>\n<h1>Query</h1>\n<p>You can execute FQL query.</p>\n<pre>\n<code class=\n\"javascript\">Titanium.Facebook.query(\"select uid,name from user where uid == \"+Titanium.Facebook.getUserId(),function(r)\n{\n    console.info(\"QUERY RESULT RETURNED success = \"+r.success+\", error = \"+r.error+\", data=\"+r.data);\n});</code>\n</pre>\n<h1>Explicit Login</h1>\n<p>You can cause explicit login</p>\n<pre>\n<code class=\"javascript\">Titanium.Facebook.login(function(result)\n{\n   console.info(\"login success=\"+result.success);\n});</code>\n</pre>\n<h1>Explicit Logout</h1>\n<p>You can cause explicit logout</p>\n<pre>\n<code class=\"javascript\">Titanium.Facebook.logout(function(result)\n{\n   console.info(\"logout success=\"+result.success);\n});</code>\n</pre>\n<h1>Login status</h1>\n<p>You can determine the login status.</p>\n<pre>\n<code class=\"javascript\">Titanium.Facebook.isLoggedIn();</code>\n</pre>\n<h1>Login user id</h1>\n<p>You can determine the user id of the logged in user or null if\nnot logged in</p>\n<pre>\n<code class=\"javascript\">Titanium.Facebook.getUserId();</code>\n</pre>\n<h1>Request extended permission</h1>\n<p>You can request extend permissions</p>\n<pre>\n<code class=\n\"javascript\">Titanium.Facebook.requestPermission(\"publish_feed\",function(result)\n{\n   console.debug(\"permission success=\"+result.success);\n});</code>\n</pre>\n<h1>Publish to Feed</h1>\n<p>You can publish to users feed</p>\n<pre>\n<code class=\n\"javascript\">Titanium.Facebook.publishFeed(123456789,{'img':'http://foo/bar.png'},'nolan is cool',function(result)\n{\n   console.debug(\"publish success success=\"+result.success);\n});</code>\n</pre></div>{html}",
					"updateAuthor": {
						"name": "jhaynie",
						"key": "jhaynie",
						"displayName": "Jeff Haynie",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T02:22:42.000+0000",
					"updated": "2011-04-15T02:22:42.000+0000"
				},
				{
					"id": "122673",
					"author": {
						"name": "jhaynie",
						"key": "jhaynie",
						"displayName": "Jeff Haynie",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><p>(from <a href=\n\"/projects/32238/changesets/6ec20bf4ca21c075ece508f4def5f2c4daa7c86d\"\ntitle=\n\"Changeset [6ec20bf4ca21c075ece508f4def5f2c4daa7c86d]\">[6ec20bf4ca21c075ece508f4def5f2c4daa7c86d]</a>)\n[<a href=\"/projects/32238/tickets/27\" title=\"Ticket #27\">#27</a>\nstate:open] added initial Facebook Connect module for iphone\n<a href=\n\"http://github.com/appcelerator/titanium_mobile/commit/6ec20bf4ca21c075ece508f4def5f2c4daa7c86d\">\nhttp://github.com/appcelerator/titanium_mobile/commit/6ec20bf4ca21c...</a></p></div>{html}",
					"updateAuthor": {
						"name": "jhaynie",
						"key": "jhaynie",
						"displayName": "Jeff Haynie",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T02:22:42.000+0000",
					"updated": "2011-04-15T02:22:42.000+0000"
				},
				{
					"id": "122674",
					"author": {
						"name": "jhaynie",
						"key": "jhaynie",
						"displayName": "Jeff Haynie",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><h1>Execute API call</h1>\n<p>you can execute a facebook method. the 2nd parameter is optional\nand is any data (as javascript json object) to pass to the\nmethod.</p>\n<pre>\n<code class=\n\"javascript\">Titanium.Facebook.execute(\"facebook.Users.getStatus\",null,function(evt)\n{\n   console.info(\"evt = \"+evt+\", success=\"+evt.success+\",cancel=\"+evt.cancel+\",error=\"+evt.error+\",json=\"+Ti._JSON(evt.data));\n});</code>\n</pre></div>{html}",
					"updateAuthor": {
						"name": "jhaynie",
						"key": "jhaynie",
						"displayName": "Jeff Haynie",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T02:22:42.000+0000",
					"updated": "2011-04-15T02:22:42.000+0000"
				},
				{
					"id": "122675",
					"author": {
						"name": "nwright",
						"key": "nwright",
						"displayName": "Nolan Wright",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><p>added in 0.7.0</p></div>{html}",
					"updateAuthor": {
						"name": "nwright",
						"key": "nwright",
						"displayName": "Nolan Wright",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T02:22:42.000+0000",
					"updated": "2011-04-15T02:22:42.000+0000"
				}
			],
			"maxResults": 6,
			"total": 6,
			"startAt": 0
		}
	}
}