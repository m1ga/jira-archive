{
	"id": "61218",
	"key": "TIMOB-586",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2011-04-17T01:53:35.000+0000",
		"created": "2011-04-15T02:32:32.000+0000",
		"priority": {
			"name": "Medium",
			"id": "3"
		},
		"labels": [
			"android",
			"suggestion"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "dthorp",
			"key": "dthorp",
			"displayName": "Don Thorp",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2011-04-17T01:53:35.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10202",
				"name": "Android",
				"description": "Android Platform"
			}
		],
		"description": "{html}<div><p>Cross-platform development between iPhone, iPad, and Android\nwould go a LOT smoother if you created stubs for methods that crash\nAndroid and either map them to an alternative interface, or at\nleast just trap them and give the developer a message explaining\nthat the call won't work on Android.</p>\n<p>For example, the following call works great on iPhone, but\ncrashes on Android:</p>\n<p>win.setRightNavButton(btnTools);</p>\n<p>If you could trap that call (when in Android), and turn a call\nto setRightNavButton into a method that does a simple alert:</p>\n<p>alert('Warning: setRightNavButton is not implemented on the\nAndroid platform');</p>\n<p>In an ideal world, an alternative object would be created (a\nview, perhaps) that mimics the iPhone navbar, and setRightNavButton\nwould create a button on that alternative object. This would give\ntrue cross-platform compatibility.</p></div>{html}",
		"attachment": [],
		"flagged": false,
		"summary": "Titanium Mobile suggestion: map non-android compatible calls",
		"creator": {
			"name": "burggraf",
			"key": "burggraf",
			"displayName": "Burggraf",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "burggraf",
			"key": "burggraf",
			"displayName": "Burggraf",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "123618",
					"author": {
						"name": "dthorp",
						"key": "dthorp",
						"displayName": "Don Thorp",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><p>We've chosen to have the APIs fail silently. Any APIs that don't\nshould be reported as a defect. Except for a couple of select\ncontrols, we most likely will not create platform independent\nversions of things like navbar since that is an iPhone feature and\nnot something other platform's users are expecting.</p></div>{html}",
					"updateAuthor": {
						"name": "dthorp",
						"key": "dthorp",
						"displayName": "Don Thorp",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T02:32:32.000+0000",
					"updated": "2011-04-15T02:32:32.000+0000"
				}
			],
			"maxResults": 1,
			"total": 1,
			"startAt": 0
		}
	}
}