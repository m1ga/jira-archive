{
	"id": "60716",
	"key": "TIMOB-84",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [
			{
				"id": "11213",
				"name": "Release 0.7.0",
				"archived": true,
				"released": true,
				"releaseDate": "2009-10-05"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2011-04-17T01:51:55.000+0000",
		"created": "2011-04-15T02:23:29.000+0000",
		"priority": {
			"name": "Medium",
			"id": "3"
		},
		"labels": [
			"feature",
			"ios",
			"iphone"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "blainhamon",
			"key": "blainhamon",
			"displayName": "Blain Hamon",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2011-04-17T01:51:55.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10206",
				"name": "iOS",
				"description": "iOS Platform"
			}
		],
		"description": "{html}<div><h2>Description</h2>\n<p>The purpose of this API is to create native pickers. We will\nsupport four APIs:</p>\n<p><strong>Titanium.UI.createDatePicker</strong></p>\n<p><strong>Titanium.UI.createPicker</strong></p>\n<p><strong>Titanium.UI.createModalDatePicker</strong></p>\n<p><strong>Titanium.UI.createModalPicker</strong></p>\n<h2>Date Picker</h2>\n<pre>\n<code class=\"javascript\">\n// create date picker\nvar datePicker = Titanium.UI.createDatePicker({\n    id:htmlElementId\n    value:value, \n    mode:mode, \n    maxDate:maxDate, \n    minDate:minDate, \n    minuteInterval:interval, \n});\n\n// add change listener for date picker\ndatePicker.addEventListener('change', function(e)\n{\n    e.value // date value (should be a properly constructed JS Date Object)\n});\n\n// set date value\ndatePicker.setValue(new Date(), {animated:true});</code>\n</pre>\n<h2>API Arguments</h2>\n<p><strong>id</strong> : the location of where the date picker\nshould appear. If not specified, it should appear in the default\nlocation (bottom, I believe)</p>\n<p><strong>value</strong> : initially selected date. Should be a JS\nDate object.</p>\n<p><strong>mode</strong> : iPhone supports the following modes:\nTitanium.UI.DatePicker.MODE_TIME, Titanium.UI.DatePicker.DATE,\nTitanium.UI.DatePicker.MODE_DATE_AND_TIME</p>\n<p><strong>minDate</strong> : optional. the minimum date in the\npicker. should be a JS Date object</p>\n<p><strong>maxDate</strong> : optional. the maximum date in the\npicker - should be a JS Date object</p>\n<p><strong>minuteInterval</strong> : You can use this property to\nset the interval displayed by the minutes wheel (for example, 15\nminutes). The interval value must be evenly divided into 60; if it\nis not, the default value is used. The default and minimum values\nare 1; the maximum value is 30.</p>\n<h2>Picker</h2>\n<pre>\n<code class=\"javascript\">\n// create multi-dimensional array for data (also supports selected attribute for initial value)\nvar data = [];\n\n// support title attribute\nvar col1 = [\n    {title:'foo', selected:true},\n    {title:'bar'}\n];\n\n// support html attribute (also supports selected attribute for initial value)\nvar col2 = [\n    {html:'&lt;div&gt;&lt;img src=\"foo.png\"/&gt; pick me&lt;/div&gt;', selected:true},\n    {html:'&lt;div&gt;&lt;img src=\"bar.png\"/&gt; pick me too&lt;/div&gt;'}\n];\n\n// add columns to array\ndata.push(col1);\ndata.push(col2);\n\n// create date picker\nvar picker = Titanium.UI.createPicker({\n    id:htmlElementId,\n    data:data, \n    showSelectionIndicator:true\n });\n\n// add change listener for date picker\npicker.addEventListener('change', function(e)\n{\n    e.column // the column of the new value\n    e.row // the row of the new value\n    e.selectedValue[0] // current value of the selected row - col 1\n    e.selectedValue[1] // current value of the selected row - col 2 (this would be valid for the # of available columns)\n});\n\n\n// set data for a particular colunm\npicker.setColumnData(col,data);\n\n// set data for entire picker\npicker.setData(data);\n\n// get the current value of first column\nvar val = picker.getSelectedRow(col);  // returns index of selected value of first column's array\n\n// select a row\npicker.selectRow(row,col,{animated:true});</code>\n</pre>\n<h2>API Arguments</h2>\n<p><strong>id</strong> : the location of where the picker should\nappear. If not specified, it should appear in the default location\n(bottom, I believe)</p>\n<p><strong>data</strong> : multi-dimensional array of data for the\npicker.</p>\n<p><strong>showSelectionIndicator</strong> : optional. default is\ntrue. determines whether selected indicator is visible (may be\niPhone only)</p>\n<h2>Modal Pickers</h2>\n<p>createModalPicker and createModalDatePicker will be the same\nwith the following exceptions:</p>\n<ul>\n<li><strong>id</strong> is not a valid attribute</li>\n<li>these pickers will support both hide() and show() methids</li>\n</ul></div>{html}",
		"attachment": [],
		"flagged": false,
		"summary": "API - Pickers",
		"creator": {
			"name": "nwright",
			"key": "nwright",
			"displayName": "Nolan Wright",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "nwright",
			"key": "nwright",
			"displayName": "Nolan Wright",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "122747",
					"author": {
						"name": "blainhamon",
						"key": "blainhamon",
						"displayName": "Blain Hamon",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><p>Okay, nonmodal pickers are implemented. Clarification re: modal\npickers:</p>\n<p>When a tab view is visible, do the modal pickers obscure the\ntabs (like a keyboard) or stay above it (like a tool bar)?</p></div>{html}",
					"updateAuthor": {
						"name": "blainhamon",
						"key": "blainhamon",
						"displayName": "Blain Hamon",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T02:23:29.000+0000",
					"updated": "2011-04-15T02:23:29.000+0000"
				}
			],
			"maxResults": 1,
			"total": 1,
			"startAt": 0
		}
	}
}