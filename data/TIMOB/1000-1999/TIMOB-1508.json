{
	"id": "62140",
	"key": "TIMOB-1508",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [
			{
				"id": "11234",
				"name": "Release 1.6.0 M01",
				"archived": true,
				"released": true,
				"releaseDate": "2010-12-20"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2011-04-17T01:56:21.000+0000",
		"created": "2011-04-15T02:54:41.000+0000",
		"priority": {
			"name": "Medium",
			"id": "3"
		},
		"labels": [
			"android",
			"defect",
			"imageview",
			"release-1.6.0",
			"remote",
			"rplist",
			"tableview"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "mculpepper",
			"key": "mculpepper",
			"displayName": "Marshall Culpepper",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2012-08-14T19:36:31.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10202",
				"name": "Android",
				"description": "Android Platform"
			}
		],
		"description": "{html}<div><p>We need to implement a remote Image cache so images aren't\nunnecessarily reloaded when scrolling a TableView up/down.</p></div>{html}",
		"attachment": [],
		"flagged": false,
		"summary": "Android: Remote images in ImageView get reloaded inside a TableViewRow",
		"creator": {
			"name": "mculpepper",
			"key": "mculpepper",
			"displayName": "Marshall Culpepper",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "mculpepper",
			"key": "mculpepper",
			"displayName": "Marshall Culpepper",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "125886",
					"author": {
						"name": "dthorp",
						"key": "dthorp",
						"displayName": "Don Thorp",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><p>Nathaniel please verify this. If it was fixed with 1.5.0 please\nchange the Milestone to 1.5.0 and mark resolved. Also add a test in\nbug test or explain how to test in KS.</p></div>{html}",
					"updateAuthor": {
						"name": "dthorp",
						"key": "dthorp",
						"displayName": "Don Thorp",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T02:54:42.000+0000",
					"updated": "2011-04-15T02:54:42.000+0000"
				},
				{
					"id": "125887",
					"author": {
						"name": "nathanielmccallum",
						"key": "nathanielmccallum",
						"displayName": "Nathaniel McCallum",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><p>So the way that this works is by using Java's built-in cache\nsupport. This makes it difficult to test since the caching is done\ntransparently. Its even more difficult because the request may\nactually be modified internally by Java before forwarded into the\ncache module. However, with a little manual work, you can verify\nthe caching with wireshark. Just have wireshark capture packet data\ngoing out from the emulator to ensure that a request is only being\nsent once.</p>\n<p>It should also be noted that the rules for when an item may not\nbe cached (see the various HTTP RFC) are quite complicated. This\ncaching module errs on the side of not caching. However, generally\nspeaking, if you don't have a Cache-Control header in your\nresponse, its probably going to be cached.</p>\n<p>This feature actually shipped in 1.5.0.</p></div>{html}",
					"updateAuthor": {
						"name": "nathanielmccallum",
						"key": "nathanielmccallum",
						"displayName": "Nathaniel McCallum",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T02:54:42.000+0000",
					"updated": "2011-04-15T02:54:42.000+0000"
				},
				{
					"id": "125888",
					"author": {
						"name": "dthorp",
						"key": "dthorp",
						"displayName": "Don Thorp",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><p>Verified on G1/1.6 and Nexus One/2.2.1 using build #e1cb22a</p>\n<p>Used the XML RSS test, downloaded all the images then\ndisconnected from the network.</p></div>{html}",
					"updateAuthor": {
						"name": "dthorp",
						"key": "dthorp",
						"displayName": "Don Thorp",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T02:54:43.000+0000",
					"updated": "2011-04-15T02:54:43.000+0000"
				},
				{
					"id": "125889",
					"author": {
						"name": "rblalock",
						"key": "rblalock",
						"displayName": "Rick Blalock",
						"active": false,
						"timeZone": "America/Havana"
					},
					"body": "{html}<div><p>Hi Don,<br>\nI just tested this with the latest build from today on my Galaxy\n(Android 2.2). The images now show up but the table performance\nwhile scrolling is odd. Using the KS RSS XML example: You'll see\nthe images there but when scrolling it jitter-scrolls down slowly\nand then rapidly scrolls to the end as if it's catching up to where\nit is supposed to be. Sometimes doing a slow scroll it will stay in\nplace or just jump to where it should be making it look like a\nscroll didn't happen.</p>\n<p>I'm debugging an HD ticket that is having the issue as well.\nI'll get specifics from him on how his table is performing.\n<a href=\"http://developer.appcelerator.com/helpdesk/view/67491\">http://developer.appcelerator.com/helpdesk/view/67491</a></p></div>{html}",
					"updateAuthor": {
						"name": "rblalock",
						"key": "rblalock",
						"displayName": "Rick Blalock",
						"active": false,
						"timeZone": "America/Havana"
					},
					"created": "2011-04-15T02:54:43.000+0000",
					"updated": "2011-04-15T02:54:43.000+0000"
				},
				{
					"id": "125890",
					"author": {
						"name": "dthorp",
						"key": "dthorp",
						"displayName": "Don Thorp",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><p>Rick. Please open a new ticket wrt to performance. This ticket\nis specifically about not re-downloading images.</p></div>{html}",
					"updateAuthor": {
						"name": "dthorp",
						"key": "dthorp",
						"displayName": "Don Thorp",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T02:54:43.000+0000",
					"updated": "2011-04-15T02:54:43.000+0000"
				},
				{
					"id": "214517",
					"author": {
						"name": "mbelkin",
						"key": "mbelkin",
						"displayName": "Michael Belkin",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I'm having this problem with 2.1.1GA and 2.2 CI. If I cache the images manually and load as a blob then it works, but if I set a remote image url for the image property on an image view it disappears and reloads every time you scroll the table.",
					"updateAuthor": {
						"name": "mbelkin",
						"key": "mbelkin",
						"displayName": "Michael Belkin",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-08-14T19:34:14.000+0000",
					"updated": "2012-08-14T19:34:14.000+0000"
				},
				{
					"id": "214518",
					"author": {
						"name": "ngupta",
						"key": "ngupta",
						"displayName": "Neeraj Gupta",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "@Michael - Please provide a complete test case that reproduces this issues with the master build.",
					"updateAuthor": {
						"name": "ngupta",
						"key": "ngupta",
						"displayName": "Neeraj Gupta",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-08-14T19:36:31.000+0000",
					"updated": "2012-08-14T19:36:31.000+0000"
				}
			],
			"maxResults": 7,
			"total": 7,
			"startAt": 0
		}
	}
}