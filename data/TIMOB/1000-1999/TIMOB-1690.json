{
	"id": "62322",
	"key": "TIMOB-1690",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [
			{
				"id": "11225",
				"name": "Release 1.5.0",
				"archived": true,
				"released": true,
				"releaseDate": "2010-12-14"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2011-04-17T01:56:53.000+0000",
		"created": "2011-04-15T02:59:27.000+0000",
		"priority": {
			"name": "Trivial",
			"id": "5"
		},
		"labels": [
			"android",
			"defect"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "billdawson",
			"key": "billdawson",
			"displayName": "Bill Dawson",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"updated": "2011-04-17T01:56:53.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10202",
				"name": "Android",
				"description": "Android Platform"
			}
		],
		"description": "{html}<div><p>Use case (helpdesk 38891): app fetches data via XHR. Data is XML\nencoded in ISO-8859-1. Data is saved to file, to be opened later.\nWhen re-opened, Titanium forces it to UTF-8, which screws up the\nencoding of some of the special characters such as those with\numlaute (&ouml;, &auml; etc) or accents (&eacute; etc).</p>\n<p>Fail case:</p>\n<p>app.js</p>\n<pre>\n<code class=\"javascript\">\nTitanium.UI.setBackgroundColor('#000');\nvar win = Titanium.UI.createWindow({  \n    title:'Feed encoding test',\n    backgroundColor:'#fff',\n    fullscreen: true,\n    exitOnClose: true,\n    url: 'main.js'\n});\nwin.open();</code>\n</pre>\n<p>main.js:</p>\n<pre>\n<code class=\"javascript\">var win = Ti.UI.currentWindow;\nwin.title = \"Feed encoding via file\"\nvar url = [SEE HELPDESK 38891]\n\nvar dir = Titanium.Filesystem.applicationDataDirectory;\nvar filename = 'feed.xml';\nvar file = Ti.Filesystem.getFile(dir, filename);\n\n\nfunction saveFeed(data) {\n    if (file.exists()){\n        file.deleteFile();\n    }\n    file.write(data);\n}\n\nfunction buildTable() {\n    var blob = file.read();\n    var string = blob.text;\n    var xml = Ti.XML.parseString(string);\n    var rows = [];\n    try {\n        if (xml) {\n            var session = xml.getElementsByTagName('session');\n            if (session) {\n                session = session.item(0);\n            } else { \n                alert('session list not fetched');\n                return;\n            }\n            if (session) {\n                if (!session.hasChildNodes()) {\n                    alert('No child nodes');\n                    return;\n                }\n                var length = session.childNodes.length;\n                for (var i = 0; i &lt; length; i++) {\n                    var child = session.childNodes.item(i);\n                    if (child.nodeType == child.ELEMENT_NODE) {\n                        rows.push(Ti.UI.createTableViewRow({color: 'black', title: child.getAttribute(\"driver\")}));\n                    }\n                }\n                win.add(Ti.UI.createTableView({data: rows}));\n            } else {\n                alert('\"session\" not found');\n            }\n        } else {\n            alert('XML did not load');\n        }\n    } catch(ex) {\n        alert(ex);\n    }\n    \n}\n\nvar xhr = Ti.Network.createHTTPClient();\nxhr.onload = function(e) {\n    try {\n        var data = xhr.responseData;\n        saveFeed(data);\n        buildTable();\n        \n    } catch(ex) {\n        alert(ex);\n    }\n};\nxhr.open('GET', url);\nxhr.send();</code>\n</pre>\n<p>In the tableview that results from running that code, you will\nnotice some of the names have characters that are messed up.</p></div>{html}",
		"attachment": [],
		"flagged": false,
		"summary": "Android: non-UTF-8 data from external source cannot be saved and reopened accurately",
		"creator": {
			"name": "billdawson",
			"key": "billdawson",
			"displayName": "Bill Dawson",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"subtasks": [],
		"reporter": {
			"name": "billdawson",
			"key": "billdawson",
			"displayName": "Bill Dawson",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "126368",
					"author": {
						"name": "jhaynie",
						"key": "jhaynie",
						"displayName": "Jeff Haynie",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><p>(from <a href=\n\"/projects/32238/changesets/32cf760dca3156a8478fa47e519070c900a32fab\"\ntitle=\n\"Changeset [32cf760dca3156a8478fa47e519070c900a32fab]\">[32cf760dca3156a8478fa47e519070c900a32fab]</a>)\n[<a href=\"/projects/32238/tickets/1690\" title=\n\"Ticket #1690\">#1690</a>] Put a transcodeString() utility function\ninto UtilsModule. <a href=\n\"http://github.com/appcelerator/titanium_mobile/commit/32cf760dca3156a8478fa47e519070c900a32fab\">\nhttp://github.com/appcelerator/titanium_mobile/commit/32cf760dca315...</a></p></div>{html}",
					"updateAuthor": {
						"name": "jhaynie",
						"key": "jhaynie",
						"displayName": "Jeff Haynie",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T02:59:27.000+0000",
					"updated": "2011-04-15T02:59:27.000+0000"
				},
				{
					"id": "126369",
					"author": {
						"name": "billdawson",
						"key": "billdawson",
						"displayName": "Bill Dawson",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "{html}<div><p>We want to keep things internally in UTF-8, so instead of trying\nto track the other encoding throughout its lifetime in Titanium\ncode (i.e., in TiBlob, TiFile, etc), we now give the developer a\nway to transcode the text to utf-8 and then save that:</p>\n<pre>\n<code class=\n\"javascript\">var utf8Text = Ti.Utils.transcodeString(origText, 'ISO-8859-1', 'UTF-8');</code>\n</pre>\n<p>So <code>Ti.Utils.transcodeString(origText, origEncoding,\ndesiredEncoding)</code> is new.</p>\n<p>To fix the fail case from the description of this item, in the\nfunction <code>saveFeed</code> change <code>file.write(data)</code>\nto <code>file.write(Ti.Utils.transcodeString(data, 'ISO-8859-1',\n'UTF-8'))</code>.</p>\n<p>Then, because the feed contains <code>&lt;?xml version=\"1.0\"\nencoding=\"ISO-8859-1\"?&gt;</code>, you need to change the\n<code>encoding=</code> to read <code>encoding='UTF-8</code> before\ngiving it to the xml parser. So in <code>buildTable()</code> change\n...</p>\n<pre>\n<code class=\n\"javascript\">var xml = Ti.XML.parseString(string);</code>\n</pre>\n<p>... to ...</p>\n<pre>\n<code class=\n\"javascript\">var xml = Ti.XML.parseString(string.replace(/iso-8859-1/i, 'UTF-8'));</code>\n</pre>\n<p>Finally, when the data comes back from the provider, get it with\n<code>responseText</code> instead of <code>responseData</code><br>\n. So replace this...</p>\n<pre>\n<code class=\"javascript\">var data = xhr.responseData;</code>\n</pre>\n<p>with this ...</p>\n<pre>\n<code class=\"javascript\">\nvar data = xhr.responseText;</code>\n</pre></div>{html}",
					"updateAuthor": {
						"name": "billdawson",
						"key": "billdawson",
						"displayName": "Bill Dawson",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2011-04-15T02:59:28.000+0000",
					"updated": "2011-04-15T02:59:28.000+0000"
				},
				{
					"id": "126370",
					"author": {
						"name": "billdawson",
						"key": "billdawson",
						"displayName": "Bill Dawson",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "{html}<div><p>I screwed up in the previous comment. I forgot to mention you\nneed to also replace <code>xhr.responseData</code> with\n<code>xhr.responseText</code>. I edited the comment above to\nreflect this now.</p></div>{html}",
					"updateAuthor": {
						"name": "billdawson",
						"key": "billdawson",
						"displayName": "Bill Dawson",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2011-04-15T02:59:28.000+0000",
					"updated": "2011-04-15T02:59:28.000+0000"
				},
				{
					"id": "126371",
					"author": {
						"name": "thomashuelbert",
						"key": "thomashuelbert",
						"displayName": "Thomas Huelbert",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><p>w00t - that did it, thanks Much Bill. Confirmed on nexus 1\nrunning 2.2 and simulator.</p></div>{html}",
					"updateAuthor": {
						"name": "thomashuelbert",
						"key": "thomashuelbert",
						"displayName": "Thomas Huelbert",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T02:59:28.000+0000",
					"updated": "2011-04-15T02:59:28.000+0000"
				}
			],
			"maxResults": 4,
			"total": 4,
			"startAt": 0
		}
	}
}