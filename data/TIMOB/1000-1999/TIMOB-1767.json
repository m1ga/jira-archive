{
	"id": "62399",
	"key": "TIMOB-1767",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [
			{
				"id": "11225",
				"name": "Release 1.5.0",
				"archived": true,
				"released": true,
				"releaseDate": "2010-12-14"
			}
		],
		"resolution": {
			"id": "7",
			"description": "",
			"name": "Invalid"
		},
		"resolutiondate": "2011-04-15T03:01:40.000+0000",
		"created": "2011-04-15T03:01:38.000+0000",
		"priority": {
			"name": "Trivial",
			"id": "5"
		},
		"labels": [
			"android",
			"defect"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "billdawson",
			"key": "billdawson",
			"displayName": "Bill Dawson",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"updated": "2017-03-02T19:03:23.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10202",
				"name": "Android",
				"description": "Android Platform"
			}
		],
		"description": "{html}<div><p>app.js:</p>\n<pre>\n<code class=\"javascript\">Ti.UI.setBackgroundColor('#000');\nTi.UI.createWindow({\n    backgroundColor: 'blue',\n    url: 'main.js',\n    fullscreen:true,\n    exitOnClose: true\n}).open();</code>\n</pre>\n<p>main.js:</p>\n<pre>\n<code class=\"javascript\">\nvar win = Ti.UI.currentWindow;\nvar btn = Ti.UI.createButton({\n    title: 'open subwindow'\n});\n\nvar win2 = Ti.UI.createWindow({\n    url: 'sub.js',\n    fullscreen: true,\n    backgroundColor: 'red'\n});\nwin2.addEventListener('close', function() {Ti.API.info('window close');});\n\nbtn.addEventListener('click', function(){win2.open();});\n\nwin.add(btn);</code>\n</pre>\n<p>sub.js:</p>\n<pre>\n<code class=\"javascript\">var win = Ti.UI.currentWindow;\nvar btn = Ti.UI.createButton({title: 'close'});\nbtn.addEventListener('click', function(){win.close();});\nwin.add(btn);</code>\n</pre>\n<p>The second time you open sub window, the button inside it will\nnot work anymore.</p>\n<p>Very likely caused by <a href=\n\"http://github.com/appcelerator/titanium_mobile/commit/026c645a26d0c83587246af2eaf8d6e82ae65179\">\nthis commit</a>, wherein I thought I was limiting to app events --\nbut perhaps that distinction cannot really be made.</p></div>{html}",
		"attachment": [
			{
				"id": "18056",
				"filename": "test_files.zip",
				"author": {
					"name": "billdawson",
					"key": "billdawson",
					"displayName": "Bill Dawson",
					"active": true,
					"timeZone": "Europe/Berlin"
				},
				"created": "2011-04-15T03:01:39.000+0000",
				"size": 1218,
				"mimeType": "application/zip"
			}
		],
		"flagged": false,
		"summary": "Android: event listeners in reopened window do not fire.",
		"creator": {
			"name": "billdawson",
			"key": "billdawson",
			"displayName": "Bill Dawson",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"subtasks": [],
		"reporter": {
			"name": "billdawson",
			"key": "billdawson",
			"displayName": "Bill Dawson",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "126585",
					"author": {
						"name": "billdawson",
						"key": "billdawson",
						"displayName": "Bill Dawson",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "{html}<div><p>Actually my failcase here is stupid. Each opening of the 2nd\nwindow stacks a button right on top of the previous button, (since\nall buttons from previous openings of the window get retained).\nThen the topmost button ends up being the first button, whose event\nlistener has been destroyed. Each new button does indeed have an\nevent listener -- it's just that the button never gets clicked\n(touched/tapped) since it's below all previous buttons.</p>\n<p>I'll put a more logical failcase in here.</p></div>{html}",
					"updateAuthor": {
						"name": "billdawson",
						"key": "billdawson",
						"displayName": "Bill Dawson",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2011-04-15T03:01:39.000+0000",
					"updated": "2011-04-15T03:01:39.000+0000"
				},
				{
					"id": "126586",
					"author": {
						"name": "billdawson",
						"key": "billdawson",
						"displayName": "Bill Dawson",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "{html}<div><p>Using our latest builds, I'm failing to find a relevant fail\ncase. I've some fairly comprehensive testing, the details of which\nI'll paste here. The attached zip file contains the three test\nfiles.</p>\n<h2>Tests</h2>\n<p><strong>The goals:</strong></p>\n<p>1) in each of the below scenarios, the context that creates the\nsecond window will add a close event for it. Each time that second\nwindow closes, that close event in the creating context should\nfire.</p>\n<p>2) in each of the scenarios, the second window will get a\n\"close\" button put on to it. That close button will have a click\nevent listener which, in turn, will close the window that it is on\n(i.e., the second window). This should always work.</p>\n<p>3) in two of the scenarios -- the scenarios that use 'url'\nproperties for the second window -- the second window will get a\nsecond 'close' event listener created inside the second JS file. It\nshould fire when the second window is closed. In this case, two\n'close' event handlers should be created: the one from the first\nwindow and the one from inside the second window.</p>\n<p><strong>Scenarios:</strong></p>\n<p>a) Second window is a \"heavyweight\" window (a window that gets\nits own Android Activity) and has its own url. Go back to the first\nwindow using the 'Close' button. Reopen and repeat.</p>\n<p>b) Same as (a), but go back to the first window using the\nAndroid back button. Reopen and repeat.</p>\n<p>c) Second window is a \"heavyweight\" window (a window that gets\nits own Android Activity) but does not have its own url. Go back to\nthe first window using the 'Close' button. Reopen and repeat.</p>\n<p>d) Same as (c), but go back to the first window using the\nAndroid back button. Reopen and repeat.</p>\n<p>e) Second window is a \"lightweight\" window and has its own url.\n(Note: cannot use Android back button because it's lightweight.)\nClick the 'Close' button to go back to the first window. Reopen and\nrepeat.</p>\n<p>f) Second window is a \"lightweight\" window and does not have its\nown url. Click the 'Close' button to go back to the first window.\nReopen and repeat.</p>\n<p><strong>Scenario Results:</strong></p>\n<p>a) Success. Close events were captured both from inside the\nsecond window and outside. The click event on the button inside the\nwindow always worked.</p>\n<p>b) same as (a)</p>\n<p>c) Success. The close event in the first window succeeded, and\nclick event on the button in the second window always worked.</p>\n<p>d) same as (c)</p>\n<p>e) Success: the close button always worked, and the close event\nwas always captured both in the first and second window's\nhandlers.</p>\n<p>f) Success: the close button always worked and the close event\nwas always captured in the handler in the first window.</p></div>{html}",
					"updateAuthor": {
						"name": "billdawson",
						"key": "billdawson",
						"displayName": "Bill Dawson",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2011-04-15T03:01:39.000+0000",
					"updated": "2011-04-15T03:01:39.000+0000"
				},
				{
					"id": "126587",
					"author": {
						"name": "billdawson",
						"key": "billdawson",
						"displayName": "Bill Dawson",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "{html}<div><p>Lukasz appears to be the only one following this. Lukasz do you\nhave a fail case for the symptom described in the title of this\nitem?</p></div>{html}",
					"updateAuthor": {
						"name": "billdawson",
						"key": "billdawson",
						"displayName": "Bill Dawson",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2011-04-15T03:01:40.000+0000",
					"updated": "2011-04-15T03:01:40.000+0000"
				},
				{
					"id": "126588",
					"author": {
						"name": "lukasz",
						"key": "lukasz",
						"displayName": "Lukasz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><p>No, I do not have any fail case for this bug. I can of course\ntest it, but not before Monday. I did not report this bug. My\nproblem is a little bit different because I'm using TabGroups\ninstead of Windows. Did you read this ticket <a href=\n\"https://appcelerator.lighthouseapp.com/projects/32238-titanium-mobile/tickets/1742\">\n\"Android: Window in TabGroup loses event listeners\"</a>? I attached\na fail case there.</p>\n<p>Thanks, Lukasz</p></div>{html}",
					"updateAuthor": {
						"name": "lukasz",
						"key": "lukasz",
						"displayName": "Lukasz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T03:01:40.000+0000",
					"updated": "2011-04-15T03:01:40.000+0000"
				},
				{
					"id": "126589",
					"author": {
						"name": "lukasz",
						"key": "lukasz",
						"displayName": "Lukasz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><p>Hi Bill,</p>\n<p>I've tested the scenarios using\nmobilesdk-1.4.1-20100909194301-osx.zip and all 6 are working\ncorrectly.</p></div>{html}",
					"updateAuthor": {
						"name": "lukasz",
						"key": "lukasz",
						"displayName": "Lukasz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T03:01:40.000+0000",
					"updated": "2011-04-15T03:01:40.000+0000"
				},
				{
					"id": "126590",
					"author": {
						"name": "friedrichseydel",
						"key": "friedrichseydel",
						"displayName": "Friedrich Seydel",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><p>Hi Bill.<br>\nI've tested the scenearios using\nmobilesdk-1.4.1-20100915120231-win32.zip and the close events were\ncaptured, but way too often.</p>\n<p>Results:<br>\na) Close event captured seven times.<br>\nb) Close event captured two times.<br>\nc) Close event captured four times.<br>\nd) Close event captured one time.<br>\ne) Close event captured seven times.<br>\nf) Close event captured four times.</p>\n<p>And it seems memory is not always freed correctly when\nclosing.</p>\n<p>Test Case: Set a big backgroundImage for win2 before opening,\ne.g. change the event listener in line 11 of main.js:<br></p>\n<pre>\n<code class=\"javascript\">btn.addEventListener('click', function(){\n  win2.backgroundImage=\"http://ddiff.com/wp-content/uploads/2009/11/Hurricane-Isabel-NASA.jpg\";\n  win2.open();\n});</code>\n</pre>\nResults:<br>\na) Crashes on second opening of subwindow: <em>Unable to load\nbitmap. Not enough memory: bitmap size exceeds VM budget</em>.<br>\nb) same as (a)<br>\nc) same as (a)<br>\nd) Sucess: This DOES work without crashing!<br>\ne) same as (a)<br>\nf) same as (a)\n<p>There seems to be a connection between this memory leak and the\nclose event being captured more than once.<br>\nOnly scenario (d) is working properly, the event is captured once\nand there seems to be no leak.</p></div>{html}",
					"updateAuthor": {
						"name": "friedrichseydel",
						"key": "friedrichseydel",
						"displayName": "Friedrich Seydel",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T03:01:40.000+0000",
					"updated": "2011-04-15T03:01:40.000+0000"
				},
				{
					"id": "126591",
					"author": {
						"name": "billdawson",
						"key": "billdawson",
						"displayName": "Bill Dawson",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "{html}<div><p>Friedrich's comment relates to a different problem than that\ndescribed by this item, so created <a href=\n\"/projects/32238/tickets/1827\" title=\"Ticket #1827\">#1827</a> and\nreferenced Friedrich's comment.</p>\n<p>Closing this ticket as invalid since the original issue doesn't\nappear to be happening.</p></div>{html}",
					"updateAuthor": {
						"name": "billdawson",
						"key": "billdawson",
						"displayName": "Bill Dawson",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2011-04-15T03:01:41.000+0000",
					"updated": "2011-04-15T03:01:41.000+0000"
				},
				{
					"id": "408404",
					"author": {
						"name": "lmorris",
						"key": "lmorris",
						"displayName": "Lee Morris",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Closing as invalid.",
					"updateAuthor": {
						"name": "lmorris",
						"key": "lmorris",
						"displayName": "Lee Morris",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2017-03-02T19:03:23.000+0000",
					"updated": "2017-03-02T19:03:23.000+0000"
				}
			],
			"maxResults": 8,
			"total": 8,
			"startAt": 0
		}
	}
}