{
	"id": "80090",
	"key": "TIMOB-10688",
	"fields": {
		"issuetype": {
			"id": "2",
			"description": "A new feature of the product, which has yet to be developed.",
			"name": "New Feature",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [
			{
				"id": "15111",
				"description": "2013 Sprint 13",
				"name": "2013 Sprint 13",
				"archived": true,
				"released": true,
				"releaseDate": "2013-07-01"
			},
			{
				"id": "14982",
				"description": "Release 3.2.0",
				"name": "Release 3.2.0",
				"archived": false,
				"released": true,
				"releaseDate": "2013-12-19"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2013-10-25T20:06:19.000+0000",
		"created": "2011-09-08T07:08:34.000+0000",
		"priority": {
			"name": "Medium",
			"id": "3"
		},
		"labels": [
			"core"
		],
		"versions": [
			{
				"id": "13505",
				"description": "Release 3.0.0",
				"name": "Release 3.0.0",
				"archived": true,
				"released": true,
				"releaseDate": "2012-12-14"
			}
		],
		"issuelinks": [
			{
				"id": "27912",
				"type": {
					"id": "10020",
					"name": "Depends",
					"inward": "is dependent of",
					"outward": "depends on"
				},
				"outwardIssue": {
					"id": "113062",
					"key": "TIMOB-13616",
					"fields": {
						"summary": "CLI: run Docgen.py on module build",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Medium",
							"id": "3"
						},
						"issuetype": {
							"id": "7",
							"description": "gh.issue.story.desc",
							"name": "Story",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "27911",
				"type": {
					"id": "10020",
					"name": "Depends",
					"inward": "is dependent of",
					"outward": "depends on"
				},
				"outwardIssue": {
					"id": "113061",
					"key": "TIMOB-13615",
					"fields": {
						"summary": "CLI: Include Docgen.py in SDK builds so it can be used when building modules",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Low",
							"id": "4"
						},
						"issuetype": {
							"id": "7",
							"description": "gh.issue.story.desc",
							"name": "Story",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "26825",
				"type": {
					"id": "10020",
					"name": "Depends",
					"inward": "is dependent of",
					"outward": "depends on"
				},
				"inwardIssue": {
					"id": "109605",
					"key": "MOD-1297",
					"fields": {
						"summary": "NFC: Create documentation",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "High",
							"id": "2"
						},
						"issuetype": {
							"id": "5",
							"description": "The sub-task of the issue",
							"name": "Sub-task",
							"subtask": true
						}
					}
				}
			},
			{
				"id": "26834",
				"type": {
					"id": "10020",
					"name": "Depends",
					"inward": "is dependent of",
					"outward": "depends on"
				},
				"inwardIssue": {
					"id": "111397",
					"key": "MOD-1344",
					"fields": {
						"summary": "Newsstand: Convert documentation files to YML",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "High",
							"id": "2"
						},
						"issuetype": {
							"id": "4",
							"description": "An improvement or enhancement to an existing feature or task.",
							"name": "Improvement",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "15000",
				"type": {
					"id": "10011",
					"name": "Includes",
					"inward": "is included by",
					"outward": "includes"
				},
				"inwardIssue": {
					"id": "85518",
					"key": "TIMOB-7421",
					"fields": {
						"summary": "Tooling: As a Ti documentation writer, I would like to have access to enhanced TDoc tools",
						"status": {
							"description": "The issue is open and ready for the assignee to start work on it.",
							"name": "Open",
							"id": "1",
							"statusCategory": {
								"id": 2,
								"key": "new",
								"colorName": "blue-gray",
								"name": "To Do"
							}
						},
						"priority": {
							"name": "High",
							"id": "2"
						},
						"issuetype": {
							"id": "7",
							"description": "gh.issue.story.desc",
							"name": "Story",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "12678",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"outwardIssue": {
					"id": "79965",
					"key": "MOD-201",
					"fields": {
						"summary": "Convert existing module documentation to YAML for integration with TiStudio (jsca code completion)",
						"status": {
							"description": "This issue was once resolved, but the resolution was deemed incorrect. From here issues are either marked assigned or resolved.",
							"name": "Reopened",
							"id": "4",
							"statusCategory": {
								"id": 2,
								"key": "new",
								"colorName": "blue-gray",
								"name": "To Do"
							}
						},
						"priority": {
							"name": "Low",
							"id": "4"
						},
						"issuetype": {
							"id": "7",
							"description": "gh.issue.story.desc",
							"name": "Story",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": {
			"name": "jalter",
			"key": "jalter",
			"displayName": "Jon Alter",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2013-11-13T21:06:16.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10207",
				"name": "Tooling"
			}
		],
		"description": "h1. New Feature\r\nExpose docgen.py / YAML so that our modules' documentation can be rewritten. The docgen.py looks hard coded for use with the core Titanium Mobile, and it isn't packaged up with the SDK. \r\n\r\nh2. Example Usage\r\nTake a look at the attached Barcode.yml. If this were included in a module's \"documentation\" folder, build.py on iOS or ant on Android should generate an index.html etc in the distribution folder.\r\n\r\nI'm guessing we'll need platform specific tickets for this... let me know.\r\n\r\n* *validate.py* should be able to be run against module docs that have references to Titanium.* Currently, the module docs need to be copied to the apidoc folder in titanium_mobile so that it can validate without throwing errors that Titanium.* could not be found. I believe if validate.py could accept multiple -d directories it would fix this.",
		"attachment": [
			{
				"id": "22860",
				"filename": "Barcode.yml",
				"author": {
					"name": "dtoth",
					"key": "dtoth",
					"displayName": "Dawson Toth",
					"active": true,
					"timeZone": "America/New_York"
				},
				"created": "2011-09-08T07:08:34.000+0000",
				"size": 3577,
				"mimeType": "application/octet-stream"
			}
		],
		"flagged": false,
		"summary": "CLI: Expose Docgen.py and YAML as Alternative to Markdown in Modules",
		"creator": {
			"name": "dtoth",
			"key": "dtoth",
			"displayName": "Dawson Toth",
			"active": true,
			"timeZone": "America/New_York"
		},
		"subtasks": [
			{
				"id": "113224",
				"key": "TIMOB-13646",
				"fields": {
					"summary": "Validate.py should accept multiple directories",
					"status": {
						"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
						"name": "Closed",
						"id": "6",
						"statusCategory": {
							"id": 3,
							"key": "done",
							"colorName": "green",
							"name": "Done"
						}
					},
					"priority": {
						"name": "High",
						"id": "2"
					},
					"issuetype": {
						"id": "5",
						"description": "The sub-task of the issue",
						"name": "Sub-task",
						"subtask": true
					}
				}
			}
		],
		"reporter": {
			"name": "dtoth",
			"key": "dtoth",
			"displayName": "Dawson Toth",
			"active": true,
			"timeZone": "America/New_York"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "181099",
					"author": {
						"name": "ngupta",
						"key": "ngupta",
						"displayName": "Neeraj Gupta",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "We need to evaluate this support and scope the effort in this sprint so that we can support ACS module documentation for GA.",
					"updateAuthor": {
						"name": "ngupta",
						"key": "ngupta",
						"displayName": "Neeraj Gupta",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-01-30T13:15:22.000+0000",
					"updated": "2012-01-30T13:15:22.000+0000"
				},
				{
					"id": "216511",
					"author": {
						"name": "aevans",
						"key": "aevans",
						"displayName": "Arthur Evans",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Moving back to TIMOB. Not sure what the status of this is currently.",
					"updateAuthor": {
						"name": "aevans",
						"key": "aevans",
						"displayName": "Arthur Evans",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-08-28T12:13:04.000+0000",
					"updated": "2012-08-28T12:13:04.000+0000"
				},
				{
					"id": "248798",
					"author": {
						"name": "jalter",
						"key": "jalter",
						"displayName": "Jon Alter",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "h3. PR\r\nhttps://github.com/appcelerator/titanium_mobile/pull/4210\r\n\r\nh3. Testing notes:\r\n* *New flag in docgen.py -e or --exclude-external. Intended to be used to generate module documentation*\r\n   Testing:\r\n    *# in the terminal go to the titanium_mobile/apidoc folder\r\n    *# Run docgen.py and point to a folder containing some yml documentation (Not Titanium Docs)\r\n{code}\r\n./docgen.py -f parity -o ../dist/apidoc/ -e ~/Path/To/YML/Doc/Folder\r\n{code}\r\n    *# This should generate the parity html file in ../dist/apidoc/ and it should only include the documentation from the folder (no Titanium platform docs)\r\n* *The 'modulehtml' generator is intended to be used to generate html documentation for modules. Same command as above.*\r\n   Testing:\r\n    *# in the terminal go to the titanium_mobile/apidoc folder\r\n    *# Run docgen.py and point to a folder containing some yml documentation (Not Titanium Docs)\r\n{code}\r\n./docgen.py -f modulehtml -o ../dist/apidoc/ -e --css styles.css  ~/Path/To/YML/Doc/Folder\r\n{code}\r\n    *# This should generate the html files in ../dist/apidoc/ for the documentation folder specified and it should only include the documentation from the folder (no Titanium platform docs)\r\n* *The module build template has been updated to use docgen.py and and the modulehtml generator to generate module documentation.*\r\n   Testing:\r\n    *# Rebuild and install the sdk\r\n    *# Using the new sdk, create an iOS module\r\n    *# Create a folder named 'apidoc' in the root of the module\r\n    *# Add yml documentation to an 'apidoc' folder\r\n    *# Build the module {code}./build.py{code}\r\n    *# When the build script gets to the doc generation step, it should display an error in the console saying that TI_ROOT has not been set\r\n    *# Follow the instructions to set the TI_ROOT variable\r\n    *# Rebuild the module\r\n    *# Documentation should be added to the module zip in the /documentation/apidocs folder\r\n    *# Build the module with the --skip-docs flag {code}./build.py --skip-docs{code}\r\n    *# No documentation should be generated in /documentation/apidocs",
					"updateAuthor": {
						"name": "jalter",
						"key": "jalter",
						"displayName": "Jon Alter",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2013-04-23T20:12:30.000+0000",
					"updated": "2013-04-23T20:18:22.000+0000"
				},
				{
					"id": "276839",
					"author": {
						"name": "ingo",
						"key": "ingo",
						"displayName": "Ingo Muschenetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Reopened to fix Assignee",
					"updateAuthor": {
						"name": "ingo",
						"key": "ingo",
						"displayName": "Ingo Muschenetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2013-10-25T20:06:19.000+0000",
					"updated": "2013-10-25T20:06:19.000+0000"
				}
			],
			"maxResults": 4,
			"total": 4,
			"startAt": 0
		}
	}
}