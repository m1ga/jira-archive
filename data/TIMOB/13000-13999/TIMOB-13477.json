{
	"id": "112540",
	"key": "TIMOB-13477",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": null,
		"resolutiondate": null,
		"created": "2013-04-08T21:11:40.000+0000",
		"priority": {
			"name": "Low",
			"id": "4"
		},
		"labels": [
			"supportTeam"
		],
		"versions": [
			{
				"id": "14162",
				"description": "Release 3.1.0",
				"name": "Release 3.1.0",
				"archived": true,
				"released": true,
				"releaseDate": "2013-04-16"
			},
			{
				"id": "15856",
				"description": "Release 3.2.1",
				"name": "Release 3.2.1",
				"archived": false,
				"released": true,
				"releaseDate": "2014-02-10"
			}
		],
		"issuelinks": [],
		"assignee": null,
		"updated": "2018-02-28T20:03:25.000+0000",
		"status": {
			"description": "The issue is open and ready for the assignee to start work on it.",
			"name": "Open",
			"id": "1",
			"statusCategory": {
				"id": 2,
				"key": "new",
				"colorName": "blue-gray",
				"name": "To Do"
			}
		},
		"components": [
			{
				"id": "10206",
				"name": "iOS",
				"description": "iOS Platform"
			}
		],
		"description": "h6.Problem\r\nThere appears to be a difference in parsing XML between Android and iOS. \r\n\r\nIts required to check the nodeName of the first child found in a particular XML document, \"firstChild.nodeName\" should return 'LOGON_RESPONSE'. What we get from iOS is 'Text', because the DOM element thinks this is just a text node. \r\n\r\nAfter using a removeWhitespace custom function the discrepancy may be noticeable even easier.\r\n\r\nh6.Steps to reproduce\r\n1. Take the XML fragment below\r\n2. Monitor console output\r\n\r\nh6.Simple snippet code\r\n{code}\r\nvar xmlTest = '<?xml version=\"1.0\" encoding=\"utf-8\"?>' +\r\n'<LOGON_RESPONSE ID=\"0\">' +\r\n'  <RESULT>ACK</RESULT>' +\r\n'  <DATE_TIME>2013-03-28T09:13:42.786125+00:00</DATE_TIME>' +\r\n'  <DATA>' +\r\n'    <EPOD_SITES>' +\r\n'      <EPOD_SITE>' +\r\n'        <EPL_SITE_ID>TEST</EPL_SITE_ID>' +\r\n'        <EPL_DESCRIPTION>TEST SITE 1</EPL_DESCRIPTION>' +\r\n'      </EPOD_SITE>' +\r\n'      <EPOD_SITE>' +\r\n'        <EPL_SITE_ID>TEST2</EPL_SITE_ID>' +\r\n'        <EPL_DESCRIPTION>TEST SITE 2</EPL_DESCRIPTION>' +\r\n'      </EPOD_SITE>' +\r\n'    </EPOD_SITES>' +\r\n'    <EPOD_JOB_GROUPS>' +\r\n'      <EPOD_JOB_GROUP>' +\r\n'        <EPL_SITE_ID>TEST</EPL_SITE_ID>' +\r\n'        <EPL_JOB_GROUP>EXTER</EPL_JOB_GROUP>' +\r\n'        <EPL_DESCRIPTION>NEW JOB GROUP</EPL_DESCRIPTION>' +\r\n'      </EPOD_JOB_GROUP>' +\r\n'      <EPOD_JOB_GROUP>' +\r\n'        <EPL_SITE_ID>TEST2</EPL_SITE_ID>' +\r\n'        <EPL_JOB_GROUP>EXTER</EPL_JOB_GROUP>' +\r\n'        <EPL_DESCRIPTION>NEW JOB GROUP</EPL_DESCRIPTION>' +\r\n'      </EPOD_JOB_GROUP>' +\r\n'    </EPOD_JOB_GROUPS>' +\r\n'  </DATA>' +\r\n'</LOGON_RESPONSE>';\r\n\r\nvar xml = Ti.XML.parseString(xmlTest);\r\nTi.API.info('Name of xml nodeName: '+xml.nodeName);\r\n\r\nvar nodes = xml.documentElement.childNodes;\r\nTi.API.info(\" nodes: \" + nodes);\r\n\r\nTi.API.info('Name of first node:'+xml.firstChild.nodeName);\r\n\r\nfunction removeWhitespace(str) {\r\n// Function removes all whitespace from an XML fragment, so it will parse correctly in iOS. \r\n    return str.replace(/\\>[\\t ]+$/g, \">\").replace(/\\>[\\t ]+\\</g, \"><\").replace(/[\\t ]+\\</g, \"<\").replace(/\\n/g, \"\");\r\n}\r\n\r\nxml = Ti.XML.parseString(removeWhitespace(xmlTest));\r\nTi.API.info('Name of first node (removeWhitespace):'+xml.firstChild.nodeName); \r\n\r\nTi.API.info('Name of firstChild: '+xml.firstChild);\r\nTi.API.info('Name of xml nodeName: '+xml.nodeName);\r\n{code}\r\n\r\nh6.iOS console output\r\n{code}\r\n[INFO] : \b\b \b ATest/1.0 (3.1.0.v20130314163255.12bff9f)\r\n[DEBUG] : \b\b \bLoading: /Users/egomez/Library/Application Support/iPhone Simulator/6.1/Applications/6ACEF0D3-63E3-4A8A-906F-ECB1591FCA21/ATest.app/app.js, Resource: app_js\r\n[INFO] : \b\b \b Name of xml nodeName: LOGON_RESPONSE\r\n[INFO] : \b\b \b nodes: [object TiDOMNodeList]\r\n[INFO] : \b\b \b Name of first node:#text\r\n[INFO] : \b\b \b Name of first node (removeWhitespace):RESULT\r\n[INFO] : \b\b \b Name of firstChild: [object TiDOMElement]\r\n[INFO] : \b\b \b Name of xml nodeName: LOGON_RESPONSE\r\n[DEBUG] : \b\b \bApplication booted in 17.419994 ms\r\n{code}\r\n\r\nh6.Android console output\r\n{code}\r\n04-08 15:57:04.539: I/TiAPI(3477):  Name of xml nodeName: #document\r\n04-08 15:57:04.539: I/TiAPI(3477):   nodes: [object NodeList]\r\n04-08 15:57:04.539: I/TiAPI(3477):  Name of first node:LOGON_RESPONSE\r\n04-08 15:57:04.554: I/TiAPI(3477):  Name of first node (removeWhitespace):LOGON_RESPONSE\r\n04-08 15:57:04.554: I/TiAPI(3477):  Name of firstChild: [object Element]\r\n04-08 15:57:04.554: I/TiAPI(3477):  Name of xml nodeName: #document\r\n{code}\r\n\r\n\r\n\r\n",
		"attachment": [],
		"flagged": false,
		"summary": "iOS: Parity issue parsing returns text nodes",
		"creator": {
			"name": "egomez",
			"key": "egomez",
			"displayName": "Eduardo Gomez",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "egomez",
			"key": "egomez",
			"displayName": "Eduardo Gomez",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"environment": "iOS 6 simulator\r\nAndroid Razr 2.3.5\r\nTiSDK 3.1",
		"comment": {
			"comments": [
				{
					"id": "282311",
					"author": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "One of my students has discovered this bug independently, or at least one very similar.\n\nWith the following code, the expected result on both iOS and Android would be be ParentNode. However, it is ChildNode on iOS and ParentNode on Android.\n\n{code}\nvar xmlString = '<ParentNode><ChildNode></ChildNode></ParentNode>';\nvar xmlDoc = Ti.XML.parseString(xmlString);\n\nTi.API.info(xmlDoc.firstChild.nodeName);\n$.index.open();\n{code}\n\nThe bug has turned up in their actual app, but he was able to reduce it down and reproduce with the simple test case above. \n\nTested with Ti 3.1.3GA\n",
					"updateAuthor": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2013-12-04T00:27:02.000+0000",
					"updated": "2013-12-04T00:27:02.000+0000"
				}
			],
			"maxResults": 4,
			"total": 4,
			"startAt": 0
		}
	}
}