{
	"id": "123699",
	"key": "TIMOB-15983",
	"fields": {
		"issuetype": {
			"id": "6",
			"description": "gh.issue.epic.desc",
			"name": "Epic",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": {
			"id": "10000",
			"description": "",
			"name": "Done"
		},
		"resolutiondate": "2017-07-12T22:48:30.000+0000",
		"created": "2013-12-13T11:22:16.000+0000",
		"priority": {
			"name": "High",
			"id": "2"
		},
		"labels": [
			"planning-3.3.0"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "emerriman",
			"key": "emerriman",
			"displayName": "Eric Merriman ",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2017-07-12T22:48:39.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "13103",
				"name": "CLI",
				"description": "Node-based command line interface"
			}
		],
		"description": "We have had good luck with an initial implementation of a connection diagnostic test for Titanium:\n\nhttps://github.com/appcelerator/titanium-connection-test\n\nWe should fold this into CLI\n\nThis should result in a tool that customers and sales engineers feel comfortable using at customer sites to diagnose any issues that may be occurring.\n\nWe should run this as part of `ti info` and `ti setup`.",
		"attachment": [
			{
				"id": "53076",
				"filename": "Screen Shot 2014-12-08 at 10.04.39 AM.png",
				"author": {
					"name": "skypanther",
					"key": "skypanther",
					"displayName": "Tim Poulsen",
					"active": true,
					"timeZone": "America/New_York"
				},
				"created": "2014-12-08T15:10:55.000+0000",
				"size": 11247,
				"mimeType": "image/png"
			}
		],
		"flagged": false,
		"summary": "Fold Titanium Diagnostic Test into CLI",
		"creator": {
			"name": "ingo",
			"key": "ingo",
			"displayName": "Ingo Muschenetz",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "ingo",
			"key": "ingo",
			"displayName": "Ingo Muschenetz",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "288317",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "The \"titanium setup check\" command already does many of these things. It checks both http and https requests using the proxy settings. It checks SDKs. It checks permissions. It does not explicitly check certs, but if the certs are bad, then the other tests would fail.\n\nSo, we certainly can find other things to test. Some of these tests should be reported in the \"ti info\" issues list, which they currently are not.",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2014-01-15T19:09:31.000+0000",
					"updated": "2014-01-15T19:09:31.000+0000"
				},
				{
					"id": "300143",
					"author": {
						"name": "ingo",
						"key": "ingo",
						"displayName": "Ingo Muschenetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Note, this is meant to fold in a complete diagnostic solution into the CLI. Thus, it would check for things that only affect Studio (like logging in via Java, vs Node.js modules), or explicitly checking a known list of servers rather than checking a proxy abstractly.",
					"updateAuthor": {
						"name": "ingo",
						"key": "ingo",
						"displayName": "Ingo Muschenetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2014-04-07T23:26:33.000+0000",
					"updated": "2014-04-07T23:26:33.000+0000"
				},
				{
					"id": "334124",
					"author": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "The consensus of the product development team is that these diagnostics functions should either be part of a new subcommand, such as {{ti test}} or included only if the user adds a {{--verbose}} option. They agree that folding these tests into the CLI will make them more useful and available to sales engineers, support, and clients.",
					"updateAuthor": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2014-12-01T16:21:24.000+0000",
					"updated": "2014-12-01T16:21:24.000+0000"
				},
				{
					"id": "334621",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "[~skypanther] Are you still planning on doing this as a new command (i.e. \"test\") or add it to the {{ti setup check}} command where we already have diagnostic checks?\r\n\r\nIf you are creating a \"test\" command, why? What's the rationale? Why is wouldn't we just add this diagnostic info to {{ti setup check}}?",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2014-12-03T20:10:36.000+0000",
					"updated": "2014-12-03T20:10:36.000+0000"
				},
				{
					"id": "334631",
					"author": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "I'm open to implementation suggestions. But my thinking: \r\n\r\n* Not everyone uses proxies, so why clutter the output for those folks?\r\n* The ti connection test takes a couple of command line args, which might make more sense for users to supply as flags to a separate subcommand than to {{ti setup check}}. \r\n* The output of the setup check is already pretty long. On Windows, there's a buffer limit on console output (50 lines?) that we could possibly overfill.",
					"updateAuthor": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2014-12-03T20:30:54.000+0000",
					"updated": "2014-12-03T20:30:54.000+0000"
				},
				{
					"id": "334656",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "[~skypanther] I thought that part of the diagnostic tests were testing proxy settings. Besides, I've already got proxy tests on {{ti setup check}}.\r\n\r\nWe certainly do not want to add command line arguments to {{ti setup}} for {{check}}'s sake. But what args are we talking about? Should these be passed in or should we just include a number of known tests.\r\n\r\nI wouldn't be concerned about the command prompt output buffer size. {{ti info}}'s output is huge as is.",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2014-12-03T21:57:03.000+0000",
					"updated": "2014-12-03T21:57:03.000+0000"
				},
				{
					"id": "334864",
					"author": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "titanium-connection-test has two arguments:\r\n\r\n-{{titanium-connection-test -p \\[proxy url]}} for explicitly specifying the proxy's address- _this can be set via ti setup_\r\n\r\n{{titanium-connection-test -c \\[path/to/certificate]}} for specifying a cert to use if the proxy requires one for a secure connection\r\n\r\n",
					"updateAuthor": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2014-12-04T17:43:08.000+0000",
					"updated": "2014-12-04T18:08:27.000+0000"
				},
				{
					"id": "335086",
					"author": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "I'm unsure of the definitive list of URLs to test. What's in the docs doesn't match what's in titanium-connection-test which doesn't match what was in the CLI. Here's the list I have the CLI checking currently, happy to add or prune as needed.\r\n\r\n* https://api.appcelerator.com/p/v1/release-list,\r\n* https://api.appcelerator.net/p/v1/release-list,\r\n* https://api.cloud.appcelerator.com,\r\n* http://developer.appcelerator.com,\r\n* https://preview.appcelerator.com,\r\n* http://preview.appcelerator.com,\r\n* https://studio.appcelerator.com,\r\n* http://studio.appcelerator.com,\r\n* https://www.appcelerator.com,\r\n* http://www.appcelerator.com,\r\n* https://www.google.com,\r\n* https://github.com,\r\n* https://registry.npmjs.org\r\n\r\nDocs/titanium-connection-test suggest these additional URLs:\r\n\r\n* https://developer.appcelerator.com (doesn't exist)\r\n* https://download.appcelerator.com (redirects to preview.appcelerator.com)\r\n* http: and https://openx.appcelerator.com (gives db connection error)\r\n",
					"updateAuthor": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2014-12-05T18:56:13.000+0000",
					"updated": "2014-12-05T18:56:13.000+0000"
				},
				{
					"id": "335107",
					"author": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "PR https://github.com/appcelerator/titanium/pull/174 \r\n\r\nThis PR implements the URL tests, the cURL tests, and the Java connection test from the titanium-connection-test project. It does not include the autodetection of the proxy and proxy settings. Nor does it test specifying a certificate file, which the ti-con-test project enables you to do. (At least the autodetection of proxy settings should be a separate ticket/PR as it would involve changing other portions of the CLI.)\r\n\r\nFunctional test:\r\n\r\n1. With a good network connection, run {{ti setup}} and choose option {{k}}. You should see output like this:\r\n\r\n{quote}\r\nNetwork\r\n  ✓  online             \r\n  \\-  no proxy server configured \r\n  ✓  Network connection test \r\n  ✓  cURL connection test \r\n  ✓  Java connection test \r\n{quote}\r\n\r\n2. Configure your network to block access to a URL, such as studio.appcelerator.com, then re-run the test above. (I was able to configure this via my wifi router, as I have no actual proxy server available. You could install Charles or Squid & configure to block a site.) You should see output like this:\r\n\r\n{quote}\r\nNetwork\r\n  ✓  online             \r\n  \\-  no proxy server configured \r\n  ✕  http://studio.appcelerator.com (HTTP status: 404) is unreachable \r\n  ✓  cURL connection test \r\n  ✓  Java connection test \r\n{quote}\r\n\r\n",
					"updateAuthor": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2014-12-05T20:07:09.000+0000",
					"updated": "2014-12-05T20:07:09.000+0000"
				},
				{
					"id": "335262",
					"author": {
						"name": "ngupta",
						"key": "ngupta",
						"displayName": "Neeraj Gupta",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "[~tpoulsen] [~cbarber] My recommendation would be to fold these checks into existing \"ti setup check\" instead of introducing another option. It would also be good to include these URLs in a configuration file (so that it can be enhanced easily) instead of burying it in the code.\r\n\r\nIt would be good to indent the output e.g. \"no proxy server configured\" should be indented to show that this check is part of online check. You should show Studio failures in this case under \"Network connection test\" as this is missing here. ",
					"updateAuthor": {
						"name": "ngupta",
						"key": "ngupta",
						"displayName": "Neeraj Gupta",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2014-12-08T03:14:24.000+0000",
					"updated": "2014-12-08T03:16:51.000+0000"
				},
				{
					"id": "335344",
					"author": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "[~ngupta] Thanks for your comments. You make a good point about putting the URLs into a configuration file. I will do so.\r\n\r\nI have included this functionality in {{ti setup check}} (or {{ti setup}} and choose the \"k\" check option) rather than making it a separate option. The output is indented in the actual console output, though that's not clear from the text in my previous Jira comment. I will attach a screenshot.\r\n\r\nTo others reading this ticket: I'd like input on how to handle the cURL checks on Windows, where cURL is not installed by default. I could skip those checks entirely when the setup check is run on Windows; I could check to see if cURL is available and if so, run the tests otherwise output a \"cURL not available\" message; or is there something else I should do?",
					"updateAuthor": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2014-12-08T15:10:31.000+0000",
					"updated": "2014-12-08T15:10:31.000+0000"
				},
				{
					"id": "335397",
					"author": {
						"name": "ngupta",
						"key": "ngupta",
						"displayName": "Neeraj Gupta",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "[~skypanther] Your screenshot looks good. I would add that we run into these connectivity issues more on Windows platform so it is really important to figure out how to make it work on Windows platform.",
					"updateAuthor": {
						"name": "ngupta",
						"key": "ngupta",
						"displayName": "Neeraj Gupta",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2014-12-08T18:07:17.000+0000",
					"updated": "2014-12-08T18:07:17.000+0000"
				},
				{
					"id": "335415",
					"author": {
						"name": "ingo",
						"key": "ingo",
						"displayName": "Ingo Muschenetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I don't know if we need to use cURL specifically on windows. We don't use it anywhere in our platforms--it's just a data point. My guess is we can find an equivalent check using some other built-in utility.",
					"updateAuthor": {
						"name": "ingo",
						"key": "ingo",
						"displayName": "Ingo Muschenetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2014-12-08T19:17:38.000+0000",
					"updated": "2014-12-08T19:17:38.000+0000"
				},
				{
					"id": "335451",
					"author": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "I've updated the PR to address Neeraj's comments as well as Chris' on the PR, which relate to checking for curl on Windows and using it only if available. \r\n\r\nTo my knowledge, there's no equivalent command to the curl utility on Windows. There are PowerShell commands I could use, though there's no guarantee that users would be running {{ti setup}} within PowerShell rather than simply {{cmd}}.\r\n\r\nThe cURL commands are failing on all platforms now because of invalid usernames/passwords. (The same is true of the titanium-connection-test utility, though it's checks mistakenly show the tests as successful because they don't check sufficiently.) Regardless, if we supply working user credentials for the tests, those *usernames and passwords will be in the public titanium repo*, instead of being in the private titanium-connection-test repo. ",
					"updateAuthor": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2014-12-08T20:33:35.000+0000",
					"updated": "2014-12-08T20:37:08.000+0000"
				},
				{
					"id": "335596",
					"author": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "This ticket has been converted to an Epic. Look to the sub-tickets for progress and pull requests.",
					"updateAuthor": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2014-12-09T17:07:35.000+0000",
					"updated": "2014-12-09T17:07:35.000+0000"
				},
				{
					"id": "424039",
					"author": {
						"name": "lmorris",
						"key": "lmorris",
						"displayName": "Lee Morris",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Closing ticket as all related tickets have now been closing.",
					"updateAuthor": {
						"name": "lmorris",
						"key": "lmorris",
						"displayName": "Lee Morris",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2017-07-12T22:48:30.000+0000",
					"updated": "2017-07-12T22:48:30.000+0000"
				}
			],
			"maxResults": 16,
			"total": 16,
			"startAt": 0
		}
	}
}