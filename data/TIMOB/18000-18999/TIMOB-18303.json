{
	"id": "142233",
	"key": "TIMOB-18303",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2015-01-09T15:38:37.000+0000",
		"created": "2015-01-05T17:24:44.000+0000",
		"priority": {
			"name": "High",
			"id": "2"
		},
		"labels": [
			"windows"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "cwilliams",
			"key": "cwilliams",
			"displayName": "Christopher Williams",
			"active": true,
			"timeZone": "America/New_York"
		},
		"updated": "2017-03-16T21:46:30.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "12642",
				"name": "Windows",
				"description": "Windows authoring support"
			}
		],
		"description": "trying to build a project via the command line for windows.  I just applied the Visual Studio Project update 4 to visual studio professional.  I can successfully build a native project in Visual Studio 2013 with emulator 8-1-*.\r\n\r\nNow when I try to build on command line using the command: \r\n\r\nti build -p windows -T wp-emulator -C 8-1-1 --wp-publisher-guid [GUID]\r\n\r\nI get the error \"no Windows Phone Emulators found\"\r\n\r\nno emulators are listed either when I run \"ti info\"\r\n\r\n",
		"attachment": [],
		"flagged": false,
		"summary": "Windows: No emulators found when trying to build project",
		"creator": {
			"name": "jspain",
			"key": "jspain",
			"displayName": "Jamil Spain",
			"active": false,
			"timeZone": "America/New_York"
		},
		"subtasks": [],
		"reporter": {
			"name": "jspain",
			"key": "jspain",
			"displayName": "Jamil Spain",
			"active": false,
			"timeZone": "America/New_York"
		},
		"environment": null,
		"closedSprints": [
			{
				"id": 190,
				"state": "closed",
				"name": "2015 Sprint 01 Windows",
				"startDate": "2015-01-04T01:00:00.000Z",
				"endDate": "2015-01-17T01:00:00.000Z",
				"completeDate": "2015-01-19T17:24:52.769Z",
				"originBoardId": 144
			}
		],
		"comment": {
			"comments": [
				{
					"id": "337842",
					"author": {
						"name": "ingo",
						"key": "ingo",
						"displayName": "Ingo Muschenetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Please try the following:\r\n\r\n# Open Visual Studio\r\n# Create a new Windows Phone Project (not a Titanium one)\r\n# Try to run it on an emulator\r\n\r\nAre there emulators listed there?",
					"updateAuthor": {
						"name": "ingo",
						"key": "ingo",
						"displayName": "Ingo Muschenetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2015-01-05T18:17:38.000+0000",
					"updated": "2015-01-05T18:17:38.000+0000"
				},
				{
					"id": "337850",
					"author": {
						"name": "jspain",
						"key": "jspain",
						"displayName": "Jamil Spain",
						"active": false,
						"timeZone": "America/New_York"
					},
					"body": "Yes, emulators are listed and work fine",
					"updateAuthor": {
						"name": "jspain",
						"key": "jspain",
						"displayName": "Jamil Spain",
						"active": false,
						"timeZone": "America/New_York"
					},
					"created": "2015-01-05T18:27:14.000+0000",
					"updated": "2015-01-05T18:27:14.000+0000"
				},
				{
					"id": "337902",
					"author": {
						"name": "sfeather",
						"key": "sfeather",
						"displayName": "Stephen Feather",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "This is where i was as well, but using latest community edition and a ti info shows 2 emulators available.\r\nI'll go back to lurking as I don't have the time this week to get back into the windows stuff.",
					"updateAuthor": {
						"name": "sfeather",
						"key": "sfeather",
						"displayName": "Stephen Feather",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2015-01-05T21:36:17.000+0000",
					"updated": "2015-01-05T21:36:17.000+0000"
				},
				{
					"id": "338026",
					"author": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "[~skypanther] is experiencing this issue as well, and I've spent a lot of time debugging it with him. So far it looks very much to me like a somewhat broken VS 2103 install. This is the only thing that appears to break and the underlying error stems from windowslib's wptool, which when trying to list the devices gives us:\r\n{code}\r\nUnhandled Exception: System.IO.FileNotFoundException: The system cannot find the file specified. (Exception from HRESULT: 0x80070002)\r\n   at Microsoft.VisualStudio.DeviceConnectivity.Interop.ConManClass.GetDatastore(UInt32 dwLocale)\r\n   at Microsoft.SmartDevice.Connectivity.DatastoreManager..ctor(Int32 localeId)\r\n   at Microsoft.SmartDevice.Connectivity.Wrapper.ConnectivityWrapper11.GetDatastoreManager(Int32 localeId)\r\n   at Microsoft.SmartDevice.Connectivity.Wrapper.ConnectivityWrapper11.GetCurrentPlatform(Int32 localeId)\r\n   at Microsoft.SmartDevice.Connectivity.Wrapper.ConnectivityWrapper11.GetEmulatorsIds(Int32 localeId)\r\n   at Microsoft.SmartDevice.MultiTargeting.Connectivity.MultiTargetingConnectivity.GetConnectableDevices(Boolean bNoLegacyDevices)\r\n   at wptool.wptool.Main(String[] args)\r\n{code}\r\n\r\nI cannot for the life of me figure out why it won't work here, and the best indication I have is that the VS install has some old/bad DLL or something.\r\n\r\nOne possible \"fix\" is not to rely on [~cb1kenobi]'s wptool to get the listing of devices, but instead defer to C:\\Program Files (x86)\\Microsoft SDKs\\Windows Phone\\v8.1\\Tools\\AppDeploy\\AppDeployCmd.exe for WP 8.1, and C:\\Program Files (x86)\\Microsoft SDKs\\Windows Phone\\v8.0\\Tools\\XAP Deployment\\XapDeployCmd.exe for WP 8.0 to grab the listing of devices. We'd have to rely on basically using regex to parse out the output into structured data.\r\n\r\nI should note, however, that if wptool is busted for enumerating devices, it will be for connecting to devices as well, so we wouldn't be able to test if we can connect to a device which we use as a sanity check for deploying to device (and I think we use it for launching emulators without installing apps).",
					"updateAuthor": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2015-01-06T20:55:36.000+0000",
					"updated": "2015-01-06T21:02:35.000+0000"
				},
				{
					"id": "338038",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "I don't understand why XapDeployCmd would work and wptool does not. It's making the same exact API calls as XapDeployCmd.\r\n\r\nThe call in the stack to {{Microsoft.VisualStudio.DeviceConnectivity.Interop.ConManClass.GetDatastore(UInt32 dwLocale)}} is a native COM call. I have no clue what sort of file operations this function is doing.\r\n\r\nI Googled the error and found this: http://weblog.west-wind.com/posts/2005/Mar/12/And-the-Whidbey-SmartPhone-Saga-continues-with-the-February-CTP. The article is old, but explains that the user upgraded their VS and that's when things broke.\r\n\r\nSo this may be the result of a corrupt VS install. I don't get why XapDeployCmd would work though. What is this {{GetDatastore()}} function doing? What file does not exist? A library? Maybe the file exists, but it's a file permissions thing?",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2015-01-06T21:36:06.000+0000",
					"updated": "2015-01-06T21:36:06.000+0000"
				},
				{
					"id": "338065",
					"author": {
						"name": "jspain",
						"key": "jspain",
						"displayName": "Jamil Spain",
						"active": false,
						"timeZone": "America/New_York"
					},
					"body": "Chris, is this after installing the vs update 4 patch?\r\n\r\nBefore the patch, I can confirm that the sdk saw devices, but could not start the app on the simulator, neither could vs professional 2013 start an 8.1 mobile native project.\r\n\r\n",
					"updateAuthor": {
						"name": "jspain",
						"key": "jspain",
						"displayName": "Jamil Spain",
						"active": false,
						"timeZone": "America/New_York"
					},
					"created": "2015-01-06T22:58:39.000+0000",
					"updated": "2015-01-07T18:38:29.000+0000"
				},
				{
					"id": "338069",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "It's possible that wptool was compiled with an older device connectivity assemblies, then after upgrading these files are no longer found. This is bad. That would explain the FileNotFoundException. Perhaps what we should do is after the \"assembly\" library finds the dependent assemblies, we copy them from the GAC to the windowslib directory, build wptool against them, and we're set. We can't distribute those assemblies, but we can copy them just in case the get blown away from the GAC.\r\n\r\nIf [~skypanther] deletes the wptool.exe from the windowslib\\bin folder, windowslib will recompile it. I wonder if this will fix his issue.",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2015-01-06T23:04:29.000+0000",
					"updated": "2015-01-06T23:04:29.000+0000"
				},
				{
					"id": "338167",
					"author": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "I tried deleting windowslib\\wptool\\bin\\Release\\wptool.exe as well as windowslib\\bin\\wptool.exe. Neither worked. I get the same error most of the time, though I also got:\r\n\r\n{code}\r\nPS C:\\Users\\Tim\\Documents\\Titanium_Studio_Workspace\\newwintestclassic> ti build -p windows\r\n\r\nC:\\Users\\Tim\\AppData\\Roaming\\npm\\node_modules\\titanium\\node_modules\\longjohn\\dist\\longjohn.js:185\r\n        throw e;\r\n              ^\r\nError: EBUSY, resource busy or locked 'C:\\ProgramData\\Titanium\\mobilesdk\\win32\\3.6.0.v20150106084422\\node_modules\\window\r\nslib\\wptool\\bin\\Release'\r\n    at fs.rmdirSync (fs.js:612:18)\r\n    at exports.rmdirSyncRecursive (C:\\ProgramData\\Titanium\\mobilesdk\\win32\\3.6.0.v20150106084422\\node_modules\\wrench\\lib\r\n\\wrench.js:170:15)\r\n    at exports.rmdirSyncRecursive (C:\\ProgramData\\Titanium\\mobilesdk\\win32\\3.6.0.v20150106084422\\node_modules\\wrench\\lib\r\n\\wrench.js:150:21)\r\n    at C:\\ProgramData\\Titanium\\mobilesdk\\win32\\3.6.0.v20150106084422\\node_modules\\windowslib\\lib\\wptool.js:202:81\r\n    at C:\\ProgramData\\Titanium\\mobilesdk\\win32\\3.6.0.v20150106084422\\node_modules\\windowslib\\lib\\assemblies.js:43:11\r\n    at C:\\ProgramData\\Titanium\\mobilesdk\\win32\\3.6.0.v20150106084422\\node_modules\\windowslib\\lib\\utilities.js:48:3\r\n    at process._tickCallback (node.js:415:13)\r\n---------------------------------------------\r\n    at magik (C:\\ProgramData\\Titanium\\mobilesdk\\win32\\3.6.0.v20150106084422\\node_modules\\windowslib\\lib\\utilities.js:33:\r\n10)\r\n    at Object.detect (C:\\ProgramData\\Titanium\\mobilesdk\\win32\\3.6.0.v20150106084422\\node_modules\\windowslib\\lib\\assembli\r\nes.js:40:9)\r\n...\r\n{code}\r\n\r\n(says the file was locked, though in fact it was deleted)",
					"updateAuthor": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2015-01-07T15:22:52.000+0000",
					"updated": "2015-01-07T15:32:57.000+0000"
				},
				{
					"id": "338188",
					"author": {
						"name": "jspain",
						"key": "jspain",
						"displayName": "Jamil Spain",
						"active": false,
						"timeZone": "America/New_York"
					},
					"body": "Just pulled a current CI Build 3.6.0v20150107091442 and the problem still  persists for me. ",
					"updateAuthor": {
						"name": "jspain",
						"key": "jspain",
						"displayName": "Jamil Spain",
						"active": false,
						"timeZone": "America/New_York"
					},
					"created": "2015-01-07T18:40:56.000+0000",
					"updated": "2015-01-07T18:40:56.000+0000"
				},
				{
					"id": "338204",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "[~cwilliams] windowslib should support launching an emulator without installing & launching an app. I'm pretty sure that you cannot launch the emulator, install the app, but not launch it.",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2015-01-07T19:28:11.000+0000",
					"updated": "2015-01-07T19:28:11.000+0000"
				},
				{
					"id": "338216",
					"author": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "[~cb1kenobi] I'm referring to launching an emulator without installing an app. We can use AppDeployCmd to simultaneously install an app and launch it, which launches an emulator as a byproduct - so replacing that functionality is easy (and actually that's what you already do, if I'm correct). But if we want to just launch the emulator without installing or launching a specific app, then it becomes a pain in the butt to do. I suppose I could cheat again there and ask the emulator to launch some pre-installed app using it's product id.",
					"updateAuthor": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2015-01-07T20:06:19.000+0000",
					"updated": "2015-01-07T20:06:49.000+0000"
				},
				{
					"id": "338238",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "[~cwilliams] OK, so that's what wptool.connect() does. It will launch the emulator without installing an app.",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2015-01-07T20:40:55.000+0000",
					"updated": "2015-01-07T20:40:55.000+0000"
				},
				{
					"id": "338245",
					"author": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "[~cb1kenobi] Right, and if Tim/Jamil/whomever's wptool.exe is busted that won't work. So I need to come up with a fallback for launching an emulator without installing an app. I'm hoping I can just do AppDeployCmd /launch with a pre-installed app id, because if not the hack to launch an emulator from the command line sucks.",
					"updateAuthor": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2015-01-07T20:54:44.000+0000",
					"updated": "2015-01-07T20:54:44.000+0000"
				},
				{
					"id": "338248",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "[~cwilliams] Make sense. So why is wptool not working for Tim and Jamil, yet AppDeployCmd works just fine? I know it's because of the exception, but is there something goofy with their setup? I wonder if my VM has the same issues?",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2015-01-07T21:08:23.000+0000",
					"updated": "2015-01-07T21:08:23.000+0000"
				},
				{
					"id": "338253",
					"author": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "[~cb1kenobi] That's the million $$$ question. I don't know. They both had a previous Windows Phone 8 setup they used for Win Hybrid, and then upgraded so that appears to be the common ground here. But I can't reproduce and I don't know how to debug further to determine why wptool is broken for them.",
					"updateAuthor": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2015-01-07T21:25:49.000+0000",
					"updated": "2015-01-07T21:25:49.000+0000"
				},
				{
					"id": "338360",
					"author": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "Ok, found it. The 8.0 tooling is broken for [~skypanther]. If he runs XapDeployCmd it fails with the same error. Because we fail immediately and don't try 8.1's tooling/devices, we get none.",
					"updateAuthor": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2015-01-08T16:52:14.000+0000",
					"updated": "2015-01-08T16:52:14.000+0000"
				},
				{
					"id": "338368",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "Ha, well, there ya go. I'm cool with wptool going away. I never tried the bogus guid trick, but it works great! We just want to retain the logic that starts the emulator as soon as possible in the build, then call XapDeployCmd again to install the app.",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2015-01-08T17:51:19.000+0000",
					"updated": "2015-01-08T17:51:19.000+0000"
				},
				{
					"id": "338374",
					"author": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "https://github.com/appcelerator/windowslib/pull/10",
					"updateAuthor": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2015-01-08T18:09:50.000+0000",
					"updated": "2015-01-08T18:09:50.000+0000"
				},
				{
					"id": "338380",
					"author": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "By applying the windowslib PR#10 changes to my SDK I am able to build successfully for a Windows Phone 8.1 emulator. That PR has been merged.",
					"updateAuthor": {
						"name": "skypanther",
						"key": "skypanther",
						"displayName": "Tim Poulsen",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2015-01-08T18:26:12.000+0000",
					"updated": "2015-01-08T18:26:12.000+0000"
				},
				{
					"id": "338381",
					"author": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "https://github.com/appcelerator/titanium_mobile/pull/6550",
					"updateAuthor": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2015-01-08T18:28:02.000+0000",
					"updated": "2015-01-08T18:28:02.000+0000"
				},
				{
					"id": "338526",
					"author": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "reopening to assign sprint...",
					"updateAuthor": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2015-01-09T15:38:20.000+0000",
					"updated": "2015-01-09T15:38:20.000+0000"
				},
				{
					"id": "413176",
					"author": {
						"name": "lmorris",
						"key": "lmorris",
						"displayName": "Lee Morris",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Closing ticket as the issue has been fixed.",
					"updateAuthor": {
						"name": "lmorris",
						"key": "lmorris",
						"displayName": "Lee Morris",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2017-03-16T21:46:30.000+0000",
					"updated": "2017-03-16T21:46:30.000+0000"
				}
			],
			"maxResults": 27,
			"total": 27,
			"startAt": 0
		}
	}
}