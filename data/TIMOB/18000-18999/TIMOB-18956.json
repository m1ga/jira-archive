{
	"id": "148241",
	"key": "TIMOB-18956",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [
			{
				"id": "16723",
				"description": "Windows Platform Support, ListView updates, Vector overlays in maps",
				"name": "Release 4.1.0",
				"archived": false,
				"released": true,
				"releaseDate": "2015-07-08"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2015-06-11T21:06:36.000+0000",
		"created": "2015-05-26T21:21:58.000+0000",
		"priority": {
			"name": "High",
			"id": "2"
		},
		"labels": [
			"android",
			"orientationChange"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "msamah",
			"key": "msamah",
			"displayName": "Ashraf Abu",
			"active": false,
			"timeZone": "Asia/Singapore"
		},
		"updated": "2017-03-21T23:51:54.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10202",
				"name": "Android",
				"description": "Android Platform"
			}
		],
		"description": "The documentation confirms that this is missing from the various places where in Android you could detect orientation change.\r\n\r\n* Ti.Gesture.orientationchange event http://docs.appcelerator.com/platform/latest/#!/api/Titanium.Gesture-event-orientationchange\r\n \r\n* Ti.Gesture.orientation property http://docs.appcelerator.com/platform/latest/#!/api/Titanium.Gesture-property-orientation\r\n \r\n* Ti.Android.Activity. requestedOrientation property http://docs.appcelerator.com/platform/latest/#!/api/Titanium.Android.Activity-property-requestedOrientation\r\n\r\nFrom docs:\r\nOn Android and Mobile Web, returns the orientation of the current window, and *never reports the \"reverse\" orientations* (LANDSCAPE_RIGHT and UPSIDE_PORTRAIT).\r\n\r\nAndroid itself does report the reverse orientation changes, Titanium is just not surfacing this level of reporting. \r\n\r\nThis deficiency prevents being able to detect precisely to which orientation has the device been rotated to with respect to a view, such as a camera view needed for barcode scanning. When the device has rotated but the view (and the object which is the subject of the scanning) has not rotated, you must be able to determine what the relative rotation is without the possibility of being 180 degrees off.\r\n\r\nLet me try to illustrate how this becomes a problem with some ASCII art and the scenario being a barcode scanning camera view in a module where the app must report to the module the orientation change. This is just an example of 1 use case where this deficiency can be seen as a problem. \r\n\r\nLet's say this is your device in portrait orientation:\r\n\r\n{noformat}\r\nA---B\r\n|a-b|\r\n|| ||\r\n|c-d|\r\nC---D\r\n{noformat}\r\n\r\nABCD are the corners of the hardware, abcd are the corners of the camera view. Let's say the camera sensor is mounted such that the top-left corner of the picture is nearest to the A corner, the top-right corner of the picture is nearest to the B corner, etc. In this case, the rotation difference between the camera sensor and the camera view is 0 degrees, so the pixel at the top-left corner of the picture can go near the 'a' corner of the view, the pixel at the top-right corner of the picture can go near the 'b' corner of the view, etc.\r\n\r\nIf the activity supports landscape-right orientation, then this is how your screen will look like if you rotate your device 90 degrees counter-clockwise:\r\n\r\n{noformat}\r\nB------C\r\n|a----b|\r\n||    ||\r\n|c----d|\r\nA------D\r\n{noformat}\r\n\r\nThe important thing to realize is that the camera sensor rotated with the hardware but the view didn't, and neither did the object you are pointing the camera at. So the top-left pixel is still near the A corner as far as the camera sensor is concerned, but now that pixel needs to go to the 'c' corner of the view, otherwise from your (the user's) perspective the camera feed will look like it's rotated 90 degrees clockwise (because the object in front of the camera didn't rotate with the camera sensor).\r\n\r\nThis can be achieved by the app telling the module that the activity's UI is now in landscape-right orientation, which the module will interpret not as landscape-right per se, rather as \"rotate the camera feed 90 degrees counter-clockwise\".\r\n\r\nI think by now it should be clear why we need to distinguish between landscape-right and landscape-left, but just for completeness -- if the activity supports landscape-left orientation as well, then this is how your screen will look like if you rotate your device 90 degrees clockwise (relative to portrait):\r\n\r\n{noformat}\r\nC------A\r\n|a----b|\r\n||    ||\r\n|c----d|\r\nD------B\r\n{noformat}\r\n\r\nThe top-left pixel is still near the A corner as far as the camera sensor is concerned, but now that pixel needs to go to the 'b' corner of the view. In this case the module would have to rotate the camera feed clockwise by 90 degrees. If we can't distinguish between these two cases (i.e. landscape-left and landscape-right), then the best we can do is to rotate the camera feed by 90 degrees in the same direction in both cases, which will mean that the camera feed will appear off by 180-degrees (i.e. upside-down) to the user in one of those cases.\r\n\r\nSimilar logic applies to portrait vs. reversePortrait.\r\n\r\nA work around would be to recreate orientation change handling in the module, however the better solution should be to improve this handling in the Titanium SDK  so that the app can notify the module using Titanium SDK available functions/events about this change instead of the module needing to unnecessarily replicate Titanium SDK capabilities just to improve them.\r\n\r\nThis works as expected in the iOS Titanium SDK.",
		"attachment": [],
		"flagged": false,
		"summary": "Android orientation change detection is missing reverse orientation distinction",
		"creator": {
			"name": "patakijv",
			"key": "patakijv",
			"displayName": "John V Pataki",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "patakijv",
			"key": "patakijv",
			"displayName": "John V Pataki",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"closedSprints": [
			{
				"id": 416,
				"state": "closed",
				"name": "2015 Sprint 12 SDK",
				"startDate": "2015-06-06T00:00:43.862Z",
				"endDate": "2015-06-20T00:00:00.000Z",
				"completeDate": "2015-06-23T05:41:35.834Z",
				"originBoardId": 114
			}
		],
		"comment": {
			"comments": [
				{
					"id": "353562",
					"author": {
						"name": "rblalock",
						"key": "rblalock",
						"displayName": "Rick Blalock",
						"active": false,
						"timeZone": "America/Havana"
					},
					"body": "[~rtlechuga] - FYI this is needed to complete the new ti.barcode module",
					"updateAuthor": {
						"name": "rblalock",
						"key": "rblalock",
						"displayName": "Rick Blalock",
						"active": false,
						"timeZone": "America/Havana"
					},
					"created": "2015-05-26T21:25:21.000+0000",
					"updated": "2015-05-26T21:25:21.000+0000"
				},
				{
					"id": "353777",
					"author": {
						"name": "sdavenport",
						"key": "sdavenport",
						"displayName": "Scott Davenport",
						"active": true,
						"timeZone": "America/Havana"
					},
					"body": "[~ingo] how can we get this scoped and in?  Amerisource has been waiting for the new barcode module and this is a blocker issue.",
					"updateAuthor": {
						"name": "sdavenport",
						"key": "sdavenport",
						"displayName": "Scott Davenport",
						"active": true,
						"timeZone": "America/Havana"
					},
					"created": "2015-05-28T13:12:42.000+0000",
					"updated": "2015-05-28T13:12:42.000+0000"
				},
				{
					"id": "353780",
					"author": {
						"name": "ingo",
						"key": "ingo",
						"displayName": "Ingo Muschenetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I'm not sure why this wasn't just created in TIMOB. Anyway, we'll review it.",
					"updateAuthor": {
						"name": "ingo",
						"key": "ingo",
						"displayName": "Ingo Muschenetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2015-05-28T13:47:24.000+0000",
					"updated": "2015-05-28T13:47:24.000+0000"
				},
				{
					"id": "353781",
					"author": {
						"name": "ingo",
						"key": "ingo",
						"displayName": "Ingo Muschenetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "[~cng] please schedule this for an upcoming sprint.",
					"updateAuthor": {
						"name": "ingo",
						"key": "ingo",
						"displayName": "Ingo Muschenetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2015-05-28T13:48:06.000+0000",
					"updated": "2015-05-28T13:48:06.000+0000"
				},
				{
					"id": "354543",
					"author": {
						"name": "msamah",
						"key": "msamah",
						"displayName": "Ashraf Abu",
						"active": false,
						"timeZone": "Asia/Singapore"
					},
					"body": "[~patakijv] [~rblalock] Hi, I'm working on this and just want to check on some things.\r\n\r\nCurrently, on an Android tablet, when I rotate an application, I can get it to display on Landscape_right, landscape_left, portrait and portrait_reverse. On an Android phone, an application can generally rotate Landscape_right, landscape_left and portrait. \r\n\r\nThe app, in a phone won't rotate portrait_reverse. In this scenario, would you still need the phone to produce an event i.e. output \"portrait_reverse\" when it is upside down even though app is still right side up? In android tablet, where the app can rotate to portrait_reverse, getting it to produce \"portrait_reverse\" is no problem as the app does rotate.\r\n\r\nIf there is no event needed for portrait_reverse when the application itself doesn't rotate portrait_reverse, the code change can be pretty straight forward.",
					"updateAuthor": {
						"name": "msamah",
						"key": "msamah",
						"displayName": "Ashraf Abu",
						"active": false,
						"timeZone": "Asia/Singapore"
					},
					"created": "2015-06-08T08:52:34.000+0000",
					"updated": "2015-06-08T08:57:36.000+0000"
				},
				{
					"id": "354644",
					"author": {
						"name": "msamah",
						"key": "msamah",
						"displayName": "Ashraf Abu",
						"active": false,
						"timeZone": "Asia/Singapore"
					},
					"body": "PR: https://github.com/appcelerator/titanium_mobile/pull/6899\r\n\r\nPlease test using an Android table and an Android phone to see the difference. I was testing with a Nexus 9 and Nexus 6. In Nexus 6, the app would not rotate upside down, hence UPSIDE_PORTRAIT is not available. \r\n\r\nApp.js\r\n{code}\r\nvar win = Titanium.UI.createWindow({  \r\n    title:'Window',\r\n    backgroundColor:'#fff'\r\n});\r\n\r\nwin.orientationModes = [ \r\n    Titanium.UI.PORTRAIT, \r\n    Titanium.UI.UPSIDE_PORTRAIT,\r\n    Titanium.UI.LANDSCAPE_LEFT,\r\n\tTitanium.UI.LANDSCAPE_RIGHT\r\n];\r\n\r\nTi.Gesture.addEventListener('orientationchange', function(e){\r\n    switch(e.orientation) {\r\n    case Ti.UI.LANDSCAPE_RIGHT:\r\n        Ti.API.info(\"LANDSCAPE_RIGHT\");\r\n\t\tTi.UI.createNotification({\r\n\t    \tmessage:\"LANDSCAPE_RIGHT\",\r\n\t    \tduration: Ti.UI.NOTIFICATION_DURATION_SHORT\r\n\t\t}).show();\r\n        break;\r\n    case Ti.UI.LANDSCAPE_LEFT:\r\n        Ti.API.info(\"LANDSCAPE_LEFT\");\r\n\t\tTi.UI.createNotification({\r\n\t    \tmessage:\"LANDSCAPE_LEFT\",\r\n\t    \tduration: Ti.UI.NOTIFICATION_DURATION_SHORT\r\n\t\t}).show();\r\n        break;\r\n    case Ti.UI.UPSIDE_PORTRAIT:\r\n        Ti.API.info(\"UPSIDE_PORTRAIT\");\r\n\t\tTi.UI.createNotification({\r\n\t    \tmessage:\"UPSIDE_PORTRAIT\",\r\n\t    \tduration: Ti.UI.NOTIFICATION_DURATION_SHORT\r\n\t\t}).show();\r\n        break;\r\n    case Ti.UI.PORTRAIT:\r\n        Ti.API.info(\"PORTRAIT\");\r\n\t\tTi.UI.createNotification({\r\n\t    \tmessage:\"PORTRAIT\",\r\n\t    \tduration: Ti.UI.NOTIFICATION_DURATION_SHORT\r\n\t\t}).show();\r\n        break;\r\n    default:\r\n        Ti.API.info(\"Unknown!!\");\r\n\t} \r\n});\r\n\r\nwin.open();\r\n{code}",
					"updateAuthor": {
						"name": "msamah",
						"key": "msamah",
						"displayName": "Ashraf Abu",
						"active": false,
						"timeZone": "Asia/Singapore"
					},
					"created": "2015-06-09T05:49:01.000+0000",
					"updated": "2015-06-09T05:49:01.000+0000"
				},
				{
					"id": "414684",
					"author": {
						"name": "lmorris",
						"key": "lmorris",
						"displayName": "Lee Morris",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Closing ticket as fixed.",
					"updateAuthor": {
						"name": "lmorris",
						"key": "lmorris",
						"displayName": "Lee Morris",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2017-03-21T23:51:54.000+0000",
					"updated": "2017-03-21T23:51:54.000+0000"
				}
			],
			"maxResults": 7,
			"total": 7,
			"startAt": 0
		}
	}
}