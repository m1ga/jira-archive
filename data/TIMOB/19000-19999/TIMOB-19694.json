{
	"id": "151883",
	"key": "TIMOB-19694",
	"fields": {
		"issuetype": {
			"id": "2",
			"description": "A new feature of the product, which has yet to be developed.",
			"name": "New Feature",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [
			{
				"id": "16997",
				"name": "Release 5.2.0",
				"archived": false,
				"released": true,
				"releaseDate": "2016-02-23"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2015-12-09T05:39:33.000+0000",
		"created": "2015-10-09T09:16:40.000+0000",
		"epic": {
			"id": 151873,
			"key": "TIMOB-19691",
			"name": "SplitView / SlideView support",
			"summary": "iOS9: Enable SplitView / SlideView support",
			"color": {
				"key": "color_9"
			},
			"done": false
		},
		"priority": {
			"name": "High",
			"id": "2"
		},
		"labels": [
			"notable"
		],
		"versions": [],
		"issuelinks": [
			{
				"id": "50722",
				"type": {
					"id": "10122",
					"name": "Gantt: start-finish",
					"inward": "is triggered by",
					"outward": "is triggering"
				},
				"outwardIssue": {
					"id": "155236",
					"key": "TIMOB-20489",
					"fields": {
						"summary": "iOS modules unable to write to product",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Critical",
							"id": "1"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "50686",
				"type": {
					"id": "10011",
					"name": "Includes",
					"inward": "is included by",
					"outward": "includes"
				},
				"outwardIssue": {
					"id": "143338",
					"key": "TIMOB-18425",
					"fields": {
						"summary": "Replace launch / splash images with Ti.UI.Window",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "None",
							"id": "6"
						},
						"issuetype": {
							"id": "2",
							"description": "A new feature of the product, which has yet to be developed.",
							"name": "New Feature",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "50636",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"outwardIssue": {
					"id": "155009",
					"key": "TIMOB-20430",
					"fields": {
						"summary": "Switching to or updating custom Storyboard should trigger full rebuild",
						"status": {
							"description": "The issue is open and ready for the assignee to start work on it.",
							"name": "Open",
							"id": "1",
							"statusCategory": {
								"id": 2,
								"key": "new",
								"colorName": "blue-gray",
								"name": "To Do"
							}
						},
						"priority": {
							"name": "High",
							"id": "2"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "50687",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"outwardIssue": {
					"id": "155098",
					"key": "TIMOB-20453",
					"fields": {
						"summary": "5.3.0 Regression: \"rendering artifact\" between launch image and first view",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Critical",
							"id": "1"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "50735",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"outwardIssue": {
					"id": "155268",
					"key": "TIMOB-20497",
					"fields": {
						"summary": "Remove \"rendering artifact\" between launch storyboard and first view",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Critical",
							"id": "1"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "50072",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"outwardIssue": {
					"id": "153715",
					"key": "TIDOC-2395",
					"fields": {
						"summary": "Guide on using launchScreen for iOS",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Critical",
							"id": "1"
						},
						"issuetype": {
							"id": "2",
							"description": "A new feature of the product, which has yet to be developed.",
							"name": "New Feature",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "50634",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"outwardIssue": {
					"id": "155007",
					"key": "TIMOB-20429",
					"fields": {
						"summary": "LaunchLogo asset catalog should also be created if custom storyboard is found",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Low",
							"id": "4"
						},
						"issuetype": {
							"id": "4",
							"description": "An improvement or enhancement to an existing feature or task.",
							"name": "Improvement",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "51286",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"inwardIssue": {
					"id": "159405",
					"key": "TIMOB-23172",
					"fields": {
						"summary": "Default min-ios-ver and default enable-launch-screen-storyboard combination rejected by Apple",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "High",
							"id": "2"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": {
			"name": "cbarber",
			"key": "cbarber",
			"displayName": "Chris Barber",
			"active": true,
			"timeZone": "America/Chicago"
		},
		"updated": "2016-04-08T06:40:20.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10206",
				"name": "iOS",
				"description": "iOS Platform"
			},
			{
				"id": "10207",
				"name": "Tooling"
			}
		],
		"description": "Currently, we are using image files, copied into an assets catalog named LaunchImage for the launch screens. There is a newer method supported in Xcode 6 / iOS8 and greater, whereby you can have a LaunchScreen.storyboard file, in which you can configure the launch screen, and it's adaptable to all device types. We need this file to exist in order for slideView / splitView to work on iOS9.\r\n\r\nSimilar to what we did with watchos2, we need work flow to be as such:\r\n1. CLI generate an Xcode project template that contains a sample LaunchImage file. (ti create ... --template launchScreen)\r\n2. Ti developer does what he wants in that Xcode project, very likely with an assets catalog in it as well.\r\n3. when calling ti build, CLI copies this storyboard file and well as any associated image sets in the assets catalog into the build project.\r\n4. info.plist will also need this\r\n{code}\r\n\t<key>UILaunchStoryboardName</key>\r\n\t<string>LaunchScreen</string>\r\n{code}\r\nso we either include automatically or have the Ti developer include it in tiapp.xml\r\n\r\nNote: The existence of LaunchScreen.storyboard will make Xcode ignore the original LaunchImage asset catalog. But we still cannot delete this because it's required for this method in TiRootViewController.m\r\n{code}\r\n- (UIImage*)defaultImageForOrientation:(UIDeviceOrientation) orientation resultingOrientation:(UIDeviceOrientation *)imageOrientation idiom:(UIUserInterfaceIdiom*) imageIdiom\r\n{code} as well as devices < iOS8.\r\n\r\nUseful references: [Video of how we can integrate LaunchScreen.storyboard|https://www.dropbox.com/s/hholmeay9mmlpcg/Ti.SlideOver.mov?dl=0]\r\n[Xamarin | https://developer.xamarin.com/guides/ios/application_fundamentals/working_with_images/launch-screens/] ",
		"attachment": [
			{
				"id": "57717",
				"filename": "appcLogo.png",
				"author": {
					"name": "cng",
					"key": "cng",
					"displayName": "Chee Kiat Ng",
					"active": false,
					"timeZone": "America/Los_Angeles"
				},
				"created": "2015-12-09T05:38:39.000+0000",
				"size": 13801,
				"mimeType": "image/png"
			},
			{
				"id": "57716",
				"filename": "LaunchLogo.png",
				"author": {
					"name": "cng",
					"key": "cng",
					"displayName": "Chee Kiat Ng",
					"active": false,
					"timeZone": "America/Los_Angeles"
				},
				"created": "2015-12-09T05:38:54.000+0000",
				"size": 87021,
				"mimeType": "image/png"
			},
			{
				"id": "57715",
				"filename": "LaunchScreen.storyboard",
				"author": {
					"name": "cng",
					"key": "cng",
					"displayName": "Chee Kiat Ng",
					"active": false,
					"timeZone": "America/Los_Angeles"
				},
				"created": "2015-12-09T05:39:00.000+0000",
				"size": 4201,
				"mimeType": "application/octet-stream"
			}
		],
		"flagged": false,
		"summary": "CLI: Create template to configure launchScreen.storyboard",
		"creator": {
			"name": "cng",
			"key": "cng",
			"displayName": "Chee Kiat Ng",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "cng",
			"key": "cng",
			"displayName": "Chee Kiat Ng",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"closedSprints": [
			{
				"id": 538,
				"state": "closed",
				"name": "2015 Sprint 25 Tooling",
				"startDate": "2015-12-07T18:48:43.028Z",
				"endDate": "2015-12-19T03:48:00.000Z",
				"completeDate": "2016-01-04T19:45:31.946Z",
				"originBoardId": 121
			}
		],
		"comment": {
			"comments": [
				{
					"id": "368245",
					"author": {
						"name": "cng",
						"key": "cng",
						"displayName": "Chee Kiat Ng",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "[~cbarber] attached Launch Screen.storyboard. I followed the youtube guide here:\r\nhttp://simblestudios.com/blog/development/easier-percentage-width-in-autolayout.html\r\nbasically it's configured to be:\r\nSize of logo is 40% (multiplier: 0.4) of background view.\r\nY of logo.center is 60% (multiplier: 0.6) from center Y alignment constraint.\r\n\r\nSo i guess you can mess around with those 2 specific multipliers to get what you want.\r\nNote: the multipliers are magically transformed to numbers when you read the source of the storyboard file. ",
					"updateAuthor": {
						"name": "cng",
						"key": "cng",
						"displayName": "Chee Kiat Ng",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2015-10-29T04:58:45.000+0000",
					"updated": "2015-10-29T05:00:34.000+0000"
				},
				{
					"id": "369482",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "PR: https://github.com/appcelerator/titanium_mobile/pull/7412\r\n\r\nTo take advantage of a storyboard-based launch screen, you don't have to do anything other than build your app. There is a default LaunchScreen.storyboard that ships with Titanium. It is a simple white background with an ImageView centered. It uses an image set called \"LaunchLogo\" from the asset catalog.\r\n\r\nBy default it will generate LaunchLogos based on the {{DefaultIcon.png}}, if exists. You can manually create them in the {{Resources/iphone}} directory if you'd like. Here's the different filenames and sizes:\r\n\r\n||Filename||Devices||Scale||Recommended Size||\r\n|LaunchLogo~iphone.png|iPhone 3G and older|1x|320x320|\r\n|LaunchLogo@2x~iphone.png|iPhone 4, 4s 5, 5s, 6, 6s|2x|374x374|\r\n|LaunchLogo@3x~iphone.png|iPhone 6 Plus, 6s Plus|3x|621x621|\r\n|LaunchLogo~ipad.png|iPad 1, 2, Mini 1|1x|384x384|\r\n|LaunchLogo@2x~ipad.png|iPad 3, 4, Air, Air 2, Mini 2, 3, 4|2x|1024x1024|\r\n\r\nSince the ImageView is constrained to 50% the device width, these dimensions are based on the width of each device per scale divided by 2.\r\n\r\nAny missing images will be generated from the {{DefaultIcon.png}}. If there is no {{DefaultIcon.png}}, then the missing images will be copied from TiSDK which is just a black Ti logo on a white background.\r\n\r\nBy default, the launch screen's background color is white. However, the LaunchLogo may look better against some other background color. You can specify the default background color in the {{tiapp.xml}}'s {{<ios>}} section:\r\n\r\n{code}\r\n<ios>\r\n    <default-background-color>#ff0000</default-background-color>\r\n</ios>\r\n{code}\r\n\r\nThe {{<default-background-color>}} must be a 3 or 6 character RGB hex value. The {{#}} is optional.\r\n\r\nThis will change the background color of the storyboard launch screen as well as the root view controller. Before, the root view controller would default to black. This causes a noticeable rendering artifact where the screen dims for a frame or two on launch. However after this, the root view controller will have the same background color and the transition looks much better.\r\n\r\nIt's worth noting that the {{<default-background-color>}} is applied regardless of whether or not you're using a storyboard launch screen. It also has no effect if the {{app.js}} immediately calls {{Titanium.UI.setBackgroundColor('#000');}} as is the case when running the default 2 tab app.\r\n\r\nYou can override the default {{LaunchScreen.storyboard}} by placing a custom version of this file in the {{platform/ios}} (or {{platform/iphone}}) directory. If a custom launch screen storyboard is present, then it will NOT attempt to copy or generate LaunchLogos or change the storyboard's background color.",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2015-11-10T00:52:24.000+0000",
					"updated": "2015-11-10T00:52:24.000+0000"
				},
				{
					"id": "370182",
					"author": {
						"name": "cng",
						"key": "cng",
						"displayName": "Chee Kiat Ng",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "[~cbarber] Should we consider an option for the developers to enable / disable the use of launchScreen.storyboard? \r\nI think there are some who might want to stick to using splash screens image files. The only time this is absolutely necessary (other than the fact that it'll look nicer) is when they want to enjoy the splitView / slideView capability on an iPad.\r\nAnd on top of that, they will also need to enable auto layout AND enable main thread for splitView / slideView to work. (both of which have bugs we need to fix soon).\r\n[~ingo] thoughts?\r\n",
					"updateAuthor": {
						"name": "cng",
						"key": "cng",
						"displayName": "Chee Kiat Ng",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2015-11-13T07:15:16.000+0000",
					"updated": "2015-11-13T07:15:16.000+0000"
				},
				{
					"id": "370187",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "[~cng] I thought about that. I actually had a flag that was in the {{tiapp.xml}}, but I removed it. My thought was the image-based launch screens are a thing of the past. Storyboards are the future. Case in point, the iPad Pro doesn't have a image-based launch screen. It falls back to the iPad Air size image.\r\n\r\nSo, I can add the {{<enable-launch-screen-storyboard>}} flag back in, but then the question is should it be enabled by default? I really think we need to get our customers transitioning sooner than later.\r\n\r\nI vote to disable storyboard launch screens by default, however all new projects will have the {{<enable-launch-screen-storyboard>true</enable-launch-screen-storyboard>>}} by default. That way new apps will start to use storyboards and existing apps won't change.",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2015-11-13T07:57:02.000+0000",
					"updated": "2015-11-13T07:57:02.000+0000"
				},
				{
					"id": "370207",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "[~cng] When this gets merged, you can also resolve this: TIMOB-19968. :)",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2015-11-13T15:27:34.000+0000",
					"updated": "2015-11-13T15:27:34.000+0000"
				},
				{
					"id": "370212",
					"author": {
						"name": "ingo",
						"key": "ingo",
						"displayName": "Ingo Muschenetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I approve of Chris' suggestion. New projects have it enabled by default.",
					"updateAuthor": {
						"name": "ingo",
						"key": "ingo",
						"displayName": "Ingo Muschenetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2015-11-13T16:08:36.000+0000",
					"updated": "2015-11-13T16:08:36.000+0000"
				},
				{
					"id": "370213",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "I'll update the PR with the change. [~cng] please hold off on the merge until I make the changes.",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2015-11-13T16:11:35.000+0000",
					"updated": "2015-11-13T16:11:35.000+0000"
				},
				{
					"id": "371275",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "[~cng] I updated https://github.com/appcelerator/titanium_mobile/pull/7412 to add support for {{<enable-launch-screen-storyboard>true</enable-launch-screen-storyboard>}}.\r\n\r\nA few other changes where added to this PR.\r\n\r\n1. Custom LaunchScreen.storyboard files can be placed in the {{platform/ios}} directory.\r\n2. All files in {{platform/ios}} are blindly copied into the {{build/iphone}} directory which is what the Android and Windows platforms do. This is a breaking change. Files in {{platform/iphone}} used to be copied into {{build/iphone/build/Products/Debug-iphonesimulator/AppName.app}}. This change affects any existing iOS app or iOS Titanium module that has an {{platform/ios}} or {{platform/iphone}} directory. Apps and modules will need to be updated to use a CLI hook to copy the files to the correct destination which brings us to...\r\n3. Added support for {{<project-dir>/hooks}} where project-specific hooks can be placed. These CLI hooks are loaded regardless of the {{<plugins>}} section in the tiapp.xml.\r\n\r\nCustom LaunchScreen.storyboard files will need to be authored in Xcode, then manually copied into the {{platform/ios}} directory. Custom storyboard asset support is hit or miss. You could put a PNG in the {{platform/ios}} directory, but it would be copied to the {{build/iphone}} directory and won't actually be bundled into the app. If you enable app thinning, then any images in {{platform/ios}} will get converted into an asset catalog which your storyboard could reference, however the asset imageset's name would be a SHA and would be cumbersome to work with. In short, there's plenty of room for improvement.",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2015-11-23T23:37:27.000+0000",
					"updated": "2015-11-23T23:37:27.000+0000"
				},
				{
					"id": "372105",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "Updated the PR to support a {{LaunchLogo.png}} which will be used to generate missing launch logos. If the app does not have a {{LaunchLogo.png}}, then it falls back to {{DefaultIcon-ios.png}} or {{DefaultIcon.png}}.\r\n\r\nThere is an issue where launch logo updates are not reflected when rebuilding the app. iOS caches launch screens to a PNG image that appears to only be invalidated by restarting iOS. Uninstalling the app has no effect. Cleaning the Titanium app and rebuilding has no effect. Removing the cached image from the hard drive has no effect. Upon installing the updated app, it writes a new PNG image to cache of the old launch screen. It appears iOS keeps the cached launch screen in memory despite the app not running. The only way to show the updated launch logo is to restart the simulator/device.\r\n\r\nSo, I've added a warning to let users know that they may need to restart iOS to see any launch screen changes.",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2015-12-03T22:58:52.000+0000",
					"updated": "2015-12-03T22:59:34.000+0000"
				},
				{
					"id": "372492",
					"author": {
						"name": "cng",
						"key": "cng",
						"displayName": "Chee Kiat Ng",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "CR and FT Passed. PR Merged!\r\n\r\nh4. Steps to test\r\n1. *appc new --no-services*\r\n2. *appc run -p ios*\r\n\r\nh4. Expected result\r\napp will launch with the launch screen (white background with logo) instead of splash screen. You will also see in tiapp.xml {{<enable-launch-screen-storyboard>true</enable-launch-screen-storyboard>}}\r\n\r\nh4. Test cases to repeat with the above steps\r\n- change this property to false {{<enable-launch-screen-storyboard>false</enable-launch-screen-storyboard>}}. Expect to see splash screen instead.\r\n- remove the entire property {{enable-launch-screen-storyboard}}. Expect to see splash screen instead.\r\n- *appc run -p ios -I 8.4* run on iOS 8.4. Expect to see splash screen no matter what value this property is set {{enable-launch-screen-storyboard}}\r\n- test on device\r\n- test on iPad. *appc run -p ios -F ipad* and expect to see launch screen working in landscape as well as portrait\r\n- add default-background-color {{<default-background-color>#0000ff</default-background-color>}} to see background color change.\r\n- put attached *LaunchIcon.png* in app/assets/iphone. reset the simulator, clean the project and rebuild. you should see the new icon used as launch screen instead.\r\n- repeat tests using *ti create* and *ti build* instead. and expect all the same behavior as above. (Except *LaunchIcon.png* will be put in Resources/iphone/ instead)\r\n\r\nh4. Test Steps for customised storyboard\r\n- copy attached *LaunchScreen.storyboard* into app/platform/ios/\r\n- copy attached *appcLogo.png* and *background.png* into app/assets/iphone\r\n- reset simulator, clean project and rebuild and you will see a new launch screen. ",
					"updateAuthor": {
						"name": "cng",
						"key": "cng",
						"displayName": "Chee Kiat Ng",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2015-12-09T05:37:27.000+0000",
					"updated": "2015-12-09T05:58:30.000+0000"
				},
				{
					"id": "377153",
					"author": {
						"name": "ewieber",
						"key": "ewieber",
						"displayName": "Eric Wieber",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Verified implemented, using:\r\n\r\nMacOS 10.11.3 (15D21)\r\nStudio 4.5.0.201602170821\r\nTi SDK 5.2.0.v20160216202526\r\nAppc NPM 4.2.3-2\r\nAppc CLI 5.2.0-265\r\nAlloy 1.7.33\r\nXcode 7.2 (7C68)\r\n\r\nStoryboards can be successfully created by setting {{<enable-launch-screen-storyboard>}} to true and building for an iOS 8+ sim/device when using Xcode 6+. Setting {{<enable-launch-screen-storyboard>}} to false will have the project use the traditional splash screen images. The background color of the storyboard can be set with {{<default-background-color>}} and the icon can be changed with a LaunchIcon.png image. A custom storyboard can override a generated one. Hooks can also now be used on the project (in the hooks folder) to copy files in platform/ios and platform/iphone to where the user needs them. Tested using the test steps above and several test apps/smokes of the build process.",
					"updateAuthor": {
						"name": "ewieber",
						"key": "ewieber",
						"displayName": "Eric Wieber",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2016-02-17T23:34:05.000+0000",
					"updated": "2016-02-17T23:34:05.000+0000"
				},
				{
					"id": "378242",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~cbarber] First users start reporting the issue, that modules are not working anymore (because files placed in {{platform/ios}} are not copied anymore). [~ewieber] suggesed a CLI hook, but that can only applied to projects using the {{hooks/}} folder. Can you think of a module-side solution here?",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2016-03-01T08:27:03.000+0000",
					"updated": "2016-03-01T08:27:03.000+0000"
				},
				{
					"id": "378245",
					"author": {
						"name": "fokkezb",
						"key": "fokke",
						"displayName": "Fokke Zandbergen",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"body": "We definitely need a module-side workaround here. It's the module maintainers that need to be able to make their modules work with 5.2, not the users.",
					"updateAuthor": {
						"name": "fokkezb",
						"key": "fokke",
						"displayName": "Fokke Zandbergen",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"created": "2016-03-01T08:47:09.000+0000",
					"updated": "2016-03-01T08:47:09.000+0000"
				},
				{
					"id": "378308",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "[~hansknoechel] Correction, the {{platform/ios}} directory is still copied, just not to the product directory. It's copied to the build directory just like all the other platforms.\r\n\r\nAs I commented on TIMOB-20489, a CLI hook will not work. We need to fix this in the iOS build. Once the fix has been made, all iOS module developers will need to rebuild their module with the latest SDK and re-publish them.\r\n\r\nPlease continue all discussion related to the {{platform/ios}} directory in TIMOB-20489.",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2016-03-01T16:00:21.000+0000",
					"updated": "2016-03-01T16:00:21.000+0000"
				}
			],
			"maxResults": 15,
			"total": 15,
			"startAt": 0
		}
	}
}