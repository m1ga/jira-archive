{
	"id": "63110",
	"key": "TIMOB-2478",
	"fields": {
		"issuetype": {
			"id": "2",
			"description": "A new feature of the product, which has yet to be developed.",
			"name": "New Feature",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": null,
		"resolutiondate": null,
		"created": "2011-04-15T03:20:50.000+0000",
		"priority": {
			"name": "High",
			"id": "2"
		},
		"labels": [
			"cb-tooling",
			"dr-list",
			"parity"
		],
		"versions": [],
		"issuelinks": [
			{
				"id": "30608",
				"type": {
					"id": "10002",
					"name": "Duplicate",
					"inward": "is duplicated by",
					"outward": "duplicates"
				},
				"inwardIssue": {
					"id": "91481",
					"key": "TIMOB-9017",
					"fields": {
						"summary": "Tooling: JavaScript files under the resource directory of a project are compiled into the binary. There should be a way to include *.js files in the binary that are not precompiled in.",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Medium",
							"id": "3"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "36039",
				"type": {
					"id": "10002",
					"name": "Duplicate",
					"inward": "is duplicated by",
					"outward": "duplicates"
				},
				"inwardIssue": {
					"id": "128029",
					"key": "TIMOB-16678",
					"fields": {
						"summary": "Android: File.read() of JS files under Resources directory returns empty string for device/production builds",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Low",
							"id": "4"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "52535",
				"type": {
					"id": "10002",
					"name": "Duplicate",
					"inward": "is duplicated by",
					"outward": "duplicates"
				},
				"inwardIssue": {
					"id": "101986",
					"key": "TIMOB-11120",
					"fields": {
						"summary": "Android: Expose a way for users to exclude js files from being encrypted.",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Low",
							"id": "4"
						},
						"issuetype": {
							"id": "2",
							"description": "A new feature of the product, which has yet to be developed.",
							"name": "New Feature",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "13971",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"outwardIssue": {
					"id": "64887",
					"key": "TIMOB-3797",
					"fields": {
						"summary": "Tooling: Ignore files listed in tiapp.xml",
						"status": {
							"description": "The issue is open and ready for the assignee to start work on it.",
							"name": "Open",
							"id": "1",
							"statusCategory": {
								"id": 2,
								"key": "new",
								"colorName": "blue-gray",
								"name": "To Do"
							}
						},
						"priority": {
							"name": "High",
							"id": "2"
						},
						"issuetype": {
							"id": "2",
							"description": "A new feature of the product, which has yet to be developed.",
							"name": "New Feature",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "13972",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"outwardIssue": {
					"id": "78298",
					"key": "TIMOB-4809",
					"fields": {
						"summary": "iOS: Implement a generalized ignore file mechanism for the copy resources phase of compiler.py",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Low",
							"id": "4"
						},
						"issuetype": {
							"id": "2",
							"description": "A new feature of the product, which has yet to be developed.",
							"name": "New Feature",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": {
			"name": "cbarber",
			"key": "cbarber",
			"displayName": "Chris Barber",
			"active": true,
			"timeZone": "America/Chicago"
		},
		"updated": "2017-11-10T15:27:53.000+0000",
		"status": {
			"description": "The issue is open and ready for the assignee to start work on it.",
			"name": "Open",
			"id": "1",
			"statusCategory": {
				"id": 2,
				"key": "new",
				"colorName": "blue-gray",
				"name": "To Do"
			}
		},
		"components": [
			{
				"id": "10207",
				"name": "Tooling"
			}
		],
		"description": "Please create an implementation ticket for each platform once the feature has been designed.\r\n\r\nIt is sometimes desirable to exclude local javascript files from compilation as Titanium javascript. The best use case is wanting to include a JS file in a WebView's html.\r\n\r\nSee [Helpdesk 56271|http://developer.appcelerator.com/helpdesk/view/56271]",
		"attachment": [],
		"flagged": false,
		"summary": "Tooling: Allow Excluding JS files from Compilation",
		"creator": {
			"name": "dthorp",
			"key": "dthorp",
			"displayName": "Don Thorp",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "dthorp",
			"key": "dthorp",
			"displayName": "Don Thorp",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "128577",
					"author": {
						"name": "dthorp",
						"key": "dthorp",
						"displayName": "Don Thorp",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><p>To work around this problem simply rename your .js files that\nyou don't want processed to something like .jslocal.</p></div>{html}",
					"updateAuthor": {
						"name": "dthorp",
						"key": "dthorp",
						"displayName": "Don Thorp",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T03:20:51.000+0000",
					"updated": "2011-04-15T03:20:51.000+0000"
				},
				{
					"id": "168177",
					"author": {
						"name": "pdowsett",
						"key": "pdowsett",
						"displayName": "Paul Dowsett",
						"active": true,
						"timeZone": "Europe/London"
					},
					"body": "The problem here is that local js libraries, such as those used with webviews, are being modified during the build process, which causes them not to work when the app is launched. While Don's suggestion to use .jslocal is a good idea, it doesn't work for multi-file libraries, as they cannot be simply dropped into the project. Thus, all the library's files would need to be renamed.\r\n\r\nThis is causing our team a particular problem because we want to create video tutorials relating to including local js libraries but, as it stands, these will only serve to emphasize the issue. Also, as soon as the ticket is resolved, the tutorials will be outdated.\r\n\r\nTonyL's suggestion, which seems viable, is for there to be a directory like /local that is always excluded from the build process, and the files that it contains copied over verbatim to the packaged app.\r\n",
					"updateAuthor": {
						"name": "pdowsett",
						"key": "pdowsett",
						"displayName": "Paul Dowsett",
						"active": true,
						"timeZone": "Europe/London"
					},
					"created": "2011-10-06T15:28:57.000+0000",
					"updated": "2011-10-06T15:28:57.000+0000"
				},
				{
					"id": "168187",
					"author": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "What he said ^^",
					"updateAuthor": {
						"name": "tlukasavage",
						"key": "tlukasavage",
						"displayName": "Tony Lukasavage",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-10-06T16:28:31.000+0000",
					"updated": "2011-10-06T16:28:31.000+0000"
				},
				{
					"id": "295743",
					"author": {
						"name": "jbaquero",
						"key": "jbaquero",
						"displayName": "Jose Angel Rufino Baquero",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "My problem was that I can't use a different name for those local .js files because it's being used by a compiled iOS library which I have to use in a Titanium iOS module, in order to use it in my app. Such library was looking for .js files in the resources folder and crashing when were not found.\r\n\r\nI solved it adding a cli hook:\r\n\r\n{code}\r\ncli.addHook('build.post.compile', function (build, finished) {\r\n        // \"build\" arg contains the state of the build\r\n \r\n        //projectDir /Users/Jose/Documents/Titanium_Studio_Workspace/Project\r\n        //buildDir:/Users/Jose/Documents/Titanium_Studio_Workspace/Project/build/iphone\r\n        \r\n        // xcodeAppDir /Users/Jose/Documents/Titanium_Studio_Workspace/Project/build/iphone/build/Debug-iphonesimulator/project.app\r\n        // Problematic file => /Users/Jose/Documents/Titanium_Studio_Workspace/Project/build/iphone/build/Debug-iphonesimulator/project.app/NATIVE_SDK_BUNDLE.bundle/jsresource.js\r\n\r\n\t\tif(build.platformName == \"iphone\"){\r\n       \t\tlogger.log(\"======= ADDING LOCAL JS FILES FOR WEBVIEWS =======\");\r\n        \r\n\t        var originalResource = build.projectDir+\"/app/assets/iphone/NATIVE_SDK_BUNDLE.bundle/jsresource.js\";\r\n\t        var originalResource2 = build.projectDir+\"/app/assets/iphone/NATIVE_SDK_BUNDLE.bundle/jsresource2.js\";\r\n\t        \r\n\t        logger.log(originalResource);\r\n\t        logger.log(originalResource2);\r\n\t        \r\n\t        var destResource = build.xcodeAppDir+\"/ORMMAResourceBundle.bundle/jsresource.js\";\r\n\t        var destResource2 = build.xcodeAppDir+\"/ORMMAResourceBundle.bundle/jsresource2.js\";\r\n\t        \r\n\t        var fs = require('fs');\r\n\t\t\tfs.writeFileSync(destResource, fs.readFileSync(originalResource));\r\n\t\t\tfs.writeFileSync(destResource2, fs.readFileSync(originalResource2));\r\n       \r\n\t\t}\r\n\t\t\r\n\t\tfinished();\r\n    });\r\n{code}",
					"updateAuthor": {
						"name": "ingo",
						"key": "ingo",
						"displayName": "Ingo Muschenetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2014-03-05T15:14:19.000+0000",
					"updated": "2014-03-05T15:30:35.000+0000"
				},
				{
					"id": "295745",
					"author": {
						"name": "ingo",
						"key": "ingo",
						"displayName": "Ingo Muschenetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Very nice!",
					"updateAuthor": {
						"name": "ingo",
						"key": "ingo",
						"displayName": "Ingo Muschenetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2014-03-05T15:30:52.000+0000",
					"updated": "2014-03-05T15:30:52.000+0000"
				},
				{
					"id": "324667",
					"author": {
						"name": "lcapra",
						"key": "lcapra",
						"displayName": "luca capra",
						"active": true,
						"timeZone": "Europe/Rome"
					},
					"body": "Something working as a .gitignore file for Titanium, a .tignore file",
					"updateAuthor": {
						"name": "lcapra",
						"key": "lcapra",
						"displayName": "luca capra",
						"active": true,
						"timeZone": "Europe/Rome"
					},
					"created": "2014-09-19T06:39:36.000+0000",
					"updated": "2014-09-19T06:39:36.000+0000"
				},
				{
					"id": "380787",
					"author": {
						"name": "christian.j.green@gmail.com",
						"key": "christian.j.green@gmail.com",
						"displayName": "Christian Green",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "This feature is sorely needed. Have there been any work arounds discovered other than renaming the file extension?",
					"updateAuthor": {
						"name": "christian.j.green@gmail.com",
						"key": "christian.j.green@gmail.com",
						"displayName": "Christian Green",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2016-03-28T13:34:02.000+0000",
					"updated": "2016-03-28T13:34:02.000+0000"
				},
				{
					"id": "380794",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "[~christian.j.green@gmail.com] One thing you can do that will work is put the JS files you don't want minified/encrypted into the {{platform}} directory. Assuming the latest Titanium SDK 5.2.1:\r\n\r\n{code}\r\n# iOS Simulator builds\r\n<project-dir>/platform/ios/build/Products/Debug-iphonesimulator/<appname>.app\r\n\r\n# iOS Device builds\r\n<project-dir>/platform/ios/build/Products/Debug-iphoneos/<appname>.app\r\n\r\n# iOS Dist adhoc and appstore builds\r\n<project-dir>/platform/ios/build/Products/Release-iphoneos/<appname>.app\r\n\r\n# Android builds (emulator, device, dist-playstore)\r\n<project-dir>/platform/android/bin/assets/Resources\r\n\r\n# Mobile Web\r\n<project-dir>/platform/mobileweb\r\n{code}",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2016-03-28T14:58:34.000+0000",
					"updated": "2016-03-28T14:58:34.000+0000"
				},
				{
					"id": "380795",
					"author": {
						"name": "christian.j.green@gmail.com",
						"key": "christian.j.green@gmail.com",
						"displayName": "Christian Green",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "[~cbarber]\r\nCurrently the files are under <project-dir>/modules/android/<jwplayer>/res/raw as it is a third party module. Will your suggested fix work for this format?\r\n\r\nThanks!\r\n\r\n",
					"updateAuthor": {
						"name": "christian.j.green@gmail.com",
						"key": "christian.j.green@gmail.com",
						"displayName": "Christian Green",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2016-03-28T15:09:53.000+0000",
					"updated": "2016-03-28T15:12:20.000+0000"
				},
				{
					"id": "380800",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "[~christian.j.green@gmail.com] Actually, I have to take it all back. I just noticed in the code that we treat all files in the {{platform/android}} directory the same as the {{Resources}} directory. If you look at https://github.com/appcelerator/titanium_mobile/blob/master/android/cli/commands/_build.js#L2495-L2511 you'll see line 2505 calls {{copyDir}} just the same as {{Resources}} on line 2438 and line 2450. This means that all JS files in the platform directory would be minified and encrypted too. We probably shouldn't be doing that to files in the {{platform}} directory.",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2016-03-28T15:29:13.000+0000",
					"updated": "2016-03-28T15:29:13.000+0000"
				},
				{
					"id": "380808",
					"author": {
						"name": "christian.j.green@gmail.com",
						"key": "christian.j.green@gmail.com",
						"displayName": "Christian Green",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "[~cbarber] Would it be possible to hook into the command line during build and work with the cli.ignoreFiles config property?",
					"updateAuthor": {
						"name": "christian.j.green@gmail.com",
						"key": "christian.j.green@gmail.com",
						"displayName": "Christian Green",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2016-03-28T16:37:16.000+0000",
					"updated": "2016-03-28T16:37:16.000+0000"
				},
				{
					"id": "380815",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "No, I don't think so. You could write a hook that moves all the JS files out of the project during pre-compile, then moves them back in during post-compile while also copying them to the compiled app output directory {{build/android/bin/assets/Resources}}.\r\n\r\nOr, you could just edit the {{android/cli/commands/_build.js}} in your local Titanium SDK and just hack something in. That's probably the easiest solution, though you'll have to re-add your hack if you change the SDK you want to use.",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2016-03-28T16:45:57.000+0000",
					"updated": "2016-03-28T16:45:57.000+0000"
				},
				{
					"id": "430391",
					"author": {
						"name": "mattmendick",
						"key": "mattmendick",
						"displayName": "Matt Mendick",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "This was a breaking issue for us and so an official .tiignore file of some sort would be welcomed.\r\n\r\nWe have a project which uses a large number of web resources that we copy in from another source project. Our workaround is similar to Chris's suggestion in that it deals with writing a hook. We have a build.pre.compile plugin hook which already does a lot of work copying over our files from the other project into this project, and so we added a step to create a dummy.html file containing <script> tag references to all the javascript files that we don't want encrypted and minified. The CLI parses all the dummy.html files in the project, finds any referenced script tags, and whitelists/blacklists the referenced files.",
					"updateAuthor": {
						"name": "mattmendick",
						"key": "mattmendick",
						"displayName": "Matt Mendick",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2017-11-10T15:27:53.000+0000",
					"updated": "2017-11-10T15:27:53.000+0000"
				}
			],
			"maxResults": 14,
			"total": 14,
			"startAt": 0
		}
	}
}