{
	"id": "63585",
	"key": "TIMOB-2953",
	"fields": {
		"issuetype": {
			"id": "2",
			"description": "A new feature of the product, which has yet to be developed.",
			"name": "New Feature",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": {
			"id": "3",
			"description": "The problem is a duplicate of an existing issue.",
			"name": "Duplicate"
		},
		"resolutiondate": "2012-03-20T12:43:53.000+0000",
		"created": "2011-04-15T03:33:38.000+0000",
		"priority": {
			"name": "Trivial",
			"id": "5"
		},
		"labels": [
			"feature",
			"image",
			"ios",
			"request",
			"view"
		],
		"versions": [],
		"issuelinks": [
			{
				"id": "15839",
				"type": {
					"id": "10002",
					"name": "Duplicate",
					"inward": "is duplicated by",
					"outward": "duplicates"
				},
				"outwardIssue": {
					"id": "85695",
					"key": "TIMOB-7470",
					"fields": {
						"summary": "iOS: Set TLS version for imageview",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Medium",
							"id": "3"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": {
			"name": "ngupta",
			"key": "ngupta",
			"displayName": "Neeraj Gupta",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2017-03-24T18:28:24.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10206",
				"name": "iOS",
				"description": "iOS Platform"
			}
		],
		"description": "{html}<div><p>Users would like to be able to call remote images with a\r\nself-signed certificate.</p>\r\n<p>Adding a validatesSecureCertificate property to ImageView would\r\nallow that.</p>\r\n<p>Reference Ticket: <a href=\r\n\"http://developer.appcelerator.com/helpdesk/view/67561\">http://developer.appcelerator.com/helpdesk/view/67561</a></p></div>{html}",
		"attachment": [],
		"flagged": false,
		"summary": "iOS Feature Request: ImageView validatesSecureCertificate property",
		"creator": {
			"name": "aleard",
			"key": "aleard",
			"displayName": "Alan Leard",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "aleard",
			"key": "aleard",
			"displayName": "Alan Leard",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "129756",
					"author": {
						"name": "blainhamon",
						"key": "blainhamon",
						"displayName": "Blain Hamon",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><p>I'm hesitant to add such a functionality in, because it presents\na slippery slope. Why would we stop at one HTTPClient feature? When\nyou use a coverflow view, which allows for remote images as well,\nshould this functionality also be allowed? How would you represent\nthis; do you have one setting that applies to all images in the\narray, or can you specify per-image?</p>\n<p>All of this gets even messier when you realize that the\nimageView isn't the one doing the actual connecting, and that it's\npossible that multiple imageViews could be wanting to load the same\nimage, where one wants to load with ABC:true, the other with\nABC:false.</p>\n<p>There is already a problem where ImageView is being treated as a\nmagical image handling, downloading, and manipulation utility,\ninstead of what it really is: A view that shows an image. The much\nbetter behavior is that the end dev uses HTTPClient to download the\nfile, and show that. That even has the advantage of taking up less\nmemory.</p></div>{html}",
					"updateAuthor": {
						"name": "blainhamon",
						"key": "blainhamon",
						"displayName": "Blain Hamon",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T03:33:38.000+0000",
					"updated": "2011-04-15T03:33:38.000+0000"
				},
				{
					"id": "129757",
					"author": {
						"name": "markoperutovic",
						"key": "markoperutovic",
						"displayName": "Marko Perutovic",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "{html}<div><p>That is true, but in my case I have a scrollable view loaded\nwith image views and it had memory issues related with:<br>\n- <a href=\n\"http://developer.appcelerator.com/helpdesk/view/46321\">http://developer.appcelerator.com/helpdesk/view/46321</a>\nNow the scrollable view filled with image views works like a charm\nbut only if I put url to image property. In my case (at the moment)\nthere is max 100 pics per scrollable view and only one scrollable\nview can be shown in my app. If I put binaries instead of url's to\nimage property, when simulating picture slide show, the application\nafter some time still crashes, but if I use url's it works forever\n:). I rewrote several times this application I'm working on for\nalmost a year using first url's, then, after it stopped working\nwith self-signed certificates, I used HTTPClient to fetch image\nbase64, and then again using url's because of stability of my\napp.<br>\nCurrently, I have a switch to switch between these approaches for\nfuture :).<br>\nBut seriously, with url's it works excellent and I'm very happy\nwith it, but at the current moment I gave up from SSL although I\nhave everything ready for that in my app and on my picture server\nthat serves the pics. And that is a feature I don't want to give up\nfor next version if not for the initial, even if that means\nrewriting the whole app in objective C.</p>\n<p>So I think that for one or some more pics it's a good approach\nto use HTTPClient to get the pics, but for more, from my experience\nit's not. For some reasons, that I don't know and you guys probably\nknow why, when using url's the whole concept of scrollable view\nworks much faster when scrolling left-right.<br>\nIf my whole concept somewhere misses something please correct\nme.</p></div>{html}",
					"updateAuthor": {
						"name": "markoperutovic",
						"key": "markoperutovic",
						"displayName": "Marko Perutovic",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2011-04-15T03:33:38.000+0000",
					"updated": "2011-04-15T03:33:38.000+0000"
				},
				{
					"id": "187104",
					"author": {
						"name": "mkrug",
						"key": "mkrug",
						"displayName": "Markus Krug",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Are there any updates? As Marko wrote it's often not that easy or even not possible to handle this when viewing for example more than 100 pics. The users of my app connect to their own server and they want to display images from their own server. But a lot of users do have HTTPS with self signed certificates and they are not able to view images.\r\n\r\nMaybe it would be create to have the possibility to set a \"HTTPClient\" dependency like this: \r\n{code}\r\nTi.UI.createImageView({image: httpsUrl, httpClient: httpClientWithValidatesSecureCertificateDisabled});\r\n{code}\r\nDon't know whether something like this is possible.",
					"updateAuthor": {
						"name": "mkrug",
						"key": "mkrug",
						"displayName": "Markus Krug",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-03-19T10:53:32.000+0000",
					"updated": "2012-03-19T10:53:32.000+0000"
				},
				{
					"id": "187454",
					"author": {
						"name": "stephentramer",
						"key": "stephentramer",
						"displayName": "Stephen Tramer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "This is a duplicate of a WON'TFIX ticket. You can use SSL-enabled HTTP clients to retrieve images and display them in an image view, including the appropriate crossfade.",
					"updateAuthor": {
						"name": "stephentramer",
						"key": "stephentramer",
						"displayName": "Stephen Tramer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-03-20T12:42:29.000+0000",
					"updated": "2012-03-20T12:42:38.000+0000"
				},
				{
					"id": "187455",
					"author": {
						"name": "stephentramer",
						"key": "stephentramer",
						"displayName": "Stephen Tramer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "This issue duplicates WON'TFIX issue TIMOB-7470, which includes a code snippet demonstrating how to pull image data with the appropriate crossfade.",
					"updateAuthor": {
						"name": "stephentramer",
						"key": "stephentramer",
						"displayName": "Stephen Tramer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-03-20T12:43:53.000+0000",
					"updated": "2012-03-20T12:43:53.000+0000"
				},
				{
					"id": "415680",
					"author": {
						"name": "lmorris",
						"key": "lmorris",
						"displayName": "Lee Morris",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Closing ticket as duplicate with reference to the linked issues.",
					"updateAuthor": {
						"name": "lmorris",
						"key": "lmorris",
						"displayName": "Lee Morris",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2017-03-24T18:28:24.000+0000",
					"updated": "2017-03-24T18:28:24.000+0000"
				}
			],
			"maxResults": 7,
			"total": 7,
			"startAt": 0
		}
	}
}