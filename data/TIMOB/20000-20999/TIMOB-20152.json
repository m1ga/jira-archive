{
	"id": "153906",
	"key": "TIMOB-20152",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": {
			"id": "7",
			"description": "",
			"name": "Invalid"
		},
		"resolutiondate": "2016-02-16T06:34:10.000+0000",
		"created": "2015-12-17T01:33:18.000+0000",
		"priority": {
			"name": "Medium",
			"id": "3"
		},
		"labels": [
			"qe-5.1.2"
		],
		"versions": [
			{
				"id": "17532",
				"name": "Release 5.1.1",
				"archived": false,
				"released": true,
				"releaseDate": "2015-11-24"
			}
		],
		"issuelinks": [],
		"assignee": {
			"name": "ssombhatla",
			"key": "ssombhatla",
			"displayName": "Srikanth Sombhatla",
			"active": false,
			"timeZone": "Asia/Singapore"
		},
		"updated": "2016-02-16T06:34:15.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10206",
				"name": "iOS",
				"description": "iOS Platform"
			}
		],
		"description": "h5. Description:\r\nWhilst working on an automated test for {{Ti.Contacts.Person}} properties, an issue was found when attempting to retrieve the properties using {{Ti.Contacts.getPeopleWithName}}. fields with single string values were returned as intended, however fields with arrays such as {{email}} do not return the correct value (i.e. {{[object Object]}} or an error with be thrown using the following code: {{Ti.API.info(\"person: \" + person.email.home[0]);}} ) \r\n\r\nHowever, a workaround to this issue is to use the method {{Ti.Contacts.getPersonByIdentifier}} , which correctly returns fields with array values. \r\n\r\nConfirmed that this is *not* a regression.\r\n\r\nh5. Steps to reproduce: \r\n1. Create a new Classic project.\r\n2. use demo code: \r\n{code:java}\r\nvar win1 = Titanium.UI.createWindow({  \r\n    title:'Tab 1',\r\n    backgroundColor:'#fff'\r\n});\r\n\r\nvar saveID = \"\";\r\n\r\nvar Ncook = new Object();\r\nNcook.firstName = \"Nathaniel\";\r\nNcook.lastName = \"Cook\";\r\nNcook.middleName = \"John\";\r\nNcook.nickname = \"Fish\";\r\nNcook.prefix = \"Mr\";\r\nNcook.suffix = \"III\";\r\nNcook.firstPhonetic = \"N\";\r\nNcook.middlePhonetic = \"T\";\r\nNcook.lastPhonetic = \"A\";\r\nNcook.organization = \"appcelerator\";\r\nNcook.department = \"Cloud\";\r\nNcook.jobTitle = \"QE\";\r\nNcook.note = \"You gotta risk it, to get the biscuit\";\r\nNcook.email = {\r\n       home : [\r\n           'myGmail',\r\n          'myHotmail'\r\n       ],\r\n      work : [\r\n          'myWorkemail'\r\n       ]\r\n   \t};\r\n// Ncook.address = \"\";\r\n// Ncook.phone = \"\";\r\n// Ncook.instantMessage = \"\";\r\n// Ncook.relatedNames = \"\";\r\n// Ncook.date = \"\";\r\n// Ncook.url = \"\";\r\n\r\nvar singleValue = [\r\n  'firstName', 'lastName', 'middleName', 'nickname', 'prefix', 'suffix', 'firstPhonetic', 'middlePhonetic', 'lastPhonetic', 'organization','department', 'jobTitle', 'note'\r\n];\r\n\r\nvar multiValue = [\r\n'email', 'address', 'phone', 'instantMessage', 'relatedNames', 'date', 'url'\r\n];\r\n\r\nnewNathan = Ti.UI.createButton({\r\n\ttitle: \"New Nathan\",\r\n\ttop: '20%'\r\n});\r\n\r\nnewNathan.addEventListener('click', function(){\r\n\t\r\n\tvar newCook = Ti.Contacts.createPerson(Ncook);\r\n\t// saveID = newCook.getIdentifier();\r\n\t// Ti.API.info(saveID);\r\n});\r\n\r\n\r\nbutton2 = Ti.UI.createButton({\r\n\ttitle: \"Compare Nathan\",\r\n\ttop: '40%'\r\n});\r\n\r\n\r\nbutton2.addEventListener('click', function(){\r\n\t\r\n\r\n var people = Ti.Contacts.getPeopleWithName(\"Nathaniel\");\r\n\r\n// var people = Ti.Contacts.getPersonByIdentifier(saveID);\r\nTi.API.info('Total contacts: ' + people.length);\r\n\r\nvar person = people[0];  \r\n// var person = people;\r\n\r\nTi.API.info(\"Ncook: \" + Ncook.email.home[0]);\r\n Ti.API.info(\"person: \" + person.email);\r\n//Ti.API.info(\"person: \" + person.email.home[0]);\r\n  Ti.API.info(\"person: \" + person.lastName);\r\nTi.API.info(\"-----------------------------------------\");\r\n for (var j=0, jlen=singleValue.length; j<jlen; j++){\r\n \t\r\n if(Ncook[singleValue[j]] == person[singleValue[j]] && Ncook[singleValue[j]] != null) {\r\n Ti.API.info(singleValue[j] + ': ' + 'Success!');\t\r\n } else {\r\n \t\r\n \tTi.API.info('No Match');\r\n }}\r\n \r\n for (var i=0, jlen=multiValue.length; i<jlen; i++){\r\n \t\r\n if(Ncook[multiValue[i]] == person[multiValue[i]] && Ncook[multiValue[i]] != null) {\r\n Ti.API.info(multiValue[i] + ': ' + 'Success!');\t\r\n } else {\r\n \t\r\n \tTi.API.info('No Match');\r\n }}\r\n \r\n });\r\n\r\nwin1.add(button2);\r\nwin1.add(newNathan);\r\nwin1.open();\r\n{code}\r\n3. Build to device.\r\n4. launch app and click \"New Nathan\" followed by \"Compare Nathan\"\r\n5. In the console, \"Ncook\" should return the appropriate email value, \"person\" will not.\r\n\r\nh5. Result:\r\ncalling fields with array values using {{Ti.Contacts.GetPeopleWithName}} will not return the appropriate values.\r\n\r\nh5. Expected Result:\r\ncalling fields with array values using {{Ti.Contacts.GetPeopleWithName}} will return the appropriate values.\r\n",
		"attachment": [],
		"flagged": false,
		"summary": "iOS: Contacts.getPeopleWithName not returning multi-value fields correctly",
		"creator": {
			"name": "htbryant",
			"key": "htbryant",
			"displayName": "Harry Bryant",
			"active": true,
			"timeZone": "Europe/London"
		},
		"subtasks": [],
		"reporter": {
			"name": "htbryant",
			"key": "htbryant",
			"displayName": "Harry Bryant",
			"active": true,
			"timeZone": "Europe/London"
		},
		"environment": "iPhone 6s Plus Device (9.1)\r\nMac OSX El Capitan 10.11 (15A284)\r\nStudio: 4.4.0.201511241829\r\nTi SDK: 5.1.2.v20151215181753 \r\nAppc NPM: 4.2.2\r\nApp CLI: 5.1.0\r\nXcode 7.2\r\nNode v4.2.3\r\n",
		"comment": {
			"comments": [
				{
					"id": "373169",
					"author": {
						"name": "cng",
						"key": "cng",
						"displayName": "Chee Kiat Ng",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "reminder to check for parity with android and windows.",
					"updateAuthor": {
						"name": "cng",
						"key": "cng",
						"displayName": "Chee Kiat Ng",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2015-12-17T02:54:57.000+0000",
					"updated": "2015-12-17T02:54:57.000+0000"
				},
				{
					"id": "373189",
					"author": {
						"name": "ssombhatla",
						"key": "ssombhatla",
						"displayName": "Srikanth Sombhatla",
						"active": false,
						"timeZone": "Asia/Singapore"
					},
					"body": "[~htbryant]\r\n\r\nThe person objects returned by {{Ti.Contacts.GetPeopleWithName}} are not JSON objects. So a subscripting like \r\n{{person[multiValue[ i ]]}} will not work. This should be accessed as {{person.email}} or {{person.phone}} etc.\r\n\r\nAlso can you provide the test case which is working with {{Ti.Contacts.getPersonByIdentifier}}",
					"updateAuthor": {
						"name": "ssombhatla",
						"key": "ssombhatla",
						"displayName": "Srikanth Sombhatla",
						"active": false,
						"timeZone": "Asia/Singapore"
					},
					"created": "2015-12-17T08:48:34.000+0000",
					"updated": "2015-12-17T08:48:34.000+0000"
				},
				{
					"id": "373228",
					"author": {
						"name": "htbryant",
						"key": "htbryant",
						"displayName": "Harry Bryant",
						"active": true,
						"timeZone": "Europe/London"
					},
					"body": "[~ssombhatla] \r\n\r\nI have also tested that way as well, if you refer to line 76 - 79 of the test code, I have created prints to logs of specific property values - {{Ncook}} being the original object, and {{person}} being the object retrieved from contacts with {{getPeopleWithName}} that was created with {{Ti.Contacts.getPeopleWithName(\"Nathaniel\")}} . \r\n\r\nIf you check the console above the loop output, you should find that {{Ti.API.info(\"person: \" + person.email)}} is not returning what is expected. \r\n\r\nThe test case for {{Ti.Contacts.getPersonByIdentifier}} requires the same steps as the above, with the following code: \r\n{code:java}\r\nvar win1 = Titanium.UI.createWindow({  \r\n    title:'Tab 1',\r\n    backgroundColor:'#fff'\r\n});\r\n\r\nvar saveID = \"\";\r\n\r\nvar Ncook = new Object();\r\nNcook.firstName = \"Nathaniel\";\r\nNcook.lastName = \"Cook\";\r\nNcook.middleName = \"John\";\r\nNcook.nickname = \"Fish\";\r\nNcook.prefix = \"Mr\";\r\nNcook.suffix = \"III\";\r\nNcook.firstPhonetic = \"N\";\r\nNcook.middlePhonetic = \"T\";\r\nNcook.lastPhonetic = \"A\";\r\nNcook.organization = \"appcelerator\";\r\nNcook.department = \"Cloud\";\r\nNcook.jobTitle = \"QE\";\r\nNcook.note = \"You gotta risk it, to get the biscuit\";\r\nNcook.email = {\r\n       home : [\r\n           'myGmail',\r\n          'myHotmail'\r\n       ],\r\n      work : [\r\n          'myWorkemail'\r\n       ]\r\n   \t};\r\n// Ncook.address = \"\";\r\n// Ncook.phone = \"\";\r\n// Ncook.instantMessage = \"\";\r\n// Ncook.relatedNames = \"\";\r\n// Ncook.date = \"\";\r\n// Ncook.url = \"\";\r\n\r\nvar singleValue = [\r\n  'firstName', 'lastName', 'middleName', 'nickname', 'prefix', 'suffix', 'firstPhonetic', 'middlePhonetic', 'lastPhonetic', 'organization','department', 'jobTitle', 'note'\r\n];\r\n\r\nvar multiValue = [\r\n'email', 'address', 'phone', 'instantMessage', 'relatedNames', 'date', 'url'\r\n];\r\n\r\nnewNathan = Ti.UI.createButton({\r\n\ttitle: \"New Nathan\",\r\n\ttop: '20%'\r\n});\r\n\r\nnewNathan.addEventListener('click', function(){\r\n\t\r\n\tvar newCook = Ti.Contacts.createPerson(Ncook);\r\n\tsaveID = newCook.getIdentifier();\r\n\tTi.API.info(saveID);\r\n});\r\n\r\n\r\nbutton2 = Ti.UI.createButton({\r\n\ttitle: \"Compare Nathan\",\r\n\ttop: '40%'\r\n});\r\n\r\n\r\nbutton2.addEventListener('click', function(){\r\n\t\r\n\r\n // var people = Ti.Contacts.getPeopleWithName(\"Nathaniel\");\r\n\r\nvar people = Ti.Contacts.getPersonByIdentifier(saveID);\r\nTi.API.info('Total contacts: ' + people.length);\r\n\r\n// var person = people[0];  \r\nvar person = people;\r\n\r\nTi.API.info(\"Ncook: \" + Ncook.email.home[0]);\r\n Ti.API.info(\"person: \" + person.email.home[0]);\r\n  Ti.API.info(\"person: \" + person.lastName);\r\nTi.API.info(\"-----------------------------------------\");\r\n for (var j=0, jlen=singleValue.length; j<jlen; j++){\r\n \t\r\n if(Ncook[singleValue[j]] == person[singleValue[j]] && Ncook[singleValue[j]] != null) {\r\n Ti.API.info(singleValue[j] + ': ' + 'Success!');\t\r\n } else {\r\n \t\r\n \tTi.API.info('No Match');\r\n }}\r\n \r\n for (var i=0, jlen=multiValue.length; i<jlen; i++){\r\n \t\r\n if(Ncook[multiValue[i]] == person[multiValue[i]] && Ncook[multiValue[i]] != null) {\r\n Ti.API.info(multiValue[i] + ': ' + 'Success!');\t\r\n } else {\r\n \t\r\n \tTi.API.info('No Match');\r\n }}\r\n \r\n });\r\n\r\nwin1.add(button2);\r\nwin1.add(newNathan);\r\nwin1.open();\r\n{code}\r\n\r\n*To be run on a iOS 9 device*\r\n\r\nIn regards to the console statements printing {{person.email.home[0])}} , should it not be able to retrieve the appropriate data with the method {{Ti.Contacts.GetPeopleWithName}} , as it does with {{Ti.Contacts.getPersonByIdentifier}} ? Let me know if you any more queries.",
					"updateAuthor": {
						"name": "htbryant",
						"key": "htbryant",
						"displayName": "Harry Bryant",
						"active": true,
						"timeZone": "Europe/London"
					},
					"created": "2015-12-17T18:21:07.000+0000",
					"updated": "2015-12-17T18:21:44.000+0000"
				},
				{
					"id": "373242",
					"author": {
						"name": "lchoudhary",
						"key": "lchoudhary",
						"displayName": "Lokesh Choudhary",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I checked on android with the code above & I see that {{email}} returns {{[object object]}} which in code is accessed as {{person.email}}\r\n\r\nEnvironment:\r\nAppc Studio : 4.4.0.201511241829\r\nTi SDK :  5.1.2.v20151215104446\r\nTi CLI : 5.0.5\r\nAlloy : 1.7.26\r\nMAC Yosemite : 10.10.5\r\nAppc NPM : 4.2.2\r\nAppc CLI : 5.1.0\r\nNode: v0.12.27\r\nSamsung Galaxy S4 - Android 5.0.1\r\n",
					"updateAuthor": {
						"name": "lchoudhary",
						"key": "lchoudhary",
						"displayName": "Lokesh Choudhary",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2015-12-17T19:15:58.000+0000",
					"updated": "2015-12-17T19:17:19.000+0000"
				},
				{
					"id": "373330",
					"author": {
						"name": "ssombhatla",
						"key": "ssombhatla",
						"displayName": "Srikanth Sombhatla",
						"active": false,
						"timeZone": "Asia/Singapore"
					},
					"body": "[~htbryant]\r\n\r\nThanks for providing additional info. I observe that the original app.js file is wrongly using {{Ti.API.info(\"person: \" + person.email)}} at line 70. But the app.js with {{Ti.Contacts.getPersonByIdentifier}} is correctly using {{Ti.API.info(\"person: \" + person.email.home[0])}}. \r\n\r\nSince {{person.email}} returns JSON it prints [object Object]. Or you can try {{Ti.API.info(\"person: \" + JSON.stringify(person.email))}} to see the complete JSON structure. \r\n\r\n",
					"updateAuthor": {
						"name": "ssombhatla",
						"key": "ssombhatla",
						"displayName": "Srikanth Sombhatla",
						"active": false,
						"timeZone": "Asia/Singapore"
					},
					"created": "2015-12-21T07:17:11.000+0000",
					"updated": "2015-12-21T07:18:56.000+0000"
				},
				{
					"id": "373352",
					"author": {
						"name": "htbryant",
						"key": "htbryant",
						"displayName": "Harry Bryant",
						"active": true,
						"timeZone": "Europe/London"
					},
					"body": "[~ssombhatla] \r\n\r\nThanks for the clarification, found the issue was with the contacts in the device, and was due to user error. Using {{JSON.stringify(person.email))}} revealed that. closing ticket as invalid. ",
					"updateAuthor": {
						"name": "htbryant",
						"key": "htbryant",
						"displayName": "Harry Bryant",
						"active": true,
						"timeZone": "Europe/London"
					},
					"created": "2015-12-21T21:46:09.000+0000",
					"updated": "2015-12-21T21:46:09.000+0000"
				}
			],
			"maxResults": 6,
			"total": 6,
			"startAt": 0
		}
	}
}