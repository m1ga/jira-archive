{
	"id": "160244",
	"key": "TIMOB-23376",
	"fields": {
		"issuetype": {
			"id": "4",
			"description": "An improvement or enhancement to an existing feature or task.",
			"name": "Improvement",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": null,
		"resolutiondate": null,
		"created": "2016-05-13T12:50:51.000+0000",
		"priority": null,
		"labels": [],
		"versions": [],
		"issuelinks": [],
		"assignee": null,
		"updated": "2018-02-28T19:54:59.000+0000",
		"status": {
			"description": "The issue is open and ready for the assignee to start work on it.",
			"name": "Open",
			"id": "1",
			"statusCategory": {
				"id": 2,
				"key": "new",
				"colorName": "blue-gray",
				"name": "To Do"
			}
		},
		"components": [],
		"description": "I couldn't understand why I wasn't getting the photo associated to my Custom Object created.\r\nThe API was always returning photo: {} which is an empty object.\r\n\r\nFigured it out that when you use any query like {{Cloud.Objects.query()}} by default {{response_json_depth}}  set to {{1}} and even if I had a `Photos` object linked to my Custom Object, the API was returning:\r\n{code}\r\n{\r\n    \"Vehicle\": [\r\n        {\r\n            \"name\": \"foo\",\r\n            \"photo: {}\r\n        }\r\n    ]\r\n}\r\n{code}\r\nby setting {{response_json_depth}} to 3 I managed to have:\r\n{code}\r\n{\r\n    \"Vehicle\": [\r\n        {\r\n            \"name\": \"foo\",\r\n            \"photo: {\r\n                \"urls\": {\r\n                    \"original\": \"http://bar.com\"\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}\r\n{code}\r\n\r\nso that’s one mystery solved but I think maybe a warning message into the documentation to point people into that direction when checking the {{photo}} attribute on the Custom Object for example would help.\r\nMaybe something around those lines:\r\n{quote}\r\nWarning: if you are trying to fetch attributes which should have child objects like photo, be aware that you'll need to increase response_json_depth otherwise photo attribute will always return an empty Object.\r\n{quote}",
		"attachment": [],
		"flagged": false,
		"summary": "ArrowDB - Documentation improvement",
		"creator": {
			"name": "clement",
			"key": "clement",
			"displayName": "Clément Blanco",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "clement",
			"key": "clement",
			"displayName": "Clément Blanco",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "385671",
					"author": {
						"name": "sdarda",
						"key": "sdarda",
						"displayName": "Sharif AbuDarda",
						"active": false,
						"timeZone": "Asia/Dhaka"
					},
					"body": "Hello, Thanks for creating the ticket. Our engineers will look into it. Please provide the docs link where this should be documented. Moving the ticket. \r\n\r\nRegards,\r\nSharif.",
					"updateAuthor": {
						"name": "sdarda",
						"key": "sdarda",
						"displayName": "Sharif AbuDarda",
						"active": false,
						"timeZone": "Asia/Dhaka"
					},
					"created": "2016-05-13T14:20:17.000+0000",
					"updated": "2016-05-13T14:20:17.000+0000"
				},
				{
					"id": "385673",
					"author": {
						"name": "clement",
						"key": "clement",
						"displayName": "Clément Blanco",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Well not sure... everywhere there is the ability to retrieve a multi level JSON object as a response from the API I would say.\r\nOr every time you mention a relationship to a another object...",
					"updateAuthor": {
						"name": "clement",
						"key": "clement",
						"displayName": "Clément Blanco",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2016-05-13T14:24:50.000+0000",
					"updated": "2016-05-13T14:24:50.000+0000"
				}
			],
			"maxResults": 2,
			"total": 2,
			"startAt": 0
		}
	}
}