{
	"id": "163100",
	"key": "TIMOB-23882",
	"fields": {
		"issuetype": {
			"id": "4",
			"description": "An improvement or enhancement to an existing feature or task.",
			"name": "Improvement",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": {
			"id": "10100",
			"description": "This issue won't be actioned.",
			"name": "Won't Do"
		},
		"resolutiondate": "2018-08-15T10:13:10.000+0000",
		"created": "2016-09-09T11:56:00.000+0000",
		"priority": {
			"name": "Medium",
			"id": "3"
		},
		"labels": [
			"qe-6.0.0"
		],
		"versions": [
			{
				"id": "16980",
				"description": "New V8",
				"name": "Release 6.0.0",
				"archived": false,
				"released": true,
				"releaseDate": "2016-11-15"
			}
		],
		"issuelinks": [
			{
				"id": "56285",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"inwardIssue": {
					"id": "170947",
					"key": "TIMOB-25715",
					"fields": {
						"summary": "Windows: Allow packaging for multiple architectures (Windows Universal)",
						"status": {
							"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
							"name": "Resolved",
							"id": "5",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Low",
							"id": "4"
						},
						"issuetype": {
							"id": "6",
							"description": "gh.issue.epic.desc",
							"name": "Epic",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": {
			"name": "kiguchi",
			"key": "kota",
			"displayName": "Kota Iguchi",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2019-05-09T06:46:36.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "12642",
				"name": "Windows",
				"description": "Windows authoring support"
			}
		],
		"description": "h5.Description\r\n\r\nWhen a Windows 10 application in Visual Studio a developer is given the option to select the architectures they wish to package for, with the options of x86, x64 and ARM. The app is then built for all architectures and a universal app bundle is created.\r\n\r\nWhen a developer packages a titanium application for Windows Platform they will only be able to package for one architecture at a time by choosing either {{dist-phonestore}} or {{dist-winstore}}, this means that in order to create a universal app a developer will have to package multiple times each release cycle, and also will not be able to package for x64 architecture.\r\n\r\nI propose that we investigate the following possibilities:\r\n\r\n* Add a new packaging option, {{dist-universal}}, when packaging for this it will create an appx that includes all architectures. \r\n** This fits in with the naming scheme of the current options, but is not immediately clear to a user what architectures will be targeted\r\n* Replace the existing {{dist-*}} packaging options with a singular option, and then introduce a flag to allow a user to specify the architectures to be built, either defaulting to all or to prompt the user to select\r\n** This is a much larger effort that although it provides a better publishing flow the cost probably outweighs the benefit",
		"attachment": [],
		"flagged": false,
		"summary": "Windows: Allow multiple architectures to be targeted when packaging for Windows 10",
		"creator": {
			"name": "eharris",
			"key": "eharris",
			"displayName": "Ewan Harris",
			"active": true,
			"timeZone": "Europe/Dublin"
		},
		"subtasks": [],
		"reporter": {
			"name": "eharris",
			"key": "eharris",
			"displayName": "Ewan Harris",
			"active": true,
			"timeZone": "Europe/Dublin"
		},
		"environment": null,
		"closedSprints": [
			{
				"id": 1065,
				"state": "closed",
				"name": "2016 Sprint 17 SDK",
				"startDate": "2018-08-13T17:39:36.846Z",
				"endDate": "2018-08-27T17:39:00.000Z",
				"completeDate": "2018-08-29T16:10:57.013Z",
				"originBoardId": 114
			},
			{
				"id": 1021,
				"state": "closed",
				"name": "2018 Sprint 08 SDK",
				"startDate": "2018-04-08T17:57:36.122Z",
				"endDate": "2018-04-22T17:57:00.000Z",
				"completeDate": "2018-04-22T22:51:19.120Z",
				"originBoardId": 114
			}
		],
		"comment": {
			"comments": [
				{
					"id": "440795",
					"author": {
						"name": "kiguchi",
						"key": "kota",
						"displayName": "Kota Iguchi",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Unfortunately, after some investigations it turns out this is difficult to implement because we are pretty much depending on {{cmake}} to generate Visual Studio projects, and {{cmake}} doesn't work well with building apps for multiple architectures all at once.\r\n\r\nI would resolve this as {{Won't Do}} for now to indicate it is difficult things to do. Once we find new solutions for this, feel free to reopen this ticket.",
					"updateAuthor": {
						"name": "kiguchi",
						"key": "kota",
						"displayName": "Kota Iguchi",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-08-15T10:13:10.000+0000",
					"updated": "2018-08-15T10:13:10.000+0000"
				}
			],
			"maxResults": 2,
			"total": 2,
			"startAt": 0
		}
	}
}