{
	"id": "164575",
	"key": "TIMOB-24155",
	"fields": {
		"issuetype": {
			"id": "4",
			"description": "An improvement or enhancement to an existing feature or task.",
			"name": "Improvement",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": null,
		"resolutiondate": null,
		"created": "2016-11-17T19:41:08.000+0000",
		"priority": {
			"name": "Medium",
			"id": "3"
		},
		"labels": [
			"cb-tooling"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": null,
		"updated": "2020-01-30T18:55:52.000+0000",
		"status": {
			"description": "The issue is open and ready for the assignee to start work on it.",
			"name": "Open",
			"id": "1",
			"statusCategory": {
				"id": 2,
				"key": "new",
				"colorName": "blue-gray",
				"name": "To Do"
			}
		},
		"components": [],
		"description": "So, we changed our module CLI to use the appc-cli instead of the now deprecated python scripts. This works great for compiling and packaging module ({{appc ti build -p ios --build-only}}) and ({{appc ti build -p android --build-only}}). But for some modules (appcelerator.https, appcelerator.encrypteddatabase, ti.geofence, ...) we use one script to compile and package both platform together, e.g. [this one|*strong text*]. Unfortunately, it calls the platform-specific python scripts instead of the CLI, so stuff like packaging hooks (TIMOB-24041) won't work.\r\n\r\nSo we either change the python script to call the CLI commands or create a node file to do the same (like we've done with our scons-commands). \r\n\r\nFor now, we can manually package the modules and put them together, but everybody should be aware that using the python scripts will now produce invalid modules and we may want to remove them from the repos completely.",
		"attachment": [],
		"flagged": false,
		"summary": "Module build: Allow multiple platforms to be built and bundled together",
		"creator": {
			"name": "hknoechel",
			"key": "hansknoechel",
			"displayName": "Hans Knöchel",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"subtasks": [],
		"reporter": {
			"name": "hknoechel",
			"key": "hansknoechel",
			"displayName": "Hans Knöchel",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"environment": null,
		"comment": {
			"comments": [],
			"maxResults": 0,
			"total": 0,
			"startAt": 0
		}
	}
}