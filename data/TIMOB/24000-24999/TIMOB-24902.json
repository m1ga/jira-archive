{
	"id": "168650",
	"key": "TIMOB-24902",
	"fields": {
		"issuetype": {
			"id": "4",
			"description": "An improvement or enhancement to an existing feature or task.",
			"name": "Improvement",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": {
			"id": "10100",
			"description": "This issue won't be actioned.",
			"name": "Won't Do"
		},
		"resolutiondate": "2021-02-11T12:16:21.000+0000",
		"created": "2017-06-28T11:25:35.000+0000",
		"priority": {
			"name": "Medium",
			"id": "3"
		},
		"labels": [
			"documentation"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": null,
		"updated": "2021-02-11T12:16:21.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10207",
				"name": "Tooling"
			},
			{
				"id": "12642",
				"name": "Windows",
				"description": "Windows authoring support"
			}
		],
		"description": "h5.Description\r\n\r\nCurrently (to my knowledge) ti_win_yaml doesn't allow for us to specify when something was deprecated or implemented. So it appears that everything is being marked as 4.1.0 on docs.appcelerator.\r\n\r\nFor deprecated items I guess the simplest/easiest way would be to add a new C++ macro like TITANIUM_FUNCTION_DEPRECATED(foo, 6.1.0), this would fit in with the existing pattern.\r\n\r\nSpecifying when something was implemented might be a little more difficult, for the namespace (Ti.FileSystem) could we use an {{\\@since 6.1.0}}, but for individual properties and functions I'm unsure",
		"attachment": [],
		"flagged": false,
		"summary": "Windows: Update ti_win_yaml to allow specifying deprecated and added in versions",
		"creator": {
			"name": "eharris",
			"key": "eharris",
			"displayName": "Ewan Harris",
			"active": true,
			"timeZone": "Europe/Dublin"
		},
		"subtasks": [],
		"reporter": {
			"name": "eharris",
			"key": "eharris",
			"displayName": "Ewan Harris",
			"active": true,
			"timeZone": "Europe/Dublin"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "423033",
					"author": {
						"name": "eharris",
						"key": "eharris",
						"displayName": "Ewan Harris",
						"active": true,
						"timeZone": "Europe/Dublin"
					},
					"body": "[~kota] [~gmathews] I believe both of you have worked on ti_win_yaml at some point in time? Any input/thoughts you have as to how we could achieve this?",
					"updateAuthor": {
						"name": "eharris",
						"key": "eharris",
						"displayName": "Ewan Harris",
						"active": true,
						"timeZone": "Europe/Dublin"
					},
					"created": "2017-06-28T11:26:45.000+0000",
					"updated": "2017-06-28T11:26:45.000+0000"
				}
			],
			"maxResults": 1,
			"total": 1,
			"startAt": 0
		}
	}
}