{
	"id": "169085",
	"key": "TIMOB-25015",
	"fields": {
		"issuetype": {
			"id": "2",
			"description": "A new feature of the product, which has yet to be developed.",
			"name": "New Feature",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": {
			"id": "10100",
			"description": "This issue won't be actioned.",
			"name": "Won't Do"
		},
		"resolutiondate": "2017-10-25T05:48:14.000+0000",
		"created": "2017-07-24T11:58:09.000+0000",
		"priority": {
			"name": "Low",
			"id": "4"
		},
		"labels": [],
		"versions": [
			{
				"id": "19572",
				"description": "Important fixes for 6.1.0",
				"name": "Release 6.1.1",
				"archived": false,
				"released": true,
				"releaseDate": "2017-06-16"
			}
		],
		"issuelinks": [],
		"assignee": {
			"name": "kiguchi",
			"key": "kota",
			"displayName": "Kota Iguchi",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2017-10-25T05:48:14.000+0000",
		"status": {
			"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
			"name": "Resolved",
			"id": "5",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "12642",
				"name": "Windows",
				"description": "Windows authoring support"
			}
		],
		"description": "h5.Description\r\n\r\nThis is mainly for the test suites but it seems like something that might be seen as nice from a users standpoint too. (Although in reality on UWP a developer should not be tying features to a device family but using the detecting API contracts https://blogs.windows.com/buildingapps/2015/09/15/dynamically-detecting-features-with-api-contracts-10-by-10/, which maybe we should also have an API for?)\r\n\r\nBasically in the tests we have to skip some tests on a device family because they prompt, Geolocation primarily, currently this is skipped on emulator easily by checking the model but a device is harder to check. We could skip both in one go by doing a check like {{Ti.App.Windows.deviceFamily() === 'Windows.Mobile'}}\r\n\r\nThere is some demo code on how to do this here https://gist.github.com/wagonli/40d8a31bd0d6f0dd7a5d  but note that it looks the DeviceFamily prop isn't documented https://docs.microsoft.com/en-us/uwp/api/windows.system.profile.analyticsinfo\r\n\r\n\r\nPersonally I'm not sure whether this should be in core, maybe in a native module or HL module",
		"attachment": [],
		"flagged": false,
		"summary": "Windows: Allow a user to check the Windows 10 Device Family",
		"creator": {
			"name": "eharris",
			"key": "eharris",
			"displayName": "Ewan Harris",
			"active": true,
			"timeZone": "Europe/Dublin"
		},
		"subtasks": [],
		"reporter": {
			"name": "eharris",
			"key": "eharris",
			"displayName": "Ewan Harris",
			"active": true,
			"timeZone": "Europe/Dublin"
		},
		"environment": "Windows 10 only",
		"closedSprints": [
			{
				"id": 963,
				"state": "closed",
				"name": "2017 Sprint 22 SDK",
				"startDate": "2017-10-22T21:43:59.523Z",
				"endDate": "2017-11-05T22:43:00.000Z",
				"completeDate": "2017-11-06T16:33:42.425Z",
				"originBoardId": 114
			}
		],
		"comment": {
			"comments": [
				{
					"id": "424705",
					"author": {
						"name": "eharris",
						"key": "eharris",
						"displayName": "Ewan Harris",
						"active": true,
						"timeZone": "Europe/Dublin"
					},
					"body": "I wrote a small Hyperloop based module that provides this functionality https://github.com/ewanharris/ti.windows.utilities",
					"updateAuthor": {
						"name": "eharris",
						"key": "eharris",
						"displayName": "Ewan Harris",
						"active": true,
						"timeZone": "Europe/Dublin"
					},
					"created": "2017-07-25T22:55:47.000+0000",
					"updated": "2017-07-25T22:55:47.000+0000"
				},
				{
					"id": "429273",
					"author": {
						"name": "kiguchi",
						"key": "kota",
						"displayName": "Kota Iguchi",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Nice, but I would think we should leverage Hyperloop in this case like you do in your module. I tend to think that we want to leverage Hyperloop more whenever possible rather than adding new features in Titanium API.\r\n",
					"updateAuthor": {
						"name": "kiguchi",
						"key": "kota",
						"displayName": "Kota Iguchi",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2017-10-19T04:21:12.000+0000",
					"updated": "2017-10-19T04:21:12.000+0000"
				},
				{
					"id": "429540",
					"author": {
						"name": "kiguchi",
						"key": "kota",
						"displayName": "Kota Iguchi",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I think this has to be done with Hyperloop. I would think we want to leverage Hyperloop whenever it can rather than adding new feature in Titanium API.",
					"updateAuthor": {
						"name": "kiguchi",
						"key": "kota",
						"displayName": "Kota Iguchi",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2017-10-25T05:48:14.000+0000",
					"updated": "2017-10-25T05:48:14.000+0000"
				}
			],
			"maxResults": 3,
			"total": 3,
			"startAt": 0
		}
	}
}