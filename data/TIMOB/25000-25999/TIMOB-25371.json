{
	"id": "169958",
	"key": "TIMOB-25371",
	"fields": {
		"issuetype": {
			"id": "2",
			"description": "A new feature of the product, which has yet to be developed.",
			"name": "New Feature",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": null,
		"resolutiondate": null,
		"created": "2017-10-04T10:29:01.000+0000",
		"priority": null,
		"labels": [
			"adhoc",
			"cb-tooling"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": null,
		"updated": "2020-01-30T21:40:54.000+0000",
		"status": {
			"description": "The issue is open and ready for the assignee to start work on it.",
			"name": "Open",
			"id": "1",
			"statusCategory": {
				"id": 2,
				"key": "new",
				"colorName": "blue-gray",
				"name": "To Do"
			}
		},
		"components": [
			{
				"id": "10206",
				"name": "iOS",
				"description": "iOS Platform"
			}
		],
		"description": "It's possibile to distribute an iOS App from Safari with a simple link, this only if the ipa generated is an adhoc distribution.\r\n\r\nI use this option instead of using TestFlight, so the app will expire after 10 months (when the adhoc distribution certificate expire) and not after 3 months as the Testflight builds.\r\n\r\nTo do this i did this:\r\n# Titanium > Package > iOS Adhoc/Enterprise . Titanium generates these files : Appname.ipa, DistributionSummary.plist, ExportOptions.plist and Packaging.log\r\n# In a webserver with https/ssl enabled i have created an html file with a link with this url: \r\n{code}\r\nitms-services://?action=download-manifest&url=https://url/testfolder/Appname.plist\r\n{code}\r\nIn the same folder (testfolder) i put: Appname.ipa, Appname.plist, the 2 images and the html file.\r\n# Titanium doesn't generate the Appname.plist file for over-the-air installation. This is the file that is needed (with the same name of the ipa -> Appname.plist)\r\n{code}\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\r\n<plist version=\"1.0\">\r\n<dict>\r\n\t<key>items</key>\r\n\t<array>\r\n\t\t<dict>\r\n\t\t\t<key>assets</key>\r\n\t\t\t<array>\r\n\t\t\t\t<dict>\r\n\t\t\t\t\t<key>kind</key>\r\n\t\t\t\t\t<string>software-package</string>\r\n\t\t\t\t\t<key>url</key>\r\n\t\t\t\t\t<string>URL OF THE IPA FILE</string>\r\n\t\t\t\t</dict>\r\n\t\t\t\t<dict>\r\n\t\t\t\t\t<key>kind</key>\r\n\t\t\t\t\t<string>full-size-image</string>\r\n\t\t\t\t\t<key>needs-shine</key>\r\n\t\t\t\t\t<true/>\r\n\t\t\t\t\t<key>url</key>\r\n\t\t\t\t\t<string>URL OF THE ICON@2x</string>\r\n\t\t\t\t</dict>\r\n\t\t\t\t<dict>\r\n\t\t\t\t\t<key>kind</key>\r\n\t\t\t\t\t<string>display-image</string>\r\n\t\t\t\t\t<key>needs-shine</key>\r\n\t\t\t\t\t<true/>\r\n\t\t\t\t\t<key>url</key>\r\n\t\t\t\t\t<string>URL OF THE IMAGE 512x512px </string>\r\n\t\t\t\t</dict>\r\n\t\t\t</array>\r\n\t\t\t<key>metadata</key>\r\n\t\t\t<dict>\r\n\t\t\t\t<key>bundle-identifier</key>\r\n\t\t\t\t<string>com.blablabla.appname</string>\r\n\t\t\t\t<key>bundle-version</key>\r\n\t\t\t\t<string>1.0</string>\r\n\t\t\t\t<key>kind</key>\r\n\t\t\t\t<string>software</string>\r\n\t\t\t\t<key>title</key>\r\n\t\t\t\t<string>Appname</string>\r\n\t\t\t</dict>\r\n\t\t</dict>\r\n\t</array>\r\n</dict>\r\n</plist>\r\n{code}\r\n\r\nSo the question is if this file can also be generated automatically when we do an adhoc distribution. \r\n\r\nOn stackoverflow i found this image of xCode 9 (see attachment)\r\n\r\n",
		"attachment": [
			{
				"id": "63386",
				"filename": "xcode9.png",
				"author": {
					"name": "nicolomonili",
					"key": "nicolomonili",
					"displayName": "nicolomonili",
					"active": true,
					"timeZone": "Europe/Rome"
				},
				"created": "2017-10-04T11:49:44.000+0000",
				"size": 44542,
				"mimeType": "image/png"
			}
		],
		"flagged": false,
		"summary": "iOS : Ad Hoc distribution, generate the Appname.plist file for over-the-air installation",
		"creator": {
			"name": "nicolomonili",
			"key": "nicolomonili",
			"displayName": "nicolomonili",
			"active": true,
			"timeZone": "Europe/Rome"
		},
		"subtasks": [],
		"reporter": {
			"name": "nicolomonili",
			"key": "nicolomonili",
			"displayName": "nicolomonili",
			"active": true,
			"timeZone": "Europe/Rome"
		},
		"environment": "iOS Ad Hoc Distribution",
		"comment": {
			"comments": [
				{
					"id": "428734",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Looks like a cool addition to the existing Ad-Hoc builds, moving to TIMOB for further investigation in the future. Feel free to submit a PR to integrate this into the core more quickly!\r\n\r\n*EDIT*: Looks like a simple new flag:\r\n{quote}\r\nThe export options property list file includes all of the choices made during the distribution workflow and can be passed to xcodebuild using the -exportOptionsPlist flag. The property list file includes new properties (signingStyle, signingCertificate, and provisioningProfiles) for specifying manual signing. See xcodebuild -help for the full list of supported ExportOptions keys.\r\n{quote}",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2017-10-05T08:22:32.000+0000",
					"updated": "2017-10-05T08:25:12.000+0000"
				}
			],
			"maxResults": 1,
			"total": 1,
			"startAt": 0
		}
	}
}