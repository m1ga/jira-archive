{
	"id": "172201",
	"key": "TIMOB-26391",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [
			{
				"id": "20405",
				"name": "Release 7.4.2",
				"archived": false,
				"released": true,
				"releaseDate": "2018-12-19"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2018-12-18T17:53:50.000+0000",
		"created": "2018-09-10T16:02:11.000+0000",
		"priority": {
			"name": "Critical",
			"id": "1"
		},
		"labels": [
			"beta",
			"freeze",
			"ios",
			"ios12",
			"ui"
		],
		"versions": [],
		"issuelinks": [
			{
				"id": "56904",
				"type": {
					"id": "10002",
					"name": "Duplicate",
					"inward": "is duplicated by",
					"outward": "duplicates"
				},
				"inwardIssue": {
					"id": "172240",
					"key": "TIMOB-26420",
					"fields": {
						"summary": "ios 12 app crash (EXC_BAD_ACCESS, KERN_INVALID_ADDRESS)",
						"status": {
							"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
							"name": "Resolved",
							"id": "5",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Critical",
							"id": "1"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "56860",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"inwardIssue": {
					"id": "172308",
					"key": "MOD-2464",
					"fields": {
						"summary": "iOS: Ti.WKWebView - Crash when not running on main thread",
						"status": {
							"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
							"name": "Resolved",
							"id": "5",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Critical",
							"id": "1"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": {
			"name": "jvennemann",
			"key": "jvennemann",
			"displayName": "Jan Vennemann",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"updated": "2019-03-03T08:39:39.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10206",
				"name": "iOS",
				"description": "iOS Platform"
			}
		],
		"description": "Hi there,\r\nbefore Apple's event on September 12th we've decided to test our apps on iOS 12 beta and everything seems to work fine\r\nexcept that the app freezes randomly on different parts of it. It could be writing some data on the database or downloading images from web.\r\nWe then have tried to isolate and make a test case where it always freezes but we could not find it.\r\nBut what we've found so far is that it always freezes when:\r\n\r\n\"run-on-main-thread\" is set to true. Never freezes when this is disabled\r\nRunning on iOS 12. Everything is fine on iOS 11\r\nRunning with Ti SDK - 7.1.0.GA and latest release 7.4.0.RC\r\nBuilding from both Xcode 9 and 10. This also happens on iOS 12 simulators\r\n\r\nWe also tried checking Instruments and Console to see if we can find some errors before it freezes but nothing weird\r\nis displayed on them nor a memory warning/leak.\r\n\r\nThe biggest challenge here is to find a very isolated and reproducible case where it will always freeze.\r\nWe found another community member with the same problem but maybe not so many members have iOS beta versions installed on their devices.",
		"attachment": [],
		"flagged": false,
		"summary": "iOS: App randomly freezes on iOS 12 beta when using built-in JSCore",
		"creator": {
			"name": "chmiiller",
			"key": "chmiiller",
			"displayName": "Carlos Henrique Zinato",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "chmiiller",
			"key": "chmiiller",
			"displayName": "Carlos Henrique Zinato",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": "Ti SDK 7.4.0.RC or 7.1.0.GA\r\niOS 12 Beta",
		"closedSprints": [
			{
				"id": 1078,
				"state": "closed",
				"name": "2018 Sprint 20 SDK",
				"startDate": "2018-09-23T16:57:58.349Z",
				"endDate": "2018-10-07T16:57:00.000Z",
				"completeDate": "2018-10-07T23:31:40.476Z",
				"originBoardId": 114
			},
			{
				"id": 1084,
				"state": "closed",
				"name": "2018 Sprint 21",
				"startDate": "2018-10-07T23:32:40.560Z",
				"endDate": "2018-10-21T23:32:00.000Z",
				"completeDate": "2018-10-21T23:19:05.460Z",
				"originBoardId": 114
			},
			{
				"id": 1103,
				"state": "closed",
				"name": "2018 Sprint 25",
				"startDate": "2018-12-02T16:29:21.531Z",
				"endDate": "2018-12-16T16:29:00.000Z",
				"completeDate": "2018-12-15T02:33:24.870Z",
				"originBoardId": 114
			},
			{
				"id": 1104,
				"state": "closed",
				"name": "2018 Sprint 26",
				"startDate": "2018-12-17T15:56:00.172Z",
				"endDate": "2018-12-21T15:56:00.000Z",
				"completeDate": "2018-12-26T17:42:17.145Z",
				"originBoardId": 114
			}
		],
		"comment": {
			"comments": [
				{
					"id": "441455",
					"author": {
						"name": "jvandijk",
						"key": "jvandijk",
						"displayName": "Jeroen van Dijk",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"body": "I think Carlos is mentioning me in the description and face the same problem. I'd like to drill down on this problem, but have no pointers where to start as it's occurring completely random. As mentioned it's occurring on both the simulators and real devices.",
					"updateAuthor": {
						"name": "jvandijk",
						"key": "jvandijk",
						"displayName": "Jeroen van Dijk",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"created": "2018-09-10T19:33:08.000+0000",
					"updated": "2018-09-10T20:20:05.000+0000"
				},
				{
					"id": "441474",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Do you use specific setTimeout or setInterval API's? Maybe there is a deadlock when using those. I am trying my best to troubleshoot this together with you guys. Thanks!",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-11T14:18:29.000+0000",
					"updated": "2018-09-11T14:18:29.000+0000"
				},
				{
					"id": "441486",
					"author": {
						"name": "jvandijk",
						"key": "jvandijk",
						"displayName": "Jeroen van Dijk",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"body": "I don't exactly understand what you mean with API's in the context of setTimeout & setInterval, but I'm not using that kind of logic when bridging from Javascript to Native. What I'm doing though is using _.defer() a lot based on the knowledge shared by Ronald Treur: https://www.slideshare.net/ronaldtreur/titanium-making-the-most-of-your-single-thread",
					"updateAuthor": {
						"name": "jvandijk",
						"key": "jvandijk",
						"displayName": "Jeroen van Dijk",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"created": "2018-09-11T18:48:51.000+0000",
					"updated": "2018-09-11T18:48:51.000+0000"
				},
				{
					"id": "441519",
					"author": {
						"name": "nickkemp",
						"key": "nickkemp",
						"displayName": "Nick Kemp",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"body": "Just to chime in, we are also seeing this issue on iOS 12. Its very random in frequency but in our case it appears to happen only when the app resumes from the background. In the Resumed event we are using a _.defer(). The deferred function is checking for Geofence permission and starting/stopping and based on that loading geofences or not.\r\n\r\nUpdate: removed _.defer, no change.\r\n",
					"updateAuthor": {
						"name": "nickkemp",
						"key": "nickkemp",
						"displayName": "Nick Kemp",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"created": "2018-09-12T22:44:44.000+0000",
					"updated": "2018-09-13T00:38:25.000+0000"
				},
				{
					"id": "441522",
					"author": {
						"name": "darknos",
						"key": "darknos",
						"displayName": "Sergey Nosenko",
						"active": true,
						"timeZone": "Europe/Helsinki"
					},
					"body": "I have the same issue with an application in production. it freezes each second time when window with ti.map is opened. \r\n\r\nI'm gong to re-test app with \"run-on-main-thread\" is set to false and don't have any ideas what to do next. Please help.",
					"updateAuthor": {
						"name": "darknos",
						"key": "darknos",
						"displayName": "Sergey Nosenko",
						"active": true,
						"timeZone": "Europe/Helsinki"
					},
					"created": "2018-09-13T08:38:43.000+0000",
					"updated": "2018-09-13T08:38:43.000+0000"
				},
				{
					"id": "441569",
					"author": {
						"name": "leoafarias",
						"key": "leoafarias",
						"displayName": "Leonardo Farias",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Also having the same issue. Its very difficult to isolate on a production app, due to the multiple dependencies, also there is nothing in the logs, or anything. It seems that its a black box error, so no visibility on why.",
					"updateAuthor": {
						"name": "leoafarias",
						"key": "leoafarias",
						"displayName": "Leonardo Farias",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-14T13:59:59.000+0000",
					"updated": "2018-09-14T13:59:59.000+0000"
				},
				{
					"id": "441570",
					"author": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "For me, setting run-on-main-thread to false fixes the problem 100%. Tested with GM version of iOS 12 beta and Xcode.",
					"updateAuthor": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-14T14:03:41.000+0000",
					"updated": "2018-09-14T14:03:41.000+0000"
				},
				{
					"id": "441576",
					"author": {
						"name": "darknos",
						"key": "darknos",
						"displayName": "Sergey Nosenko",
						"active": true,
						"timeZone": "Europe/Helsinki"
					},
					"body": "I have a few things that works only with run-on-main-thread so I'm in dead lock with this issue. :(\r\n\r\nPlease help...",
					"updateAuthor": {
						"name": "darknos",
						"key": "darknos",
						"displayName": "Sergey Nosenko",
						"active": true,
						"timeZone": "Europe/Helsinki"
					},
					"created": "2018-09-14T15:37:59.000+0000",
					"updated": "2018-09-14T15:37:59.000+0000"
				},
				{
					"id": "441582",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Thanks for the responses everyone! We are actively looking into this ATM. If anyone can share his/her app with me, I'd highly appreciate it. It can be sent to hknoechel@axway.com, thx! [~vijaysingh] Let me know your investigations on this one.",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-14T17:37:41.000+0000",
					"updated": "2018-09-14T17:37:41.000+0000"
				},
				{
					"id": "441587",
					"author": {
						"name": "leoafarias",
						"key": "leoafarias",
						"displayName": "Leonardo Farias",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hans have sent you an invite to our repo on github. If you have questions please reach out to ianko or bduyng on ti.slack.",
					"updateAuthor": {
						"name": "leoafarias",
						"key": "leoafarias",
						"displayName": "Leonardo Farias",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-14T19:03:34.000+0000",
					"updated": "2018-09-14T19:03:34.000+0000"
				},
				{
					"id": "441596",
					"author": {
						"name": "nickkemp",
						"key": "nickkemp",
						"displayName": "Nick Kemp",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"body": "After a few days testing we think it is in fact related to use of setInterval. We are able to reach a no hang state by not using setInterval. \r\n\r\nHans, I have sent you an email and access to our repo.",
					"updateAuthor": {
						"name": "nickkemp",
						"key": "nickkemp",
						"displayName": "Nick Kemp",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"created": "2018-09-15T22:05:21.000+0000",
					"updated": "2018-09-15T22:05:21.000+0000"
				},
				{
					"id": "441597",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Thanks Nick! I am testing your project right now. We are continuing to investigate in the setInterval / setTimeout direction, since these are also JSCore based and may have changed internally in iOS 12.\r\n\r\n*EDIT*: Looking into the code, there is indeed a [difference|https://github.com/appcelerator/titanium_mobile/blob/master/iphone/Classes/KrollTimer.m#L106-L117] between kroll- and main-thread in the timer-management, resulting in a threading issue after some time. If someone can comment out line 106-113 and let me know the results, I'd appreciate it, since I'm still not able to reproduce the bug.",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-15T23:12:44.000+0000",
					"updated": "2018-09-15T23:30:20.000+0000"
				},
				{
					"id": "441599",
					"author": {
						"name": "nickkemp",
						"key": "nickkemp",
						"displayName": "Nick Kemp",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"body": "Cheers Hans,\r\n\r\nI ran up a build with those lines commented out and have had UI hang on boot. I once got into the UI after resetting the simulator (so forcing the user to log out of the app). But once in I had a hard crash. \r\n\r\nAfter that it was back to the hang on splash.",
					"updateAuthor": {
						"name": "nickkemp",
						"key": "nickkemp",
						"displayName": "Nick Kemp",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"created": "2018-09-16T06:29:55.000+0000",
					"updated": "2018-09-16T06:33:14.000+0000"
				},
				{
					"id": "441600",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Thanks Nick! We will dig into this next week.",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-16T09:21:41.000+0000",
					"updated": "2018-09-16T09:21:41.000+0000"
				},
				{
					"id": "441603",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I'll also look in this issue. If someone can please share your app with me at vsingh@axway.com, would be great. Thanks!",
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-16T15:13:36.000+0000",
					"updated": "2018-09-16T15:13:36.000+0000"
				},
				{
					"id": "441604",
					"author": {
						"name": "nickkemp",
						"key": "nickkemp",
						"displayName": "Nick Kemp",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"body": "I've sent you an invite Vijay!",
					"updateAuthor": {
						"name": "nickkemp",
						"key": "nickkemp",
						"displayName": "Nick Kemp",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"created": "2018-09-16T20:03:57.000+0000",
					"updated": "2018-09-16T20:03:57.000+0000"
				},
				{
					"id": "441607",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Thanks Nick for sharing your app! \r\nI have tried to reproduce the issue with app but unable to reproduce the issue.\r\nIs there any particular steps to reproduce it?\r\nCan you please try to test it by replacing 'NO' with 'YES' at line no 111 [here|https://github.com/appcelerator/titanium_mobile/blob/master/iphone/Classes/KrollTimer.m#L111]. Thanks!",
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-17T07:58:44.000+0000",
					"updated": "2018-09-17T08:01:41.000+0000"
				},
				{
					"id": "441608",
					"author": {
						"name": "nickkemp",
						"key": "nickkemp",
						"displayName": "Nick Kemp",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"body": "No problem, I have just sent a build out to our team tonight for testing with that change. One of the challenges has been consistency. On some devices it manifests quickly (on a test iPhone X we have running iOS 12, it occurs several times an hour) but on others (iphone7+) it can be 24hours+ of running before we see the issue.\r\n\r\nWith our particular app, it only happens when you have the pill moved over to locations (on the greetings screen). This does a setInterval. With this on, it will randomly UI hang. With this slider set to manually it never hangs. ",
					"updateAuthor": {
						"name": "nickkemp",
						"key": "nickkemp",
						"displayName": "Nick Kemp",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"created": "2018-09-17T08:04:44.000+0000",
					"updated": "2018-09-17T08:25:34.000+0000"
				},
				{
					"id": "441659",
					"author": {
						"name": "nickkemp",
						"key": "nickkemp",
						"displayName": "Nick Kemp",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"body": "An update: We have been running for 2 days now, no hangs with this change!\r\n That flag seems to have solved it. Will keep updating if there are any changes",
					"updateAuthor": {
						"name": "nickkemp",
						"key": "nickkemp",
						"displayName": "Nick Kemp",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"created": "2018-09-18T20:11:44.000+0000",
					"updated": "2018-09-18T20:11:44.000+0000"
				},
				{
					"id": "441674",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Thanks for update Nick!\r\nCan other people also please verify with following changes -\r\nTest it by replacing 'NO' with 'YES' at line no 111 [here|https://github.com/appcelerator/titanium_mobile/blob/master/iphone/Classes/KrollTimer.m#L111]. Thanks!",
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-19T04:03:15.000+0000",
					"updated": "2018-09-19T04:03:15.000+0000"
				},
				{
					"id": "441685",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "PR (7_4_X) - https://github.com/appcelerator/titanium_mobile/pull/10327\r\nPR (master) - https://github.com/appcelerator/titanium_mobile/pull/10326",
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-19T08:02:09.000+0000",
					"updated": "2018-09-19T08:02:09.000+0000"
				},
				{
					"id": "441698",
					"author": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I replaced this with YES but still app is crashing on one particular main screen...\r\n\r\nOperating System\r\n  Name                        = Mac OS X\r\n  Version                     = 10.13.6\r\n  Architecture                = 64bit\r\n  # CPUs                      = 4\r\n  Memory                      = 8.0GB\r\n\r\nNode.js\r\n  Node.js Version             = 8.9.1\r\n  npm Version                 = 5.10.0\r\n\r\nAppcelerator CLI\r\n  Installer                   = 4.2.13\r\n  Core Package                = 7.0.6\r\n\r\nTitanium CLI\r\n  CLI Version                 = 5.1.1\r\n  node-appc Version           = 0.2.44\r\n\r\nTitanium SDKs\r\n  7.4.0.GA\r\n    Version                   = 7.4.0",
					"updateAuthor": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-19T14:14:40.000+0000",
					"updated": "2018-09-19T14:14:40.000+0000"
				},
				{
					"id": "441700",
					"author": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I've just tested on both 7.1.0.GA and 7.4.0.RC and still the same.\r\nJust to make sure, I'm changing from NO to YES on KrollTimer.m line 111, cleaning my project and building it again (deleting the app).\r\nTested it 3 times on different devices, always cleaning the project. Still the same =/\r\nI can share an .IPA file if you want it so you can see the logs if it helps",
					"updateAuthor": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-19T14:19:12.000+0000",
					"updated": "2018-09-19T14:25:30.000+0000"
				},
				{
					"id": "441703",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Please note that your app still could crash because of other iOS 12 related deprecations or removals. For example, memory leaks in your controllers could have been ignored on iOS 11.x but may be causing a crash on iOS 12 now. We need an isolated test project to reproduce this in order to properly fix all occurences of this crash. Also, it seems like no one is able to provide a symbolicated crash report or log so far, which makes it impossible to fix.",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-19T15:57:27.000+0000",
					"updated": "2018-09-19T15:57:27.000+0000"
				},
				{
					"id": "441705",
					"author": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I can send you my app on email id provided would you be able to test it on your end, For me it is crashing on only one image screen, if I don't go to that part everything is working fine",
					"updateAuthor": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-19T16:17:36.000+0000",
					"updated": "2018-09-19T16:17:36.000+0000"
				},
				{
					"id": "441710",
					"author": {
						"name": "miniman42",
						"key": "miniman42",
						"displayName": "Greg",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I've tested this too and am getting startup crashes and other freezes very frequently with ios12/7.4.X and XCode 10.  All was fine with iOS11/7.3.0/XC 9  - I will look harder to find the cause, it's a real challenge to get crash logs though as the app cannot be directly built with XCode (missing resources etc...) - This should really be possible!!.  As a workaround I create a tishadow app and because of the way it is packaged, I can rebuild that app in XCode directly and the resources are present, which gives far superior debug-ability - it does however add another variable to the mix :/",
					"updateAuthor": {
						"name": "miniman42",
						"key": "miniman42",
						"displayName": "Greg",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-19T17:57:07.000+0000",
					"updated": "2018-09-19T17:57:07.000+0000"
				},
				{
					"id": "441714",
					"author": {
						"name": "nickkemp",
						"key": "nickkemp",
						"displayName": "Nick Kemp",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"body": "UPDATE: I experienced our first UI hang last night on my own device, since making the change. Massive decrease in occurrences, however the issue is still there for us.\r\n\r\nHans: We're not seeing crashes in our app, just UI hangs, so nothing to provide as output.",
					"updateAuthor": {
						"name": "nickkemp",
						"key": "nickkemp",
						"displayName": "Nick Kemp",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"created": "2018-09-19T18:47:10.000+0000",
					"updated": "2018-09-19T18:48:30.000+0000"
				},
				{
					"id": "441719",
					"author": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "We are getting the freezes and crashes for our apps as well using all the latest, iOS12, XCode 10, Ti 7.4.0.GA.  Our clients are getting upset.  Any progress on this?",
					"updateAuthor": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2018-09-19T19:13:23.000+0000",
					"updated": "2018-09-19T19:13:23.000+0000"
				},
				{
					"id": "441811",
					"author": {
						"name": "miniman42",
						"key": "miniman42",
						"displayName": "Greg",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Not sure if it helps, but I've obbserved that some of the crashes are related to the freeze. \r\n\r\ne.g when the app is frozen it will generally stay alive (and not crash).  It will however crash ~180 seconds after backgrounding as the system will be unable to take a screen snapshot - presumably because the main thread is unresponsive.\r\n```\r\nSep 19 21:38:38 GB-iPhoneX assertiond[65] <Notice>: [MyApp:1529] Sending background permission expiration warning!\r\nSep 19 21:38:43 GB-iPhoneX assertiond[65] <Notice>: [MyApp:1529] Forcing crash report with description: MyApp:1529 has active assertions beyond permitted time: \r\nSep 19 21:38:43 GB-iPhoneX assertiond[65] <Notice>: [MyApp:1529] Finished crash reporting.\r\nSep 19 21:38:43 GB-iPhoneX assertiond[65] <Notice>: [MyApp:1529] dump assertions count:2 HWM:4 (CPUMON check): {\r\nSep 19 21:38:43 GB-iPhoneX assertiond[65] <Notice>: [MyApp:1529] setpriority(PRIO_DARWIN_ROLE, 1529, 3): ok\r\nSep 19 21:38:43 GB-iPhoneX assertiond[65] <Notice>: [MyApp:1529] Ignoring assertion remove, because we are terminated or pending termination\r\nSep 19 21:38:43 GB-iPhoneX mediaserverd(AudioToolbox)[491] <Notice>: 4213: { \"action\":\"destroy_session\", \"session\":{\"ID\":\"0x1ed57a\",\"PID\":1529,\"name\":\"MyApp\",\"type\":\"Fig\"}, \"details\":null }\r\nSep 19 21:38:43 GB-iPhoneX mediaserverd(AudioToolbox)[491] <Notice>: 105: { \"action\":\"client_died\", \"session\":{\"ID\":\"0x1ed57b\",\"PID\":1529,\"name\":\"MyApp\"}, \"details\":null }\r\nSep 19 21:38:43 GB-iPhoneX ReportCrash[1545] <Notice>: Formulating report for corpse[1529] MyApp\r\nSep 19 21:38:43 GB-iPhoneX ReportCrash(CrashReporterSupport)[1545] <Notice>: Process:             MyApp [1529]\r\nPath:                /private/var/containers/Bundle/Application/8817982C-F11D-4F2C-A44C-2A042427A473/MyApp.app/MyApp\r\n6   MyApp                     \t0x0000000104d51994 0x104a5c000 + 3103124\r\n5   MyApp                     \t0x0000000104b940cc 0x104a5c000 + 1278156\r\n6   MyApp                     \t0x0000000104b4e580 0x104a5c000 + 992640\r\n7   MyApp                     \t0x0000000104b4e7a4 0x104a5c000 + 993188\r\n8   MyApp                     \t0x0000000104a61b30 0x104a5c000 + 23344\r\n9   MyApp                     \t0x0000000104b63fcc 0x104a5c000 + 1081292\r\n10  MyApp                     \t0x0000000104a88810 0x104a5c000 + 182288\r\n11  MyApp                     \t0x0000000104a86e68 0x104a5c000 + 175720\r\n5   MyApp                     \t0x0000000104b940cc 0x104a5c000 + 1278156\r\n6   MyApp                     \t0x0000000104a8d8a0 0x104a5c000 + 202912\r\nSep 19 21:38:43 GB-iPhoneX assertiond[65] <Notice>: [MyApp:1529] Port death watcher fired.\r\nSep 19 21:38:43 GB-iPhoneX assertiond[65] <Notice>: Process exited: <BKProcess: 0x102f1dac0; MyApp; com.MyApp.MyApp; pid: 1529; agency: Application; visibility: none; task: none; hostpid: 55>\r\nSep 19 21:38:43 GB-iPhoneX assertiond[65] <Notice>: [MyApp:1529] Invalidating...\r\nSep 19 21:38:43 GB-iPhoneX assertiond[65] <Notice>: [MyApp:1529] Ignoring assertion remove, because we are terminated or pending termination\r\nSep 19 21:38:43 GB-iPhoneX assertiond[65] <Notice>: [MyApp:1529] Got exit context: <BKSProcessExitContext: 0x102d02bc0; reason: (none)>\r\nSep 19 21:38:43 GB-iPhoneX SpringBoard(FrontBoard)[55] <Notice>: <FBApplicationProcess: 0x113a037f0; MyApp (com.MyApp.MyApp); pid: 1529> assertiond says the process actually exited with context: <BKSProcessExitContext: 0x282f83fa0; reason: (none)>\r\nSep 19 21:38:43 GB-iPhoneX SpringBoard(FrontBoard)[55] <Notice>: <FBApplicationProcess: 0x113a037f0; MyApp (com.MyApp.MyApp); pid: 1529> exited.\r\nSep 19 21:38:43 GB-iPhoneX SpringBoard(FrontBoard)[55] <Notice>: Removing: <FBApplicationProcess: 0x113a037f0; MyApp (com.MyApp.MyApp); pid: -1>\r\nSep 19 21:38:43 GB-iPhoneX SpringBoard[55] <Notice>: Process exited: <FBApplicationProcess: 0x113a037f0; MyApp (com.MyApp.MyApp); pid: -1> -> <FBApplicationProcessExitContext: 0x2823dd740; exitReason: (none); terminationReason: (none)> {\r\nSep 19 21:38:43 GB-iPhoneX assertiond[65] <Notice>: [MyApp:1529] Terminating because the job-submitter has disconnected.\r\nSep 19 21:38:43 GB-iPhoneX assertiond[65] <Notice>: [MyApp:1529] Deleted launchd job with label: UIKitApplication:com.MyApp.MyApp[0xf015][65]\r\nSep 19 21:38:43 GB-iPhoneX assertiond[65] <Notice>: [MyApp:1529] Invalidation complete.\r\nSep 19 21:38:43 GB-iPhoneX assertiond[65] <Notice>: [MyApp:1529] Removing client: <BKProcessInfoServerClient: 0x102828ed0; pid: 55>\r\nSep 19 21:38:43 GB-iPhoneX assertiond[65] <Notice>: [MyApp:1529] No clients remain.\r\n```",
					"updateAuthor": {
						"name": "miniman42",
						"key": "miniman42",
						"displayName": "Greg",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-19T20:44:23.000+0000",
					"updated": "2018-09-19T20:44:23.000+0000"
				},
				{
					"id": "441822",
					"author": {
						"name": "nickkemp",
						"key": "nickkemp",
						"displayName": "Nick Kemp",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"body": "Using instruments with a patched SDK with the fix: I can see a leak from our use of setInterval. Leak stops after clearInterval.",
					"updateAuthor": {
						"name": "nickkemp",
						"key": "nickkemp",
						"displayName": "Nick Kemp",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"created": "2018-09-19T22:27:27.000+0000",
					"updated": "2018-09-19T22:27:27.000+0000"
				},
				{
					"id": "441846",
					"author": {
						"name": "o.gudyno",
						"key": "o.gudyno",
						"displayName": "Oleg Gudyno",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hi guys!\r\n\r\nOur team faced the same issues right before application launch in production. It freezes or crashes frequently without specific steps to reproduce. Setting preference to YES in KrollTimer.m unfortunately was not helpful - seems application did not freeze but crashes much frequently (in some cases it is related to TI.Database). \r\nCould you please tell do you have any updates regarding these issues and when we can expect SDK update?\r\n\r\nThanks in advance!",
					"updateAuthor": {
						"name": "o.gudyno",
						"key": "o.gudyno",
						"displayName": "Oleg Gudyno",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-20T13:57:14.000+0000",
					"updated": "2018-09-20T13:57:14.000+0000"
				},
				{
					"id": "441863",
					"author": {
						"name": "kosso",
						"key": "kosso",
						"displayName": "kosso",
						"active": true,
						"timeZone": "Europe/London"
					},
					"body": "Regarding the possibility of setInterval and setTimeout being the culprit, I've been running this simple test app.js :\r\n\r\n[Gist Test app.js for TIMOB-26391|https://gist.github.com/kosso/540fdb1f24dc44152d9e6588ee57088f]\r\n\r\nNote:  when the app is put to the background, the setInterval pauses until the app is resumed. (Is that expected behaviour?) \r\n\r\nHowever: interestingly, if I register a background service script (even an empty js file!) when the app pauses, the intervals and timeouts all work as normal while the app is in the background. \r\n\r\nUpdate: In the background script, if I also add another setInterval and setTimeout similar to the ones in app.js, even though I'm stopping and unregistering the background script when the app resumes, the background setInterval and setTimeouts are still firing and logging to the console. So they're not being cleared. \r\n\r\nAnd if I then go to the background again, the intervals and timeout are being duplicated. \r\n\r\nSomething is certainly wrong there. \r\n\r\nUpdate2: The the invervals running in the background service do actually stop after 180 seconds, after the `assertiond` process sends \"Sending background permission expiration warning!\" to the log. \r\n",
					"updateAuthor": {
						"name": "kosso",
						"key": "kosso",
						"displayName": "kosso",
						"active": true,
						"timeZone": "Europe/London"
					},
					"created": "2018-09-20T19:37:23.000+0000",
					"updated": "2018-09-20T21:41:39.000+0000"
				},
				{
					"id": "441870",
					"author": {
						"name": "Nirmalkumar_Patel",
						"key": "nirmalkumar_patel",
						"displayName": "Nirmal",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "Similar observation from our production apps.\r\nRandom crashes in the initial sync during launching the app which is all API calls and persisting the received responses into SQLite DB.\r\n\r\nNo use of setInterval in our codebase.",
					"updateAuthor": {
						"name": "Nirmalkumar_Patel",
						"key": "nirmalkumar_patel",
						"displayName": "Nirmal",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2018-09-21T05:54:02.000+0000",
					"updated": "2018-09-21T05:54:02.000+0000"
				},
				{
					"id": "441886",
					"author": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hey @Greg thanks for your input. I think this makes a lot of sense since some of my clients are complaining that the app is crashing much more often then before and I knew it was a side effect of keeping the run-on-main-thread FALSE. So the app is actually \"freezing\" but because the UI is running on a different thread, we can not notice the \"freeze\". Than like you've said, it will crash after ~180 seconds.\r\n@kosso, I'm trying your test cases but they are not freezing on iOS 12 =/ Any other idea anyone?",
					"updateAuthor": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-21T10:25:13.000+0000",
					"updated": "2018-09-21T10:25:13.000+0000"
				},
				{
					"id": "441890",
					"author": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I don't know why they have put this issue as resolved, I am having the same issue and my App is getting crashed on one screen.. And its not resolved yet, I have tried all different options but I am not able to solve it out.\r\n\r\n",
					"updateAuthor": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-21T13:41:51.000+0000",
					"updated": "2018-09-21T13:41:51.000+0000"
				},
				{
					"id": "441895",
					"author": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "It's not as resolved, it says \"Unresolved\" and \"In Review\"....let's hope they find something. Fingers crossed",
					"updateAuthor": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-21T14:49:02.000+0000",
					"updated": "2018-09-21T14:49:02.000+0000"
				},
				{
					"id": "441896",
					"author": {
						"name": "kosso",
						"key": "kosso",
						"displayName": "kosso",
						"active": true,
						"timeZone": "Europe/London"
					},
					"body": "@Carlos  The test app was to try and see if the intervals were the cause.  I was trying to speed up crash testing.  But on the way, found some interesting phenomena regarding timers on background services.  (But since the timers alone don't actually create any 'audio', 'fetch', 'location', etc. actions, the system will kill the background tasks after 180 seconds. \r\n\r\nI still get random freezes in my apps, as described. But sometimes it can be after an hour. Sometimes after running for 12 hours. \r\n\r\nOne thing I did notice today, after testing an app overnight, is that I added the fix for Ti.App events from TIMOB-26369  and today I saw my app actually react to a 'memorywarning' event. The app did not crash, but an alert (which I had programmed in the listener) did show up. \r\n\r\nI also spent all night re-writing some of the functionality my app needs to do on the network in to a custom native module using GCD for the tasks. This has dramatically improved performance of certain tasks (eg: lazy-loading 200+ row tableViews with remote/cached images.) But I don't think it's 100% related to this issue. \r\n\r\nAlso, a couple of people have mentioned SQLite being a potential culprit.  My app does a lot of regular SQLite work for logging etc. on a very regular basis, every 5 minutes or so, and also each few hours to generate JSON from it and POST to our servers. This all seems to have been working fine. \r\n\r\nThe 'KrollTimer.m' YES/NO fix and run thread setting doesn't seem to have made much difference.  ",
					"updateAuthor": {
						"name": "kosso",
						"key": "kosso",
						"displayName": "kosso",
						"active": true,
						"timeZone": "Europe/London"
					},
					"created": "2018-09-21T15:03:33.000+0000",
					"updated": "2018-09-21T15:42:14.000+0000"
				},
				{
					"id": "441909",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Quick update: We are still investigating this ticket and are finally able to reproduce the issue. While doing that, we also pinpointed it down to calls with Ti.Network.HTTPClient that fire a callback which causes the crash (only when using main-thread as known already). \r\n\r\nFor an insight: [This|https://github.com/appcelerator/titanium_mobile/blob/master/iphone/Classes/KrollObject.m#L1077] is where it crashes exactly - the kroll- and main-thread related changes can also be seen in there. We are actively working on a fix right now and will keep this ticket updated. \r\n\r\nTo keep the ticket chronic clean, please prevent posts like \"same here\" and follow this ticket instead. Thank you!",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-21T22:05:41.000+0000",
					"updated": "2018-09-21T22:05:41.000+0000"
				},
				{
					"id": "441910",
					"author": {
						"name": "darknos",
						"key": "darknos",
						"displayName": "Sergey Nosenko",
						"active": true,
						"timeZone": "Europe/Helsinki"
					},
					"body": "This is not \"the same\" post. We have an application with offline mode (but with ti.googlemap module with prechased maps). it works without any HTTPClient calls but it freeze each 2-3 time when window with googlemap is opened.\r\n\r\nUPDATE: I added couple of \"ENSURE_UI_THREAD\" to ti.googlemap and we published new version with run-on-main-thread: false. Now it works so we can wait for fix. \r\n\r\nUnfortunately, I can't share the app. :(\r\n\r\nGood luck with investigation and I'm ready to help with testing - contact me as @darknos at ti-slack if need.",
					"updateAuthor": {
						"name": "darknos",
						"key": "darknos",
						"displayName": "Sergey Nosenko",
						"active": true,
						"timeZone": "Europe/Helsinki"
					},
					"created": "2018-09-21T23:19:20.000+0000",
					"updated": "2018-09-21T23:24:03.000+0000"
				},
				{
					"id": "441911",
					"author": {
						"name": "zettageek",
						"key": "zettageek",
						"displayName": "Josh Lambert",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "Greetings,\r\n\r\nI have been able to successfully work-around this bug by doing the following things:\r\n- Change my background task spawned inside of index.js from using setInterval to using setTimeout+Recursion to keep running.\r\n- Change my SDK from the GA release to \"*7.4.1.v20180920040600*\".\r\n\r\nsetInterval appears to be the problem for me. By implementing the two things above, I'm running almost 100% stable now on iOS12 from my testing so far. I am able to leave `run-on-main-thread` enabled in this configuration, meaning Hyperloop still works for me.",
					"updateAuthor": {
						"name": "zettageek",
						"key": "zettageek",
						"displayName": "Josh Lambert",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2018-09-22T03:18:17.000+0000",
					"updated": "2018-09-22T03:18:17.000+0000"
				},
				{
					"id": "441953",
					"author": {
						"name": "kosso",
						"key": "kosso",
						"displayName": "kosso",
						"active": true,
						"timeZone": "Europe/London"
					},
					"body": "@Josh. I'm currently looking at forking and updating a native timer module to replace (or provide some parity to) setInterval and setTimeout here> https://github.com/kosso/ti.mely\r\n\r\nHaving tried the run-on-main-thread options and other possible fixes above, I've still had an app lock up. \r\n\r\nSometimes, it has locked up around a time in my app 'near' where I make 'heavy' use of setInterval (to crossfade two audio players). Sometimes the lockup happens after a couple of hours. Sometimes, many more. But often around the same point in my app's processes where setInterval is employed.\r\n \r\n\r\n",
					"updateAuthor": {
						"name": "kosso",
						"key": "kosso",
						"displayName": "kosso",
						"active": true,
						"timeZone": "Europe/London"
					},
					"created": "2018-09-24T10:29:27.000+0000",
					"updated": "2018-09-24T10:29:40.000+0000"
				},
				{
					"id": "441959",
					"author": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "@Josh this didn't fix my app. Doesn't seem to be something in one place like HTTP or interval, maybe a bunch of things combined. My app also freezes when the phone is on Airplane mode =/\r\n@kosso nice work with these native intervals/timeout! Hope you can progress on that!\r\n(why JIRA's user mention tool is so useless like this?)",
					"updateAuthor": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-24T11:56:20.000+0000",
					"updated": "2018-09-24T11:56:49.000+0000"
				},
				{
					"id": "441962",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Quick update: We investigated this further over the weekend could get a successful result if the following flag is set in the <ios> section o the tiapp.xml:\r\n{code:xml}\r\n<use-jscore-framework>false</use-jscore-framework>\r\n{code}\r\nThe JSCore framework can for example be used to debug apps through Safari. While we still fixing the cause of this issue, using the above flag will fix it for now. Thanks!",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-24T12:45:15.000+0000",
					"updated": "2018-09-24T12:45:15.000+0000"
				},
				{
					"id": "441963",
					"author": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Awesome! Gonna test this and let you know @Hans! Do you know when use-jscore-framework started to be supported by Titanium?",
					"updateAuthor": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-24T12:59:06.000+0000",
					"updated": "2018-09-24T12:59:06.000+0000"
				},
				{
					"id": "441964",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Supported since SDK 5, made default in 7.0.0+ (which also explains why 6.3.0 worked and 7.0.0 not). The underlaying issue is about GC'ing objects on the low-level side of the SDK. Keeping this thread updated.",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-24T13:01:43.000+0000",
					"updated": "2018-09-24T13:01:43.000+0000"
				},
				{
					"id": "441966",
					"author": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Exactly! That's why I've just asked...and because I just found this: \"With Titanium SDK 6.x, developers must add a tag to enable the iOS debugger in order to use Safari (or iOS-webkit-debug-proxy). With SDK 7.x and later, this value is assumed to be true unless you explicitly add the tag with false as the value.\"\r\nTesting it here and let you know right away",
					"updateAuthor": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-24T13:07:44.000+0000",
					"updated": "2018-09-24T13:07:44.000+0000"
				},
				{
					"id": "441967",
					"author": {
						"name": "kosso",
						"key": "kosso",
						"displayName": "kosso",
						"active": true,
						"timeZone": "Europe/London"
					},
					"body": "@Carlos (and anyone else interested to try it) I have updated my fork of the 'ti.mely' module to include setInterval and setTimeout methods with the same structure and callbacks as the 'native' JavaScript functions. \r\n\r\nhttps://github.com/kosso/ti.mely  (Now with iOS and Android included)\r\n\r\nI'm thinking that maybe a native solution for timers might be a safer approach? \r\n",
					"updateAuthor": {
						"name": "kosso",
						"key": "kosso",
						"displayName": "kosso",
						"active": true,
						"timeZone": "Europe/London"
					},
					"created": "2018-09-24T13:15:01.000+0000",
					"updated": "2018-09-24T15:04:16.000+0000"
				},
				{
					"id": "441977",
					"author": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "Some more info... we have one app that uses setInterval to retrieve remote data periodically and it freezes a lot, but after setting run-on-main-thread to false, it seems to work fine.  We can do this because we do not use Hyperloop in this app.  However in one of our client's apps, we use Hyperloop so we cannot do this.  Our client's app doesn't use setInterval, and it freezes up by just making a simple network call (like logging in) and then updating the ui.  So while setTimeout and setInterval may cause this issue to happen more often, it doesn't seem to be the root cause - at least in our case.  Thanks!",
					"updateAuthor": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2018-09-24T15:15:06.000+0000",
					"updated": "2018-09-24T15:15:06.000+0000"
				},
				{
					"id": "441978",
					"author": {
						"name": "topener",
						"key": "topener",
						"displayName": "Rene Pot",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~btknorr]\r\nDid you also test with the recommended property by [~hknoechel] above?\r\n\r\n{code:xml}\r\n<use-jscore-framework>false</use-jscore-framework>\r\n{code}",
					"updateAuthor": {
						"name": "topener",
						"key": "topener",
						"displayName": "Rene Pot",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-24T15:18:48.000+0000",
					"updated": "2018-09-24T15:18:48.000+0000"
				},
				{
					"id": "441979",
					"author": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Great add @Brian! Thanks for sharing.\r\nJust so you know, I can confirm that setting \"use-jscore-framework\" to false on tiapp.xml fixed the issue on iOS 12 with no other side effects. Tested on both iOS 12 and 11 and with Titanium SDK 7.1.0 and 7.4.0, the app never freezes again.\r\nThanks everyone!",
					"updateAuthor": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-24T15:20:05.000+0000",
					"updated": "2018-09-24T15:20:05.000+0000"
				},
				{
					"id": "441980",
					"author": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "We are starting to test with this set to false right now...I will let you know.  Thanks!",
					"updateAuthor": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2018-09-24T15:23:42.000+0000",
					"updated": "2018-09-24T15:23:42.000+0000"
				},
				{
					"id": "441982",
					"author": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "When setting this to false the app immediately crashes on startup and we get a hyperloop warning that we should set use-jscore-framework to true.  So this unfortunately is not a fix for hyperloop apps.",
					"updateAuthor": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2018-09-24T15:39:00.000+0000",
					"updated": "2018-09-24T15:39:00.000+0000"
				},
				{
					"id": "441983",
					"author": {
						"name": "inzori",
						"key": "inzori",
						"displayName": "Fabian Martinez",
						"active": true,
						"timeZone": "America/Montevideo"
					},
					"body": "*EDIT Sep 25*:\r\nsetting the property {code}<use-jscore-framework>false</use-jscore-framework>{code} seems to work fine! The app is not crashing now.\r\nMy problem after setting this property was that ES6 was not supported anymore.\r\n---------------------------------------------------------------------\r\n*ORIGINAL POST:*\r\nI'm not experiencing freezings but crashes with iOS 12 (iPhoneX device) and Ti SDK 7.4.0.GA.\r\nEverything was smooth on iOS 11 and Ti SDK 7.3.1.GA.\r\nChanging this property flag {code}<use-jscore-framework>false</use-jscore-framework>{code}  to false didn't make a difference.\r\n\r\nThis app uses joli.js library as adapter for the models. I could isolate the crash to always the same line, but it's totally random, sometimes I can add like 20 items to a listview and to the model and it works fine, sometimes it crashes after 3 or 9... no special conditions are met for the crash.\r\n\r\nThis line {code}var db = Titanium.Database.open('dbname');{code} returns a database object almost all of the times, so {code}db.execute('PRAGMA read_uncommitted=true');{code} executes fine.\r\n\r\nBut sometimes it just returns an empty object or \"undefined\", so the execute fails and crashes the app.\r\n\r\nI don't know if this is related or helps, but I hope it does!\r\n\r\nThanks",
					"updateAuthor": {
						"name": "inzori",
						"key": "inzori",
						"displayName": "Fabian Martinez",
						"active": true,
						"timeZone": "America/Montevideo"
					},
					"created": "2018-09-24T16:00:00.000+0000",
					"updated": "2018-09-25T16:01:08.000+0000"
				},
				{
					"id": "441998",
					"author": {
						"name": "cthomas",
						"key": "cthomas",
						"displayName": "Christy Thomas",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"updateAuthor": {
						"name": "cthomas",
						"key": "cthomas",
						"displayName": "Christy Thomas",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-24T18:51:50.000+0000",
					"updated": "2018-09-24T18:51:50.000+0000"
				},
				{
					"id": "441999",
					"author": {
						"name": "zettageek",
						"key": "zettageek",
						"displayName": "Josh Lambert",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "Greetings,\r\n\r\nPer the above suggestion from *@Hans* and *@Rene*, I added the following to the *<ios>* tag inside of *TiApp.XML*:\r\n\r\n{{<use-jscore-framework>false</use-jscore-framework>}}\r\n\r\nDoing this causes my app to crash immediately on boot.\r\n\r\n* We use Hyperloop\r\n* We have *run-on-main-thread* enabled.\r\n* We use Localytics via Hyperloop and this module: https://github.com/centrevilletech/localytics-hyperloop\r\n\r\nWhen the crash happens, nothing gets sent to the logs, so I'm unsure what's happening here.",
					"updateAuthor": {
						"name": "zettageek",
						"key": "zettageek",
						"displayName": "Josh Lambert",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2018-09-24T18:55:55.000+0000",
					"updated": "2018-09-24T18:56:34.000+0000"
				},
				{
					"id": "442000",
					"author": {
						"name": "ewieber",
						"key": "ewieber",
						"displayName": "Eric Wieber",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "To those who are updating their tiapp.xml with the jscore tag, but encounter a crash on launch:\r\nIf you use the com.appcelerator.apm module and it is version 3.0.0 or earlier, it is unsupported on iOS 12 and can cause the crashes you are seeing. Please update to 3.1.0 or higher.",
					"updateAuthor": {
						"name": "ewieber",
						"key": "ewieber",
						"displayName": "Eric Wieber",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-24T19:03:26.000+0000",
					"updated": "2018-09-24T19:03:26.000+0000"
				},
				{
					"id": "442001",
					"author": {
						"name": "kosso",
						"key": "kosso",
						"displayName": "kosso",
						"active": true,
						"timeZone": "Europe/London"
					},
					"body": "Just FWIW: My app has been running OK (so far) for about 5 hours or so on two devices:\r\n- iPad 5thGen - iOS 12\r\n- iPad2 - iOS 9.3.5  (!) \r\n \r\nBuilt with Ti SDK 7.3.1.GA and XCode9 installed. (I have yet to make the Xcode 10 leap)\r\nThe app includes many custom modules: a custom audio player x 2, audio file decryption, media file inspection, mass download batch management, a new native timer for audio crossfades and other duties, frequent SQLite usage and various secure API calls via Ti.Network.HTTPClient. \r\n\r\nNote: it does not use Hyperloop. And it is a 'classic' app. Not alloy.\r\n\r\nI'll be keeping an eye on them all night, but they're running fine so far with 'run-on-main-thread' set to true and 'use-jscore-framework' set to false. \r\n\r\n",
					"updateAuthor": {
						"name": "kosso",
						"key": "kosso",
						"displayName": "kosso",
						"active": true,
						"timeZone": "Europe/London"
					},
					"created": "2018-09-24T19:04:38.000+0000",
					"updated": "2018-09-24T19:08:17.000+0000"
				},
				{
					"id": "442006",
					"author": {
						"name": "zettageek",
						"key": "zettageek",
						"displayName": "Josh Lambert",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "@Eric Wieber I'm on 3.1.2 of com.appcelerator.apm and still get the crash. Doesn't appear to fix it for me.",
					"updateAuthor": {
						"name": "zettageek",
						"key": "zettageek",
						"displayName": "Josh Lambert",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2018-09-24T20:21:48.000+0000",
					"updated": "2018-09-24T20:21:48.000+0000"
				},
				{
					"id": "442009",
					"author": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "We are also on 3.1.2 of apm and get the crash on startup with run-on-main-thread true and use-jscore-framework false.  Again we use Hyperloop in this app...specifically for card.io",
					"updateAuthor": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2018-09-24T21:04:57.000+0000",
					"updated": "2018-09-24T21:04:57.000+0000"
				},
				{
					"id": "442027",
					"author": {
						"name": "kosso",
						"key": "kosso",
						"displayName": "kosso",
						"active": true,
						"timeZone": "Europe/London"
					},
					"body": "Just to update on my extended tests: \r\niPad2 stopped overnight but was still responsive, though no memorywarning alert or anything). \r\niPad5th just crashed and closed after running for over 12 hours. (No ability to get logs until I update to XCode 10 - and I didn't have the console open at the time).  \r\nAlso an 11.4 iPhone Simulator also just crashed. The crashed thread log has multiple mentions of com.apple.JavascriptCore despite it being disabled in tiapp.xml. \r\n\r\nHere's the crashed thread: \r\n\r\n{code}\r\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_BREAKPOINT (SIGTRAP)\r\nException Codes:       0x0000000000000002, 0x0000000000000000\r\nException Note:        EXC_CORPSE_NOTIFY\r\n\r\nTermination Signal:    Trace/BPT trap: 5\r\nTermination Reason:    Namespace SIGNAL, Code 0x5\r\nTerminating Process:   exc handler [0]\r\n\r\nApplication Specific Information:\r\nCoreSimulator 518.22 - Device: iPhone 6 - Runtime: iOS 11.4 (15F79) - DeviceType: iPhone 6\r\n\r\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\r\n0   com.apple.JavaScriptCore        0x00000001169bf1a3 bool JSC::Structure::checkOffsetConsistency<JSC::Structure::checkOffsetConsistency() const::'lambda'()>(JSC::PropertyTable*, JSC::Structure::checkOffsetConsistency() const::'lambda'() const&) const::'lambda'(char const*)::operator()(char const*) const + 259\r\n1   com.apple.JavaScriptCore        0x00000001169bed98 JSC::Structure::checkConsistency() + 200\r\n2   com.apple.JavaScriptCore        0x000000011720b1fd JSC::Structure::add(JSC::VM&, JSC::PropertyName, unsigned int) + 125\r\n3   com.apple.JavaScriptCore        0x000000011720aeaa JSC::Structure::addNewPropertyTransition(JSC::VM&, JSC::Structure*, JSC::PropertyName, unsigned int, int&, JSC::PutPropertySlot::Context, JSC::DeferredStructureTransitionWatchpointFire*) + 442\r\n4   com.apple.JavaScriptCore        0x00000001169be537 bool JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>(JSC::VM&, JSC::PropertyName, JSC::JSValue, unsigned int, JSC::PutPropertySlot&) + 1719\r\n5   com.apple.JavaScriptCore        0x000000011712b1ec JSC::putDescriptor(JSC::ExecState*, JSC::JSObject*, JSC::PropertyName, JSC::PropertyDescriptor const&, unsigned int, JSC::PropertyDescriptor const&) + 524\r\n6   com.apple.JavaScriptCore        0x000000011712a4a1 JSC::validateAndApplyPropertyDescriptor(JSC::ExecState*, JSC::JSObject*, JSC::PropertyName, bool, JSC::PropertyDescriptor const&, bool, JSC::PropertyDescriptor const&, bool) + 577\r\n7   com.apple.JavaScriptCore        0x000000011710f635 JSC::JSObject::defineOwnProperty(JSC::JSObject*, JSC::ExecState*, JSC::PropertyName, JSC::PropertyDescriptor const&, bool) + 421\r\n8   com.apple.JavaScriptCore        0x00000001169e6c25 JSObjectSetProperty + 261\r\n9   com.amazingmedia.instore1       0x000000010df3aa0b -[KrollObject noteObject:forTiString:context:] + 267 (KrollObject.m:1177)\r\n10  com.amazingmedia.instore1       0x000000010df3643e KrollGetProperty + 1550 (KrollObject.m:218)\r\n11  com.apple.JavaScriptCore        0x00000001169db26d JSC::JSCallbackObject<JSC::JSDestructibleObject>::getOwnPropertySlot(JSC::JSObject*, JSC::ExecState*, JSC::PropertyName, JSC::PropertySlot&) + 461\r\n12  com.apple.JavaScriptCore        0x0000000116f03a58 llint_slow_path_get_by_id + 5384\r\n13  com.apple.JavaScriptCore        0x000000011699cb5f llint_entry + 12637\r\n14  com.apple.JavaScriptCore        0x000000011699981a vmEntryToJavaScript + 304\r\n15  com.apple.JavaScriptCore        0x0000000116e7ad43 JSC::JITCode::execute(JSC::VM*, JSC::ProtoCallFrame*) + 147\r\n16  com.apple.JavaScriptCore        0x0000000116e3777b JSC::Interpreter::executeCall(JSC::ExecState*, JSC::JSObject*, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) + 523\r\n17  com.apple.JavaScriptCore        0x000000011703f6d1 JSC::profiledCall(JSC::ExecState*, JSC::ProfilingReason, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) + 177\r\n18  com.apple.JavaScriptCore        0x00000001169e8040 JSObjectCallAsFunction + 496\r\n19  com.amazingmedia.instore1       0x000000010e18a5e6 __TiBindingEventProcess_block_invoke + 86 (TiBindingEvent.m:269)\r\n20  com.amazingmedia.instore1       0x000000010e03855d TiThreadPerformOnMainThread + 77 (TiBase.m:317)\r\n21  com.amazingmedia.instore1       0x000000010e18a48e TiBindingEventProcess + 1054 (TiBindingEvent.m:265)\r\n22  com.amazingmedia.instore1       0x000000010e18a778 -[TiBindingCallbackInvoke invoke:] + 56 (TiBindingRunLoop.m:51)\r\n23  com.amazingmedia.instore1       0x000000010df2d41f -[KrollContext invoke:] + 159 (KrollContext.m:990)\r\n24  com.amazingmedia.instore1       0x000000010df2d4fa __24-[KrollContext enqueue:]_block_invoke + 42 (KrollContext.m:1016)\r\n25  libdispatch.dylib               0x000000011adc36cb _dispatch_call_block_and_release + 12\r\n26  libdispatch.dylib               0x000000011adc4709 _dispatch_client_callout + 8\r\n27  libdispatch.dylib               0x000000011adce708 _dispatch_main_queue_callback_4CF + 1279\r\n28  com.apple.CoreFoundation        0x0000000116431c99 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ + 9\r\n29  com.apple.CoreFoundation        0x00000001163f5ea6 __CFRunLoopRun + 2342\r\n30  com.apple.CoreFoundation        0x00000001163f530b CFRunLoopRunSpecific + 635\r\n31  com.apple.GraphicsServices      0x000000011929ca73 GSEventRunModal + 62\r\n32  com.apple.UIKit                 0x0000000110d6e057 UIApplicationMain + 159\r\n33  com.amazingmedia.instore1       0x000000010df12f34 main + 100 (main.m:30)\r\n34  libdyld.dylib                   0x000000011ae39955 start + 1\r\n{code}\r\n\r\nhope this helps. \r\n\r\nAdditionally, in the Console app I noticed the most recent logs after the crash (which I cannot see) contained logs of the `videosubscriptionsd` process in loop, complaining about \"Unable to find framework using path: /System/Library/Frameworks/VideoSubscriberAccount.framework\".  Which is weird, since it's on the simulator. I have a feeling this is related to the Apple News app background refreshes. \r\n\r\nAlso, on the iPad5th which crashed and closed, I noticed the icons at the bottom of the screen changing a few times, more than usual, which is the 'handoff' feature trying to do things.  No idea if this is related. \r\n\r\n",
					"updateAuthor": {
						"name": "kosso",
						"key": "kosso",
						"displayName": "kosso",
						"active": true,
						"timeZone": "Europe/London"
					},
					"created": "2018-09-25T12:21:16.000+0000",
					"updated": "2018-09-25T13:25:45.000+0000"
				},
				{
					"id": "442032",
					"author": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hi everyone,\r\nindeed, with the use-jscore-framework setting set to false, the app never freezes but started to crash more often. This is becoming very stressing =/",
					"updateAuthor": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-25T14:35:26.000+0000",
					"updated": "2018-09-25T14:35:26.000+0000"
				},
				{
					"id": "442033",
					"author": {
						"name": "designbymind",
						"key": "designbymind",
						"displayName": "Jason David Miller",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hey Hey,\r\n\r\nI also wanted to chime in just to note that my latest app crashes on startup (every time), _both_ device & simulator with:\r\n{code:xml}\r\n<use-jscore-framework>false</use-jscore-framework>\r\n{code}\r\n- run-on-main-thread: true\r\n- works great with jscore enabled (however, there are infrequent crashes & restarts when bringing the app back into foreground)\r\n\r\nAppc Stack:\r\n· *TiSDK:* 7.4.0.GA\r\n· *Hyperloop:* 3.1.3 (enabled and in use with CocoaPods)\r\n· *Alloy:* 1.13.2\r\n· *iOS:* 12.0\r\n· *Xcode:* 10.0\r\n· *macOS:* 10.14 (Mojave)\r\n\r\n— Hopefully this is of some help =]\r\n\r\nThanks for all of the hard work everyone!",
					"updateAuthor": {
						"name": "designbymind",
						"key": "designbymind",
						"displayName": "Jason David Miller",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-25T14:48:54.000+0000",
					"updated": "2018-09-25T14:48:54.000+0000"
				},
				{
					"id": "442038",
					"author": {
						"name": "jvandijk",
						"key": "jvandijk",
						"displayName": "Jeroen van Dijk",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"body": "Another downside of reverting the use of jscore framework to 'false' is the fact that you could run into some issues in regards to the ECMA script support you got when using the 'true' mode. Some of the Javascript I wrote cannot be interpreted anymore when setting to false.",
					"updateAuthor": {
						"name": "jvandijk",
						"key": "jvandijk",
						"displayName": "Jeroen van Dijk",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"created": "2018-09-25T20:26:25.000+0000",
					"updated": "2018-09-25T20:26:25.000+0000"
				},
				{
					"id": "442040",
					"author": {
						"name": "mdelmarter",
						"key": "mdelmarter",
						"displayName": "Matthew Delmarter",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"body": "After spending the last few days trying to figure out what is going on, and reviewing everyones comments and suggestions, the following things are clear to me (nothing that hasn't been said before, I just wanted to summarise my thoughts):\r\n\r\n* There is something fundamentally different about how iOS 12 works, and it is not behaving well with Ti 7.4.0/Xcode 10\r\n* The issues are not easily reproducible\r\n* The issue is not isolated to using jscore (or not)\r\n* The issue is not isolated to using main thread (or not)\r\n* Some users are experiencing the app \"hanging\", others \"crashing\"\r\n* There are frequent references to setTimeout / setInterval - there must be something in that\r\n\r\nFor my experience, I do not use Alloy - all my apps are classic.\r\n\r\nThe issues for me are random, but frequent. I do not really have apps \"hanging\" - but I do see my apps \"crashing\". Sometimes on startup, sometimes at other places in the app flow. Some patterns have emerged:\r\n\r\n* There is definitely something odd going on with setTimeout. Don't ask my what as I cannot get a clear picture, but a percentage of the crashes do seem to happen when there are timeouts involved. \r\n* I use JSON file stores a lot in my apps. Mainly because they have been so performant in all versions of iOS / Ti up till now. But there are definitely random issues related to loading files, parsing JSON and then the reverse - stringify and write file.\r\n\r\nI should mention that there were some reproducible crashes occurring related to memory usage. Using Instruments I managed to track them down and improve the code, and that has made a difference. This code worked fine on iOS 6-11, but all of a sudden an issue with iOS 12 - which lines up with the changes Apple said they were going to make around iOS 12 performance/memory usage I guess.\r\n\r\nBut stepping back from these memory issues I managed to address, I am left with these random crashes. Every time I think I have fixed it by changing the flow of logic in the code, or the use of timeouts etc, I come back later and test again, and \"crash\" again :(\r\n\r\nAnyway ... at this stage I am a bit lost on how to proceed. I know the team is working very hard on this. But I am hoping that there is more on the table than just \"disable jscore\"? Are there other recommendations I can try?\r\n\r\nOverall I guess I am wanting reassurance that I am not the only one having issues in the areas of code I have described.",
					"updateAuthor": {
						"name": "mdelmarter",
						"key": "mdelmarter",
						"displayName": "Matthew Delmarter",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"created": "2018-09-25T20:47:20.000+0000",
					"updated": "2018-09-25T20:49:29.000+0000"
				},
				{
					"id": "442045",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "[~ppancholi] Can you please share your app on my email id vsingh@axway.com. Please mention the steps to reproduce the same. As your app in crashing on a particular screen, so it may be we can create a smaller test case with that to debug. Thanks!",
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-26T07:57:05.000+0000",
					"updated": "2018-09-26T07:57:05.000+0000"
				},
				{
					"id": "442052",
					"author": {
						"name": "dieskim",
						"key": "dieskim",
						"displayName": "David van de Meer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I am also seeing my app crash at random times, I will try to find a reproducible case but at this stage its only happened once or twice on the simulator a few seconds after startup - with no logs\r\n\r\nrunning hyperloop and have added tag to disable jscore",
					"updateAuthor": {
						"name": "dieskim",
						"key": "dieskim",
						"displayName": "David van de Meer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-26T09:16:33.000+0000",
					"updated": "2018-09-26T09:17:08.000+0000"
				},
				{
					"id": "442053",
					"author": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "What is maybe slowing down our process is that we can't see any error or logs when the app crashes or freezes. Can we add some logs on the iOS SDK so we start receiving them?",
					"updateAuthor": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-26T09:44:50.000+0000",
					"updated": "2018-09-26T09:44:50.000+0000"
				},
				{
					"id": "442072",
					"author": {
						"name": "inzori",
						"key": "inzori",
						"displayName": "Fabian Martinez",
						"active": true,
						"timeZone": "America/Montevideo"
					},
					"body": "This is the crash log from my device. It doesn't crash if I add {code}<use-jscore-framework>false</use-jscore-framework>{code} under the ios tag in tiapp.xml.\r\n\r\n{code}\r\nIncident Identifier: 54E92F74-F794-4843-83BD-B584C4E67033\r\nCrashReporter Key:   baa84a1f39eac58e0e9713e3266d1c452fb3b628\r\nHardware Model:      iPhone10,3\r\nProcess:             DEV [4062]\r\nPath:                /private/var/containers/Bundle/Application/FEE803AB-7E72-4C93-A51A-CAD3E71DB0B4/DEV.app/DEV\r\nIdentifier:          \r\nVersion:             6.3.0 (6.3.0)\r\nCode Type:           ARM-64 (Native)\r\nRole:                Non UI\r\nParent Process:      launchd [1]\r\nCoalition:           [1912]\r\n\r\nDate/Time:           2018-09-26 12:17:25.0612 -0300\r\nLaunch Time:         2018-09-26 12:16:25.1686 -0300\r\nOS Version:          iPhone OS 12.0 (16A366)\r\nBaseband Version:    3.00.00\r\nReport Version:      104\r\n\r\nException Type:  EXC_BAD_ACCESS (SIGSEGV)\r\nException Subtype: KERN_INVALID_ADDRESS at 0x00000003274a19e8\r\nVM Region Info: 0x3274a19e8 is not in any region.  Bytes after previous region: 2269780457  \r\n      REGION TYPE                      START - END             [ VSIZE] PRT/MAX SHRMOD  REGION DETAIL\r\n      MALLOC_NANO            0000000280000000-00000002a0000000 [512.0M] rw-/rwx SM=PRV  \r\n--->  \r\n      UNUSED SPACE AT END\r\n\r\nTermination Signal: Segmentation fault: 11\r\nTermination Reason: Namespace SIGNAL, Code 0xb\r\nTerminating Process: exc handler [4062]\r\nTriggered by Thread:  0\r\n\r\nThread 0 name:  Dispatch queue: com.apple.main-thread\r\nThread 0 Crashed:\r\n0   JavaScriptCore                \t0x00000001c280827c JSC::LLInt::setUpCall+ 7848572 (JSC::ExecState*, JSC::Instruction*, JSC::CodeSpecializationKind, JSC::JSValue, JSC::LLIntCallLinkInfo*) + 292\r\n1   JavaScriptCore                \t0x00000001c28081a4 JSC::LLInt::setUpCall+ 7848356 (JSC::ExecState*, JSC::Instruction*, JSC::CodeSpecializationKind, JSC::JSValue, JSC::LLIntCallLinkInfo*) + 76\r\n2   JavaScriptCore                \t0x00000001c20f5120 llint_entry + 29952\r\n3   JavaScriptCore                \t0x00000001c20f54e0 llint_entry + 30912\r\n4   JavaScriptCore                \t0x00000001c20f50cc llint_entry + 29868\r\n5   JavaScriptCore                \t0x00000001c20f50cc llint_entry + 29868\r\n6   JavaScriptCore                \t0x00000001c20f50cc llint_entry + 29868\r\n7   JavaScriptCore                \t0x00000001c20f50cc llint_entry + 29868\r\n8   JavaScriptCore                \t0x00000001c20f50cc llint_entry + 29868\r\n9   JavaScriptCore                \t0x00000001c20f5134 llint_entry + 29972\r\n10  JavaScriptCore                \t0x00000001c20f5598 llint_entry + 31096\r\n11  JavaScriptCore                \t0x00000001c20f50cc llint_entry + 29868\r\n12  JavaScriptCore                \t0x00000001c20f50cc llint_entry + 29868\r\n13  JavaScriptCore                \t0x00000001c20f50cc llint_entry + 29868\r\n14  JavaScriptCore                \t0x00000001c20f5598 llint_entry + 31096\r\n15  JavaScriptCore                \t0x00000001c20f50cc llint_entry + 29868\r\n16  JavaScriptCore                \t0x00000001c20f5134 llint_entry + 29972\r\n17  JavaScriptCore                \t0x00000001c20f50cc llint_entry + 29868\r\n18  JavaScriptCore                \t0x00000001c20f50cc llint_entry + 29868\r\n19  JavaScriptCore                \t0x00000001c20f5134 llint_entry + 29972\r\n20  JavaScriptCore                \t0x00000001c20f5134 llint_entry + 29972\r\n21  JavaScriptCore                \t0x00000001c20f5134 llint_entry + 29972\r\n22  JavaScriptCore                \t0x00000001c20eda1c vmEntryToJavaScript + 300\r\n23  JavaScriptCore                \t0x00000001c27653f0 JSC::Interpreter::executeCall+ 7181296 (JSC::ExecState*, JSC::JSObject*, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) + 424\r\n24  JavaScriptCore                \t0x00000001c291c068 JSC::profiledCall+ 8978536 (JSC::ExecState*, JSC::ProfilingReason, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) + 172\r\n25  JavaScriptCore                \t0x00000001c2123284 JSObjectCallAsFunction + 368\r\n26  DEV                       \t\t0x0000000103056880 __TiBindingEventProcess_block_invoke + 1861760 (TiBindingEvent.m:269)\r\n27  DEV                       \t\t0x0000000102f71944 TiThreadPerformOnMainThread + 923972 (TiBase.m:317)\r\n28  DEV                       \t\t0x0000000103056744 TiBindingEventProcess + 1861444 (TiBindingEvent.m:265)\r\n29  DEV                       \t\t0x0000000103056a5c -[TiBindingCallbackInvoke invoke:] + 1862236 (TiBindingRunLoop.m:51)\r\n30  DEV                       \t\t0x0000000102eae398 -[KrollContext invoke:] + 123800 (KrollContext.m:990)\r\n31  DEV                       \t\t0x0000000102eae494 __24-[KrollContext enqueue:]_block_invoke + 124052 (KrollContext.m:1016)\r\n32  DEV                       \t\t0x0000000102f71944 TiThreadPerformOnMainThread + 923972 (TiBase.m:317)\r\n33  DEV                       \t\t0x0000000102eae454 -[KrollContext enqueue:] + 123988 (KrollContext.m:1019)\r\n34  DEV                       \t\t0x0000000103056ae0 TiBindingRunLoopEnqueue + 1862368 (TiBindingRunLoop.m:58)\r\n35  DEV                       \t\t0x0000000103055ff4 TiBindingEventFire + 1859572 (TiBindingEvent.m:181)\r\n36  DEV                       \t\t0x0000000102f4e500 -[TiProxy fireEvent:withObject:propagate:reportSuccess:errorCode:message:] + 779520 (TiProxy.m:909)\r\n37  DEV                       \t\t0x0000000102ed07c8 -[TiViewProxy fireEvent:withObject:propagate:reportSuccess:errorCode:message:] + 264136 (TiViewProxy.m:1807)\r\n38  DEV                       \t\t0x0000000102f4e1a8 -[TiProxy fireEvent:withObject:] + 778664 (TiProxy.m:855)\r\n39  DEV                       \t\t0x0000000103075ba8 -[TiUIListView fireClickForItemAtIndexPath:tableView:accessoryButtonTapped:] + 1989544 (TiUIListView.m:2245)\r\n40  DEV                       \t\t0x00000001030727fc -[TiUIListView tableView:didSelectRowAtIndexPath:] + 1976316 (TiUIListView.m:1828)\r\n41  UIKitCore                     \t0x00000001e7baa6f4 -[UITableView _selectRowAtIndexPath:animated:scrollPosition:notifyDelegate:] + 1348\r\n42  UIKitCore                     \t0x00000001e7baa958 -[UITableView _userSelectRowAtPendingSelectionIndexPath:] + 268\r\n43  UIKitCore                     \t0x00000001e76af190 _runAfterCACommitDeferredBlocks + 296\r\n44  UIKitCore                     \t0x00000001e769d1d0 _cleanUpAfterCAFlushAndRunDeferredBlocks + 384\r\n45  UIKitCore                     \t0x00000001e76cc508 _afterCACommitHandler + 132\r\n46  CoreFoundation                \t0x00000001bad7db94 __CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ + 32\r\n47  CoreFoundation                \t0x00000001bad78828 __CFRunLoopDoObservers + 412\r\n48  CoreFoundation                \t0x00000001bad78dc8 __CFRunLoopRun + 1264\r\n49  CoreFoundation                \t0x00000001bad785b8 CFRunLoopRunSpecific + 436\r\n50  GraphicsServices              \t0x00000001bcfec584 GSEventRunModal + 100\r\n51  UIKitCore                     \t0x00000001e76a3558 UIApplicationMain + 212\r\n52  DEV                       \t\t0x0000000102e989e4 main + 35300 (main.m:30)\r\n53  libdyld.dylib                 \t0x00000001ba838b94 start + 4\r\n{code}",
					"updateAuthor": {
						"name": "inzori",
						"key": "inzori",
						"displayName": "Fabian Martinez",
						"active": true,
						"timeZone": "America/Montevideo"
					},
					"created": "2018-09-26T15:24:46.000+0000",
					"updated": "2018-09-26T15:24:46.000+0000"
				},
				{
					"id": "442094",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "We finally isolated the issue and have an initial fix ready for you guys. Please check the SDK from the following PR and let us know if it works for you.\r\n\r\nPR: https://github.com/appcelerator/titanium_mobile/pull/10352",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-27T06:00:44.000+0000",
					"updated": "2018-09-27T06:00:44.000+0000"
				},
				{
					"id": "442099",
					"author": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Amazing! Testing it right now and can give you some feedback ASAP",
					"updateAuthor": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-27T08:15:40.000+0000",
					"updated": "2018-09-27T08:15:40.000+0000"
				},
				{
					"id": "442103",
					"author": {
						"name": "kosso",
						"key": "kosso",
						"displayName": "kosso",
						"active": true,
						"timeZone": "Europe/London"
					},
					"body": "Hi.Good news!\r\n\r\nCan you confirm which tiapp.xml settings we should be testing with for {code}use-jscore-framework{code}  and {code}run-on-main-thread{code}  \r\n\r\nthanks!",
					"updateAuthor": {
						"name": "kosso",
						"key": "kosso",
						"displayName": "kosso",
						"active": true,
						"timeZone": "Europe/London"
					},
					"created": "2018-09-27T09:21:46.000+0000",
					"updated": "2018-09-27T09:21:46.000+0000"
				},
				{
					"id": "442104",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "[~kosso] Any combination should work now. But default -\r\n\r\n<use-jscore-framework> true </use-jscore-framework >\r\n<run-on-main-thread> true </run-on-main-thread>\r\n\r\nshould be specially tested. Thanks!",
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-27T09:28:17.000+0000",
					"updated": "2018-09-27T09:28:17.000+0000"
				},
				{
					"id": "442105",
					"author": {
						"name": "dieskim",
						"key": "dieskim",
						"displayName": "David van de Meer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "@Vijay Singh - should we just patch the two files in our SDK as in the pull request or how do we get the correct SDK for testing? \r\n\r\nIn this PR: https://github.com/appcelerator/titanium_mobile/pull/10352",
					"updateAuthor": {
						"name": "dieskim",
						"key": "dieskim",
						"displayName": "David van de Meer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-27T09:30:41.000+0000",
					"updated": "2018-09-27T09:30:41.000+0000"
				},
				{
					"id": "442106",
					"author": {
						"name": "kosso",
						"key": "kosso",
						"displayName": "kosso",
						"active": true,
						"timeZone": "Europe/London"
					},
					"body": "That's is a good question. \r\nHow 'back-portable' is this fix?  \r\nWill it help earlier version of the SDK?  (eg: 7.3.1.GA) \r\n\r\nthanks! ",
					"updateAuthor": {
						"name": "kosso",
						"key": "kosso",
						"displayName": "kosso",
						"active": true,
						"timeZone": "Europe/London"
					},
					"created": "2018-09-27T09:37:22.000+0000",
					"updated": "2018-09-27T09:37:22.000+0000"
				},
				{
					"id": "442107",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "[~dieskim]\r\nPatching your sdk with this change is the best way to test now. This change will go in 7.4.1 SDK.\r\n",
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-27T09:42:00.000+0000",
					"updated": "2018-09-27T09:42:00.000+0000"
				},
				{
					"id": "442110",
					"author": {
						"name": "mdelmarter",
						"key": "mdelmarter",
						"displayName": "Matthew Delmarter",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"body": "Initial testing against 7.4.0.GA with the patch is looking very positive. No crashes yet!",
					"updateAuthor": {
						"name": "mdelmarter",
						"key": "mdelmarter",
						"displayName": "Matthew Delmarter",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"created": "2018-09-27T10:19:05.000+0000",
					"updated": "2018-09-27T10:19:05.000+0000"
				},
				{
					"id": "442112",
					"author": {
						"name": "mdelmarter",
						"key": "mdelmarter",
						"displayName": "Matthew Delmarter",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"body": "I can only imagine the effort that went into those 6 lines of code. Thanks so much team for your efforts.",
					"updateAuthor": {
						"name": "mdelmarter",
						"key": "mdelmarter",
						"displayName": "Matthew Delmarter",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"created": "2018-09-27T10:26:38.000+0000",
					"updated": "2018-09-27T10:26:38.000+0000"
				},
				{
					"id": "442117",
					"author": {
						"name": "TaylorThompson",
						"key": "taylorthompson",
						"displayName": "Taylor Thompson",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "How do I go about about getting the patched SDK? We're experiencing this same issue in all of our apps and it's put us in a broken state.",
					"updateAuthor": {
						"name": "TaylorThompson",
						"key": "taylorthompson",
						"displayName": "Taylor Thompson",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-27T13:02:19.000+0000",
					"updated": "2018-09-27T13:02:19.000+0000"
				},
				{
					"id": "442127",
					"author": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "How can I get 7.4.1.GA, When I try to install through appc ti sdk install with 7.4.1 it says 7.4.0 is the latest version",
					"updateAuthor": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-27T19:05:27.000+0000",
					"updated": "2018-09-27T19:05:27.000+0000"
				},
				{
					"id": "442128",
					"author": {
						"name": "jvandijk",
						"key": "jvandijk",
						"displayName": "Jeroen van Dijk",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"body": "Amazing job guys! Our app implementation feels rock solid again after patching the 7.2.1 SDK. Thank you so much for the effort!",
					"updateAuthor": {
						"name": "jvandijk",
						"key": "jvandijk",
						"displayName": "Jeroen van Dijk",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"created": "2018-09-27T19:41:37.000+0000",
					"updated": "2018-09-27T19:41:37.000+0000"
				},
				{
					"id": "442139",
					"author": {
						"name": "Nirmalkumar_Patel",
						"key": "nirmalkumar_patel",
						"displayName": "Nirmal",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "@Taylor Thompson https://www.appcelerator.com/blog/2018/06/patch-titanium-sdk-using-cherry-picking/ \r\nOr if you just want to test with latest:\r\n\r\n{code:java}\r\ngit clone https://github.com/appcelerator/titanium_mobile.git\r\ngit checkout 7_4_X\r\ncd titanium_mobile/build\r\nnpm install \r\nnode scons.js cleanbuild ios\r\n{code}\r\n\r\n",
					"updateAuthor": {
						"name": "Nirmalkumar_Patel",
						"key": "nirmalkumar_patel",
						"displayName": "Nirmal",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2018-09-27T22:13:45.000+0000",
					"updated": "2018-09-27T22:13:45.000+0000"
				},
				{
					"id": "442148",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "The patch was merged and you can now get the fixed SDK directly via CLI if you select the 7_4_X branch: {{appc ti sdk install -b 7_4_X}}",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-28T06:09:31.000+0000",
					"updated": "2018-09-28T06:09:31.000+0000"
				},
				{
					"id": "442154",
					"author": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Great work guys! It doesn't seem to freeze anymore with both flags set to TRUE.\r\nDo you guys mind sharing how did you manage to isolate the problem? Or how did you find what was causing the issue?\r\nThanks for the effort everyone",
					"updateAuthor": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-28T10:02:34.000+0000",
					"updated": "2018-09-28T10:02:34.000+0000"
				},
				{
					"id": "442157",
					"author": {
						"name": "mdelmarter",
						"key": "mdelmarter",
						"displayName": "Matthew Delmarter",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"body": "+1 I was going to ask the same questions...",
					"updateAuthor": {
						"name": "mdelmarter",
						"key": "mdelmarter",
						"displayName": "Matthew Delmarter",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"created": "2018-09-28T12:18:30.000+0000",
					"updated": "2018-09-28T12:18:30.000+0000"
				},
				{
					"id": "442158",
					"author": {
						"name": "cthomas",
						"key": "cthomas",
						"displayName": "Christy Thomas",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I tested this fix to see if it fixed AC-5928 and I am still seeing the original problem described in that ticket.  Should it have resolved that issue as well?\r\n\r\nI have run-on-main-thread set to true and removed the jscore line so it should be true now.\r\n\r\n7.4.1.v20180927102822 is the SDK version I am using after running:\r\n{code}\r\nappc ti sdk install -b 7_4_X\r\n{code}",
					"updateAuthor": {
						"name": "cthomas",
						"key": "cthomas",
						"displayName": "Christy Thomas",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-28T13:25:29.000+0000",
					"updated": "2018-09-28T13:25:29.000+0000"
				},
				{
					"id": "442169",
					"author": {
						"name": "andreas.pingas",
						"key": "andreas.pingas",
						"displayName": "Andreas Pingas",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "With the updates on sdk 7.4.1 (Thu Sep 27) in random times i get a black screen and app stops running. On previous versions of sdk 7.4.1 this issue did not appear. :(\r\n\r\n\r\n{code:java}\r\n[ERROR] :  The application has crashed with an uncaught exception 'NSInvalidArgumentException'.\r\n[ERROR] :  Reason:\r\n[ERROR] :  -[TiUIViewProxy hostingController]: unrecognized selector sent to instance 0x7ffadb0d2000\r\n[ERROR] :  Stack trace:\r\n[ERROR] :  0   CoreFoundation                      0x000000010b40129b __exceptionPreprocess + 331\r\n[ERROR] :  1   libobjc.A.dylib                     0x000000010a1c6735 objc_exception_throw + 48\r\n[ERROR] :  2   CoreFoundation                      0x000000010b41ffa4 -[NSObject(NSObject) doesNotRecognizeSelector:] + 132\r\n[ERROR] :  3   CoreFoundation                      0x000000010b405fb6 ___forwarding___ + 1446\r\n[ERROR] :  4   CoreFoundation                      0x000000010b407e88 _CF_forwarding_prep_0 + 120\r\n[ERROR] :  5                              0x00000001047dc5b0 -[TiUITabProxy handleWillShowViewController:animated:] + 80\r\n[ERROR] :  6                              0x00000001047dc435 -[TiUITabProxy navigationController:willShowViewController:animated:] + 101\r\n[ERROR] :  7   UIKitCore                           0x0000000118ccbfc4 -[UINavigationController _startCustomTransition:] + 1280\r\n[ERROR] :  8   UIKitCore                           0x0000000118ce27bc -[UINavigationController _startDeferredTransitionIfNeeded:] + 741\r\n[ERROR] :  9   UIKitCore                           0x0000000118ce3bac -[UINavigationController __viewWillLayoutSubviews] + 150\r\n[ERROR] :  10  UIKitCore                           0x0000000118c6f63f -[UILayoutContainerView layoutSubviews] + 217\r\n[ERROR] :  11  UIKitCore                           0x0000000119110015 -[UIView(CALayerDelegate) layoutSublayersOfLayer:] + 1441\r\n[ERROR] :  12  QuartzCore                          0x000000010888ed3d -[CALayer layoutSublayers] + 175\r\n[ERROR] :  13  QuartzCore                          0x0000000108893bf7 _ZN2CA5Layer16layout_if_neededEPNS_11TransactionE + 395\r\n[ERROR] :  14  QuartzCore                          0x000000010880caa6 _ZN2CA7Context18commit_transactionEPNS_11TransactionE + 342\r\n[ERROR] :  15  QuartzCore                          0x0000000108843c2a _ZN2CA11Transaction6commitEv + 576\r\n[ERROR] :  16  QuartzCore                          0x00000001088449a6 _ZN2CA11Transaction17observer_callbackEP19__CFRunLoopObservermPv + 76\r\n[ERROR] :  17  CoreFoundation                      0x000000010b364037 __CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ + 23\r\n[ERROR] :  18  CoreFoundation                      0x000000010b35e4ce __CFRunLoopDoObservers + 430\r\n[ERROR] :  19  CoreFoundation                      0x000000010b35eb61 __CFRunLoopRun + 1537\r\n[ERROR] :  20  CoreFoundation                      0x000000010b35e221 CFRunLoopRunSpecific + 625\r\n[ERROR] :  21  GraphicsServices                    0x000000010fa121dd GSEventRunModal + 62\r\n[ERROR] :  22  UIKitCore                           0x00000001189f7115 UIApplicationMain + 140\r\n[ERROR] :  23                             0x0000000104761996 main + 102\r\n[ERROR] :  24  libdyld.dylib                       0x000000010d6d2551 start + 1\r\n-- End simulator log ---------------------------------------------------------\r\n{code}\r\n",
					"updateAuthor": {
						"name": "andreas.pingas",
						"key": "andreas.pingas",
						"displayName": "Andreas Pingas",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-28T18:52:24.000+0000",
					"updated": "2018-09-28T18:52:24.000+0000"
				},
				{
					"id": "442170",
					"author": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Thanks for all hard work guys but new version did not resolve my error totally, Now it is not crashing anymore but it is still freeze on random screen and also I am not using hyperloop module anywhere in my iOS app so before if I enable hyperloop I ws getting some errors, Without enabling hyperloop it was working fine but now without enabling hyperloop I am getting same errors only on ios 12",
					"updateAuthor": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-28T19:02:19.000+0000",
					"updated": "2018-09-28T19:03:06.000+0000"
				},
				{
					"id": "442176",
					"author": {
						"name": "designbymind",
						"key": "designbymind",
						"displayName": "Jason David Miller",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I'm also experiencing frequent, random app freezing now. Before the SDK fix, I would experience an immediate crash on app launch. That crashing has been resolved (on my end), however, a few different app interactions are now causing app freezes (no crash, no log). This could be from a button click (to call an HTTP request), adding or removing views, showing a NavigationWindow (modals), etc. — Since there is no error log output, I'm afraid I cannot provide much more, I just wanted to share my experience with the latest 7_4_X patched SDK (on iOS 12). — Thanks again for all of the great work & effort being put into these fixes! · Jason",
					"updateAuthor": {
						"name": "designbymind",
						"key": "designbymind",
						"displayName": "Jason David Miller",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-09-29T02:46:53.000+0000",
					"updated": "2018-09-29T02:46:53.000+0000"
				},
				{
					"id": "442178",
					"author": {
						"name": "jvandijk",
						"key": "jvandijk",
						"displayName": "Jeroen van Dijk",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"body": "OK, this issue is still not completely resolved from my perspective. The number of freezes changed from frequent to sporadic, but the issue isn't completely gone. The freezes do not occur when disabling the use of the JSCore framework.",
					"updateAuthor": {
						"name": "jvandijk",
						"key": "jvandijk",
						"displayName": "Jeroen van Dijk",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"created": "2018-09-29T19:36:15.000+0000",
					"updated": "2018-09-29T19:36:15.000+0000"
				},
				{
					"id": "442184",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "For those who are still facing issue- \r\nCan you please share your test case with which we can reproduce the bug. It will help us debugging and will help us finding if the issue is same as mentioned in this ticket or different.\r\nOr if you can share your app to my email vsingh@axway.com so that we can debug. Thanks!",
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-01T07:46:11.000+0000",
					"updated": "2018-10-01T07:46:11.000+0000"
				},
				{
					"id": "442188",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Apart from reproducible test cases, crash logs with stack traces would also be a tremendous help to narrow down the cause of any remaining issues. Please connect your device and check in Xcode under the Devices and Simulators window. There is a button to open a list of recent device logs which should include the crash log for your app. If they don't show up make sure to sync your device with iTunes because if there are more than 25 crash logs on your device, no new crash logs will be created.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-01T08:38:04.000+0000",
					"updated": "2018-10-01T08:38:04.000+0000"
				},
				{
					"id": "442307",
					"author": {
						"name": "Nirmalkumar_Patel",
						"key": "nirmalkumar_patel",
						"displayName": "Nirmal",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "This is still an issue on our production apps.  We are noticing random freezes and crashes when trying to authenticate using a webview.\r\n\r\nWe have shared a sample app that reproduces this issue in Case# 01006092 / iOS 12 App Crash With Xcode 10.0 Appc SDK 7.4 \r\n\r\nShould this ticket be reopened or are you guys fixing this as a separate Jira issue?\r\n\r\n",
					"updateAuthor": {
						"name": "Nirmalkumar_Patel",
						"key": "nirmalkumar_patel",
						"displayName": "Nirmal",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2018-10-04T19:59:02.000+0000",
					"updated": "2018-10-04T19:59:02.000+0000"
				},
				{
					"id": "442309",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "First of, thanks for all the feedback which showed os that we got the root cause of the issue! Still, there seem to be a few edge cases that our current fix does not cover.\r\n\r\nWe are currently working on an improved version of the fix. This will also address a regression introduced with the fix where some event listeners are not properly fired thus giving the impression of app freezes because it suddenly stops its usual workflow.\r\n\r\nAs soon as it is ready we'll let you know!",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-04T20:42:32.000+0000",
					"updated": "2018-10-04T20:42:32.000+0000"
				},
				{
					"id": "442318",
					"author": {
						"name": "dieskim",
						"key": "dieskim",
						"displayName": "David van de Meer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Thanks for the update @Jan Vennemann",
					"updateAuthor": {
						"name": "dieskim",
						"key": "dieskim",
						"displayName": "David van de Meer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-05T01:48:10.000+0000",
					"updated": "2018-10-05T01:48:10.000+0000"
				},
				{
					"id": "442337",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "PR: https://github.com/appcelerator/titanium_mobile/pull/10370\r\n\r\nSDK Download: https://www.dropbox.com/s/tnj6om696g4llf2/mobilesdk-7.4.1.v20181004162821-osx.zip?dl=0\r\n\r\nAn updated version of the fix is currently under review. It fixes a regression where some events were not properly fired anymore. Please use the above download link until the PR is merged and can be installed via CLI from the 7_4_X branch.\r\n\r\nIf you continue to see issues you think are related to this please let us know. You can send crash reports, reproducible test cases or even your app project to either ([mailto:jvennemann@axway.com] or [mailto:vsingh@axway.com].",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-05T12:54:53.000+0000",
					"updated": "2018-10-05T12:54:53.000+0000"
				},
				{
					"id": "442357",
					"author": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I don't have app freezing and crashing issues any more Without using <use-jscore-framework> and \r\n<run-on-main-thread> \r\n\r\nWith this new SDK I mean with all version of 7.4.1 my app doesn't update device token which functionality I am using in App, It was working fine with 7.2.0 but not with new SDK",
					"updateAuthor": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-05T18:14:43.000+0000",
					"updated": "2018-10-05T18:14:43.000+0000"
				},
				{
					"id": "442388",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "[~ppancholi] We have deprecated 'kroll-thread' and 'ticore'  and have to remove from SDK 8.0.0. So we have to fix all issue related with 'main-thread' and 'jscore'. If you can share your reproducible test case or app project with us, would be great. It will help us to find the edge cases which is still not handled. Thanks!",
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-08T07:59:52.000+0000",
					"updated": "2018-10-08T07:59:52.000+0000"
				},
				{
					"id": "442403",
					"author": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I have shared app project zip on vsingh@axway.com, jvennemann@axway.com from dropbox with in detail messages regarding App functionality and error, Please check and let me know but we need to resolve this as soon as possible because current app in app store is crashing on iOS 12 and new SDK solved crushing and Freezing problem but with this issue we can not do new release ",
					"updateAuthor": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-08T13:38:39.000+0000",
					"updated": "2018-10-08T13:38:39.000+0000"
				},
				{
					"id": "442408",
					"author": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "We just started testing with the latest 7_4_X branch with jscore and run-on-main-thread both true.  It mostly freezes now on startup.  It's easy to reproduce...just keep removing your app from the multi-task bar and then re-opening.  It will freeze half the time.  We make several network calls on startup and I think this is a big part of the issue that causes the main ui thread to freeze up and become unresponsive.  We really need a fix for this asap.",
					"updateAuthor": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2018-10-08T16:50:39.000+0000",
					"updated": "2018-10-08T16:50:39.000+0000"
				},
				{
					"id": "442409",
					"author": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "Okay this is very interesting...if we remove the AppC generated code in Alloy.js for logging into ACS we no longer get the freeze on startup.",
					"updateAuthor": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2018-10-08T17:03:58.000+0000",
					"updated": "2018-10-08T17:03:58.000+0000"
				},
				{
					"id": "442412",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~ppancholi], after a quick check of your submitted project it looks like you are experiencing issues with notifications. Please open a dedicated ticket for that as the scope of this tickets are solely the crashes in JSC. Describe in detail what steps to take to reproduce your issue, what is the actual behavior and what should be the expected behavior.\r\n\r\n[~btknorr], testing with a sample Alloy app does not crash/freeze for us, so it is probably a combination of things. Again, please provide reproducible test cases with as much information as possible or submit your project to help us narrow down any remaining issues and if they are related to the initial JSC crash reported here. Thanks!",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-08T17:54:19.000+0000",
					"updated": "2018-10-08T17:55:03.000+0000"
				},
				{
					"id": "442414",
					"author": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "Jan - please be sure you are testing on actual devices and not the simulator.  Also the freeze happens much more often on older iPhones like the 6 and 7.  Unfortunately we cannot submit any of our client's proprietary apps.  Also there are no stack traces when the app freezes...it just becomes unresponsive to any interactions.",
					"updateAuthor": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2018-10-08T18:22:57.000+0000",
					"updated": "2018-10-08T18:23:16.000+0000"
				},
				{
					"id": "442416",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "I'm testing on an iPhone 6s Plus and was able to reproduce all previous crashes there. However, i have not yet seen an actual app freeze yet, only crashes. Other reported \"freezes\" where due to events not being fired properly and thus the app appearing to be frozen.\r\n\r\nIf you don't mind please ask your clients if you are allowed to share code with Axway to investigate the issues. The project will only be used by our engineers for the sole purpose of identifying any remaining edge cases for iOS 12 issues. We really want to help you guys, but as the issues seems to mostly appear in real life app projects with many moving parts working together we dependent on you providing us with test cases/projects to work with.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-08T18:36:05.000+0000",
					"updated": "2018-10-08T18:36:05.000+0000"
				},
				{
					"id": "442417",
					"author": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "Now that we are past the startup freeze, we are now seeing freezes just by using app after some time.  Seems directly related to making an http call to get data and updating the UI.  Also we don't get crashes...only freezes.",
					"updateAuthor": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2018-10-08T18:44:19.000+0000",
					"updated": "2018-10-08T18:44:19.000+0000"
				},
				{
					"id": "442427",
					"author": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "@jvennemann \r\nI am having this issue with 7.4.1 and all new sdk only, If you try with 7.2.0 It is not happening, and Without using 7.4.1 my app is crashing and freezing so it has something to do with this new update only, as I am converting push messages to alert when app is open, Everything is working fine with until I update SDK apart from crash and freeze in ios 12, I will generate separate ticket for this",
					"updateAuthor": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-08T23:57:29.000+0000",
					"updated": "2018-10-08T23:58:04.000+0000"
				},
				{
					"id": "442431",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~ppancholi], this ticket deals with crashes and freezes under iOS 12 only and your issue seems to be neither a crash nor a freeze. We can't deal with all 7.4.0 issues in only one ticket, this gets confusing real quick. Please open a new ticket describing in detail what your issue is and mention me in the comments. I'll move it to TIMOB and investigate as soon as i can.\r\n\r\n// EDIT: Sorry it was early in the morning and i didn't see your last sentence that you will create a new ticket. Thanks a lot for helping us organize the issues related to 7.4.0 ;)",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-09T06:19:01.000+0000",
					"updated": "2018-10-09T07:19:23.000+0000"
				},
				{
					"id": "442445",
					"author": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"updateAuthor": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-09T13:11:56.000+0000",
					"updated": "2018-10-09T13:11:56.000+0000"
				},
				{
					"id": "442476",
					"author": {
						"name": "dbankier",
						"key": "dbankier",
						"displayName": "David Bankier",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Just to echo @Brian Knorr. While the latest nightly is much improved, I am still getting crashes and freezes.\r\nUnfortunately I also have highly secure financial and telecommunications apps that I can't share the source.\r\nI have been trying to create simple apps to replicate the issues unsuccessfully.\r\nMuch like Brian, these apps have live feeds and/or many concurrent api calls that update the UI. It is during or after api calls that I am (guessing) are the cause. (Stack traces don't help much.)\r\n\r\nThis might help... I have found Titanium on iOS 12 more \"fragile\". One fix I applied was related to an issue that during a window transition, I updated the UI (modifying a TableViewSection) and triggered API calls to refresh the UI content. The crash occurred when that sequence was performed about three times. To fix I simply added a delay of 200ms before making the API calls (I think the time for the animation to complete). I had applied a similar fix to Android to fix a crash that was occurring under these conditions previously. ",
					"updateAuthor": {
						"name": "dbankier",
						"key": "dbankier",
						"displayName": "David Bankier",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-10T06:33:04.000+0000",
					"updated": "2018-10-10T06:33:04.000+0000"
				},
				{
					"id": "442480",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Due to lack of test cases we currently are having a hard time to further investigate this. To move forward i created a special 7.4.1 build which includes a ton of debugging output. Please run your app with this build and send me the log output along with a possible crash report to [mailto:jvennemann@axway.com].\r\n\r\nPlease also add as much debug info to your app as well, especially to callbacks of your HTTP requests or other event handlers so we have a rough idea where in your app the crash or freeze happened. Valuable information is the proxy and event name of callback functions.\r\n\r\nDownload SDK with debug logging: https://www.dropbox.com/s/u0kh1w7gtk99gk0/mobilesdk-7.4.1-debug.zip?dl=0",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-10T11:33:38.000+0000",
					"updated": "2018-10-10T15:07:08.000+0000"
				},
				{
					"id": "442489",
					"author": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "[ERROR] :  ** BUILD FAILED **\r\n[ERROR] :  The following build commands failed:\r\n[ERROR] :  \tCompileC /Users/ppancholi/Documents/Appcelerator_Studio_Workspace/app-ios/build/iphone/build/Intermediates/Bramalea\\ City\\ Centre.build/Debug-iphoneos/Bramalea\\ City\\ Centre.build/Objects-normal/armv7/KrollObject.o /Users/ppancholi/Documents/Appcelerator_Studio_Workspace/app-ios/build/iphone/Classes/KrollObject.m normal armv7 objective-c com.apple.compilers.llvm.clang.1_0.compiler\r\n[ERROR] :  (1 failure)\r\n\r\nWith new sdk from dropbox, I am getting this compilation error on KrollObject, I am not sure if it is helpful to you ",
					"updateAuthor": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-10T14:01:16.000+0000",
					"updated": "2018-10-10T14:03:40.000+0000"
				},
				{
					"id": "442491",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Sorry, there was a mixup with the download links. Updated the link in my comment above!",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-10T15:08:20.000+0000",
					"updated": "2018-10-10T15:08:20.000+0000"
				},
				{
					"id": "442496",
					"author": {
						"name": "TaylorThompson",
						"key": "taylorthompson",
						"displayName": "Taylor Thompson",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "With the latest 7.4.1.v20181004162821 build, I get the following if we enable hyperloop.\r\n\r\nAn uncaught exception was thrown!\r\nInvalid Version: 12.-1.0\r\nInvalid Version: 12.-1.0\r\n\r\nI tried then adding in hyperloop 3.1.3 which did let me build to the simulator but upon then trying to build to a device I get the following:\r\n\r\n** BUILD FAILED **",
					"updateAuthor": {
						"name": "TaylorThompson",
						"key": "taylorthompson",
						"displayName": "Taylor Thompson",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-10T21:26:35.000+0000",
					"updated": "2018-10-10T21:45:54.000+0000"
				},
				{
					"id": "442525",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "I updated the debug build with more logs. You can get the new version here: https://www.dropbox.com/s/uwtzqmfwxtt2br0/mobilesdk-7.4.1-debug.zip?dl=0\r\n\r\n[~TaylorThompson], do a full clean by deleting the {{build}} folder when switching between versions. If the issue persists, please open a new ticket for issues other than crashes related to JSC or freezes. If you do, please also enabled trace logging with `-l trace` and post the full logs, since just a simple \"BUILD FAILED\" does not help us in identifying the problem.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-11T14:03:52.000+0000",
					"updated": "2018-10-11T14:03:52.000+0000"
				},
				{
					"id": "442527",
					"author": {
						"name": "inzori",
						"key": "inzori",
						"displayName": "Fabian Martinez",
						"active": true,
						"timeZone": "America/Montevideo"
					},
					"body": "If it fails when compiling to the device with only \"BUILD FAILED\" check your tiapp.xml that you have the correct app <id> and that you are using the correct Provisioning Profile for that device.",
					"updateAuthor": {
						"name": "inzori",
						"key": "inzori",
						"displayName": "Fabian Martinez",
						"active": true,
						"timeZone": "America/Montevideo"
					},
					"created": "2018-10-11T14:20:45.000+0000",
					"updated": "2018-10-11T14:20:45.000+0000"
				},
				{
					"id": "442589",
					"author": {
						"name": "dbankier",
						"key": "dbankier",
						"displayName": "David Bankier",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "@Jan Venneman, that build helps. It helped to catch one crash that the previous sdks didn't present.\r\nBasically the cause in this one case was updating the contents of a `TableViewRow` that had been removed from the table, yet the reverence was still held with JS (on the alloy `$`). The crash was a `EXC_BAD_ACCESS`. It looks like the ObjC objects were freed from memory despite existing JS references to them. I have worked around that crash, but you might want to look at it anyway.\r\n\r\nIt would be good to have this \"trace\" logging as a feature going in future sdks.\r\n\r\nI will continue working to with this debug sdk for the other crashes and freezes.",
					"updateAuthor": {
						"name": "dbankier",
						"key": "dbankier",
						"displayName": "David Bankier",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-14T07:08:44.000+0000",
					"updated": "2018-10-14T07:08:44.000+0000"
				},
				{
					"id": "442599",
					"author": {
						"name": "dieskim",
						"key": "dieskim",
						"displayName": "David van de Meer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "@Jan Venneman - I have been running this DEBUG SDK the whole week last week, today it crashed for the first time on startup - I sent you a crash log via email. Thanks",
					"updateAuthor": {
						"name": "dieskim",
						"key": "dieskim",
						"displayName": "David van de Meer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-15T07:02:31.000+0000",
					"updated": "2018-10-15T07:02:31.000+0000"
				},
				{
					"id": "442603",
					"author": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Gonna test with this debug release and let you guys know! Thanks for sharing",
					"updateAuthor": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-15T08:45:45.000+0000",
					"updated": "2018-10-15T08:45:45.000+0000"
				},
				{
					"id": "442642",
					"author": {
						"name": "hnestmann",
						"key": "hnestmann",
						"displayName": "Holger Nestmann",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hi all,\r\n\r\nThanks for all the effort to get to the bottom of it. Most people have good results, and working with JS Core disabled provides a work-around.\r\nHowever I am still getting freezes on an actual ipad (not simulated) with JS Core enabled. Mostly when I am doing an action that takes many REST Requests (it's ecom) login, getbaskets, get wishlists, load adresses etc.\r\n\r\nI am happy to provide the App code somewhere privately, but maybe [these log|https://drive.google.com/file/d/10FpdKH9IiN3JwDDIYMtnGqKlncCtks-B/view?usp=sharing] files traced with the debug SDK help already.\r\n\r\nThanks \r\nHolger\r\n\r\n",
					"updateAuthor": {
						"name": "hnestmann",
						"key": "hnestmann",
						"displayName": "Holger Nestmann",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-16T07:49:57.000+0000",
					"updated": "2018-10-16T07:49:57.000+0000"
				},
				{
					"id": "442658",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~hnestmann], thanks for the feedback Holger. I've contacted you via email regarding your app project.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-16T15:53:37.000+0000",
					"updated": "2018-10-16T15:53:37.000+0000"
				},
				{
					"id": "442672",
					"author": {
						"name": "iblack.dum",
						"key": "iblack.dum",
						"displayName": "Sathaphorn Kerdmalai",
						"active": true,
						"timeZone": "Asia/Bangkok"
					},
					"body": "I got this problem too.",
					"updateAuthor": {
						"name": "iblack.dum",
						"key": "iblack.dum",
						"displayName": "Sathaphorn Kerdmalai",
						"active": true,
						"timeZone": "Asia/Bangkok"
					},
					"created": "2018-10-17T01:50:10.000+0000",
					"updated": "2018-10-17T01:50:10.000+0000"
				},
				{
					"id": "442679",
					"author": {
						"name": "dbankier",
						"key": "dbankier",
						"displayName": "David Bankier",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"updateAuthor": {
						"name": "dbankier",
						"key": "dbankier",
						"displayName": "David Bankier",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-17T06:35:52.000+0000",
					"updated": "2018-10-17T06:35:52.000+0000"
				},
				{
					"id": "442755",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Hey guys, we are changing the status of this ticket to resolved for the upcoming 7.4.1 GA release. This is required for our internal JIRA workflow. We are fully aware that some of you still have issues so we will keep this issue open (with state resolved, but not closed yet).\r\n\r\nThe initial crash we could reproduce was solved and we are actively working together with some of you to reproduce other issues like the freezes. Once we have more insight on those the ticket will be put back into \"In progress\" state. Sorry in advance for the inconvenience and unnecessary mails this might cause.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-18T12:25:59.000+0000",
					"updated": "2018-10-18T12:25:59.000+0000"
				},
				{
					"id": "442758",
					"author": {
						"name": "dfreniche",
						"key": "dfreniche",
						"displayName": "Diego Freniche",
						"active": true,
						"timeZone": "Africa/Ceuta"
					},
					"body": "@Jan Vennemann. Thank for the heads up!\r\n\r\nIn our case, we can't replicate as we get random crashes, always related to jscore not being able to launch a new code block. Most probably a closure/block got deallocated. Always happening when doing lots of HTTP requests and showing data in ListViews. Something like this:\r\n\r\n\r\n{code:java}\r\nThread 3 Crashed:: KrollContext<kroll$1>\r\n0   com.apple.JavaScriptCore      \t0x00000001029ca9d2 JSC::ScriptExecutable::newCodeBlockFor(JSC::CodeSpecializationKind, JSC::JSFunction*, JSC::JSScope*, JSC::JSObject*&) + 82\r\n1   com.apple.JavaScriptCore      \t0x00000001029cba2b JSC::ScriptExecutable::prepareForExecutionImpl(JSC::VM&, JSC::JSFunction*, JSC::JSScope*, JSC::CodeSpecializationKind, JSC::CodeBlock*&) + 219\r\n2   com.apple.JavaScriptCore      \t0x0000000102709195 JSC::LLInt::setUpCall(JSC::ExecState*, JSC::Instruction*, JSC::CodeSpecializationKind, JSC::JSValue, JSC::LLIntCallLinkInfo*) + 773\r\n3   com.apple.JavaScriptCore      \t0x0000000102148025 llint_entry + 26699\r\n4   com.apple.JavaScriptCore      \t0x0000000102141665 vmEntryToJavaScript + 235\r\n5   com.apple.JavaScriptCore      \t0x000000010263d106 JSC::Interpreter::executeCall(JSC::ExecState*, JSC::JSObject*, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) + 470\r\n6   com.apple.JavaScriptCore      \t0x000000010283e5a1 JSC::profiledCall(JSC::ExecState*, JSC::ProfilingReason, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) + 177\r\n7   com.apple.JavaScriptCore      \t0x0000000102180e94 JSObjectCallAsFunction + 468\r\n8   net.teamworkpm.phone          \t0x0000000100793b43 TiBindingEventProcess + 947 (TiBindingEvent.m:269)\r\n9   net.teamworkpm.phone          \t0x0000000100793dd8 -[TiBindingCallbackInvoke invoke:] + 56 (TiBindingRunLoop.m:51)\r\n10  net.teamworkpm.phone          \t0x0000000100528a03 -[KrollContext invoke:] + 163 (KrollContext.m:985)\r\n11  net.teamworkpm.phone          \t0x0000000100529edb -[KrollContext main] + 3563 (KrollContext.m:1350)\r\n12  com.apple.Foundation          \t0x000000010411d932 __NSThread__start__ + 1221\r\n13  libsystem_pthread.dylib       \t0x0000000109af7661 _pthread_body + 340\r\n14  libsystem_pthread.dylib       \t0x0000000109af750d _pthread_start + 377\r\n15  libsystem_pthread.dylib       \t0x0000000109af6bf9 thread_start + 13\r\n\r\n{code}\r\n\r\n My (uneducated and totally made-up guess) is that maybe [Apple optimized JavaScript execution so much|https://mjtsai.com/blog/2018/09/24/iphone-xs-benchmarks/] in the new iOS 12 that they are introducing some non-compatible or breaking changes to Appc code? \r\n\r\nThe 7.4.1 build with all the built-in logs seems less crashy here, just FYI\r\n\r\nThanks!",
					"updateAuthor": {
						"name": "dfreniche",
						"key": "dfreniche",
						"displayName": "Diego Freniche",
						"active": true,
						"timeZone": "Africa/Ceuta"
					},
					"created": "2018-10-18T13:02:19.000+0000",
					"updated": "2018-10-18T13:02:19.000+0000"
				},
				{
					"id": "442846",
					"author": {
						"name": "kenjorai",
						"key": "kenjorai",
						"displayName": "Kai Lu",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "The same freeze issue here. Throughout normal testing on iOS, the app intermittently freezes and I have to quit/restart the app.\r\n\r\nThis has been happening consistently for the past 2-3 weeks. Got a lot better upgrading to 7.4.1 but still happens from time to time.\r\n\r\nHad the run-on-main-thread set to true.\r\n\r\nThe freeze/crash happens randomly on various screens, but the majority of the freezes happen when transitioning between screens.\r\n\r\nI've seen this consistently on iOS, but not once on Android. ",
					"updateAuthor": {
						"name": "kenjorai",
						"key": "kenjorai",
						"displayName": "Kai Lu",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-22T23:42:09.000+0000",
					"updated": "2018-10-22T23:42:09.000+0000"
				},
				{
					"id": "442847",
					"author": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "Can we get this issue re-opened or create a new one?  Doesn't make sense that the status is Resolved and Fixed, when it's not.",
					"updateAuthor": {
						"name": "btknorr",
						"key": "btknorr",
						"displayName": "Brian Knorr",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2018-10-22T23:47:34.000+0000",
					"updated": "2018-10-22T23:47:34.000+0000"
				},
				{
					"id": "442851",
					"author": {
						"name": "designbymind",
						"key": "designbymind",
						"displayName": "Jason David Miller",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "*Update:* I posed a few weeks back & just wanted to note that my current experience is greatly similar to that of @Kai Lu. — Frequent freezing in TiSDK 7.4.0+ / slightly less freezing in TiSDK 7.4.1+ — iOS is my primary focus, so I cannot report on Android.\r\n\r\n{code:xml}\r\n<property name=\"run-on-main-thread\" type=\"bool\">true</property>\r\n<use-jscore-framework>true</use-jscore-framework>\r\n{code}\r\n\r\n*Stack:*\r\n* iOS 12\r\n* TiSDK 7.4.1.GA\r\n* Alloy 1.13.3\r\n* Xcode 10.0\r\n* Hyperloop 3.1.4",
					"updateAuthor": {
						"name": "designbymind",
						"key": "designbymind",
						"displayName": "Jason David Miller",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-23T00:15:42.000+0000",
					"updated": "2018-10-23T00:15:42.000+0000"
				},
				{
					"id": "442852",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "First off, thanks for all the feedback. As promised i reopened the issue. However we still have a hard time reproducing this issue. As some of you already wrote these freezes are most likely due to optimization and changes to the internals in Apple's JavaScriptCore, especially GC handling.\r\n\r\nWhen you are experiencing freezes, will iOS terminate the app after you wait for ~10 sec? If so, please look for crash reports on your device and post them here.\r\n\r\nWe are also still looking for app projects to reproduce the freezes so we can do some actual debugging on that. If you can share your project with us please send it to [mailto:jvennemann@axway.com] or [mailto:vsingh@axway.com]. All code is considered private and confidential of course and will only be used for the purpose of helping us debug the freeze issue.\r\n\r\nLast but not least: If you are using timers in your app and experience freezes please check this build which contains a minor change to how timer callbacks are executed to prevent possible thread deadlocks. https://www.dropbox.com/s/zasd5dd7j9xl7lx/mobilesdk-7.4.2-osx.zip?dl=0",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-23T01:45:36.000+0000",
					"updated": "2018-10-23T01:45:36.000+0000"
				},
				{
					"id": "442853",
					"author": {
						"name": "kenjorai",
						"key": "kenjorai",
						"displayName": "Kai Lu",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hi Jan,\r\n\r\nReally appreciate your quick response. We do have a timer in the background constantly checking with the database sync.\r\n\r\nWill test on 7.4.2 to see if that helps with the freezes.\r\n\r\nThanks,\r\n\r\nKai",
					"updateAuthor": {
						"name": "kenjorai",
						"key": "kenjorai",
						"displayName": "Kai Lu",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-23T02:59:16.000+0000",
					"updated": "2018-10-23T02:59:16.000+0000"
				},
				{
					"id": "442854",
					"author": {
						"name": "kenjorai",
						"key": "kenjorai",
						"displayName": "Kai Lu",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Just tried 7.4.2 but unfortunately the freeze issue is still happening and by digging into the log I could not find a pattern as to where in the code it freezes (seems pretty random to me) but it all happened when I open a new window.\r\n\r\nWe are currently in the beta testing stage with a critical product release in coming.. you know we were going to choose a different tool and we chose you because you can get this stuff done and will evolve.. but it's holding up our business at this point so a quick fix of this freeze issue is MOST appreciated.",
					"updateAuthor": {
						"name": "kenjorai",
						"key": "kenjorai",
						"displayName": "Kai Lu",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-23T04:57:52.000+0000",
					"updated": "2018-10-23T05:02:22.000+0000"
				},
				{
					"id": "442858",
					"author": {
						"name": "dbankier",
						"key": "dbankier",
						"displayName": "David Bankier",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Apologies if this is noise. But due to release time lines, we have reverted to <use-jscore-framework>false</use-jscore-framework> which greatly improves stability.\r\nCan we ensure non-jscore usage is not deprecated? I think having jscore as a dependacy is proving to be a liability. ",
					"updateAuthor": {
						"name": "dbankier",
						"key": "dbankier",
						"displayName": "David Bankier",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-23T08:00:07.000+0000",
					"updated": "2018-10-23T08:00:07.000+0000"
				},
				{
					"id": "442862",
					"author": {
						"name": "miniman42",
						"key": "miniman42",
						"displayName": "Greg",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "100% agree with @dbankier - we have had to release our apps with jscore disabled and have had no issue since, so ideally we must ensure that this functionality is not deprecated until such time as the jscore implementation is robust.",
					"updateAuthor": {
						"name": "miniman42",
						"key": "miniman42",
						"displayName": "Greg",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-23T09:15:01.000+0000",
					"updated": "2018-10-23T09:15:01.000+0000"
				},
				{
					"id": "442863",
					"author": {
						"name": "kenjorai",
						"key": "kenjorai",
						"displayName": "Kai Lu",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Thanks David for the solution. I can verify it is working a lot better now.\r\n\r\nDefinitely agree with David and Greg on keeping the non-jscore without deprecation.\r\n\r\nSo much more stable and even faster than Apple's JS engine.",
					"updateAuthor": {
						"name": "kenjorai",
						"key": "kenjorai",
						"displayName": "Kai Lu",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-23T09:33:16.000+0000",
					"updated": "2018-10-23T09:33:16.000+0000"
				},
				{
					"id": "442868",
					"author": {
						"name": "designbymind",
						"key": "designbymind",
						"displayName": "Jason David Miller",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Thank you for the continued efforts, Jan!\r\n\r\nWe're currently using Hyperloop (and plan to extend that use) in our current project.\r\n\r\n*Question:* Does Hyperloop require (JavaScriptCore)? — I gather it does. — If so, we don't really have the option to disable it, even as a temporary solution like some of the devs above suggest. Any additional thoughts?",
					"updateAuthor": {
						"name": "designbymind",
						"key": "designbymind",
						"displayName": "Jason David Miller",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-23T10:18:21.000+0000",
					"updated": "2018-10-23T10:18:21.000+0000"
				},
				{
					"id": "442884",
					"author": {
						"name": "amigoni",
						"key": "amigoni",
						"displayName": "Leonardo Amigoni",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "I have also had to use <use-jscore-framework>false</use-jscore-framework> but I have found some issues that I have had to deal with which I attribute to concurrency issues. If you add views in a loop to a layout vertical view. The child views don't display properly. I have to use an interval to add them at a 10 ms interval to get them to work. Option dialog buttons seem not to fire correctly most of the time so I had to replace them with non-native option dialogs. There are other issues that are more difficult to describe but I think all related to concurrency. Finally performance is lagging a bit with it.",
					"updateAuthor": {
						"name": "amigoni",
						"key": "amigoni",
						"displayName": "Leonardo Amigoni",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-23T19:50:13.000+0000",
					"updated": "2018-10-23T19:51:11.000+0000"
				},
				{
					"id": "442885",
					"author": {
						"name": "mdelmarter",
						"key": "mdelmarter",
						"displayName": "Matthew Delmarter",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"body": "@Leonardo - did you try the 7.4.2 build as described above by Jan? It has some changes to optimise timer callbacks etc which might help you. I am still testing, but it seems to have reduced issues for me so far...\r\nhttps://www.dropbox.com/s/zasd5dd7j9xl7lx/mobilesdk-7.4.2-osx.zip?dl=0",
					"updateAuthor": {
						"name": "mdelmarter",
						"key": "mdelmarter",
						"displayName": "Matthew Delmarter",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"created": "2018-10-23T20:02:39.000+0000",
					"updated": "2018-10-23T20:02:39.000+0000"
				},
				{
					"id": "443048",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Alright guys, here is another update for you. We replaced our timer handling in jscore with native timers and it looks very promising. First tests with various projects proved positive results and the app freezes were gone.\r\n\r\nTo get more feedback we would like to ask you once more to test with the following new build:\r\n\r\nhttps://www.dropbox.com/s/80bqt55221yqeiu/mobilesdk-7.5.0-osx.zip?dl=0\r\n\r\nEspecially if you are having {{run-on-main-thread}} set to false since we couldn't verify this yet in a project that reproduces the freezes.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-30T02:55:29.000+0000",
					"updated": "2018-10-30T02:55:29.000+0000"
				},
				{
					"id": "443051",
					"author": {
						"name": "mdelmarter",
						"key": "mdelmarter",
						"displayName": "Matthew Delmarter",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"body": "@Jan - is the timer handling much different from the 7.4.2 build you gave us recently?",
					"updateAuthor": {
						"name": "mdelmarter",
						"key": "mdelmarter",
						"displayName": "Matthew Delmarter",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"created": "2018-10-30T03:18:25.000+0000",
					"updated": "2018-10-30T03:18:25.000+0000"
				},
				{
					"id": "443052",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~mdelmarter], yes! Actually, it's a complete rewrite replacing the old timers when using JSCore.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-30T03:24:07.000+0000",
					"updated": "2018-10-30T03:24:07.000+0000"
				},
				{
					"id": "443054",
					"author": {
						"name": "fahad86",
						"key": "fahad86",
						"displayName": "Muhammad Ahmed Fahad",
						"active": true,
						"timeZone": "Asia/Shanghai"
					},
					"body": "Jan Vennemann? Do I need to make any config changes in order to make my project run with 7.5.0? \r\n\r\nRight now when I try to build, I get the following error:\r\n[INFO] :   Invoking xcodebuild\r\n[ERROR] :  ** BUILD FAILED **\r\n[ERROR] :  The following build commands failed:\r\n[ERROR] :  \tLd /Users/xxx/Titanium_Studio_Workspace/spacious-mobile-alloys/build/iphone/build/Intermediates/XXXXbuild/Debug-iphoneos/XXXX.build/Objects-normal/armv7/XXXX normal armv7\r\n[ERROR] :  (1 failure)",
					"updateAuthor": {
						"name": "fahad86",
						"key": "fahad86",
						"displayName": "Muhammad Ahmed Fahad",
						"active": true,
						"timeZone": "Asia/Shanghai"
					},
					"created": "2018-10-30T03:51:45.000+0000",
					"updated": "2018-10-30T03:51:45.000+0000"
				},
				{
					"id": "443060",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "No, you shouldn't have to change anything. Please post logs with at least debug log level so we can see what is going on.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-30T06:16:24.000+0000",
					"updated": "2018-10-30T06:16:24.000+0000"
				},
				{
					"id": "443074",
					"author": {
						"name": "designbymind",
						"key": "designbymind",
						"displayName": "Jason David Miller",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hey Jan,\r\n\r\nI haven't done any _extensive_ testing with 7.5.0, however, it does seem to greatly improve the stability of my current app which was freezing consistently with 7.4.X. Thank you for the continued effort on this issue! — I'm going to keep testing w/7.5.0 moving forward. I'll stay tuned into this ticket & report any buggy activity.\r\n\r\n=]\r\n\r\n· Jason",
					"updateAuthor": {
						"name": "designbymind",
						"key": "designbymind",
						"displayName": "Jason David Miller",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-30T10:00:59.000+0000",
					"updated": "2018-10-30T10:00:59.000+0000"
				},
				{
					"id": "443075",
					"author": {
						"name": "dieskim",
						"key": "dieskim",
						"displayName": "David van de Meer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hi Jan, is there a way we can add the latest changes to 7.4.1 ? As 7.5.0 has so many other changes we would really like to just fix this issue with our current app setup. Is there a specific commit or pull we can cherry pick on top of 7.4.1 to take advantage of the latest changes? ",
					"updateAuthor": {
						"name": "dieskim",
						"key": "dieskim",
						"displayName": "David van de Meer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-30T10:26:25.000+0000",
					"updated": "2018-10-30T10:26:25.000+0000"
				},
				{
					"id": "443084",
					"author": {
						"name": "peterladis",
						"key": "peterladis",
						"displayName": "Peter Ladis",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "When I install 7.5.0 and use...I get this message and the app doesn't start up\r\n\r\n[WARN] \b\b \b The implicit global scope for variable declarations in app.js is deprecated in 7.5.0, and will be removed in 9.0.0\r\n\r\n[ERROR] \b\b \bScript Error Module \"app.js\" failed to leave a valid exports object\r\n\r\n\r\nANY IDEAS",
					"updateAuthor": {
						"name": "peterladis",
						"key": "peterladis",
						"displayName": "Peter Ladis",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-30T13:13:32.000+0000",
					"updated": "2018-10-30T13:13:32.000+0000"
				},
				{
					"id": "443089",
					"author": {
						"name": "ludolphus",
						"key": "ludolphus",
						"displayName": "Steven van Loef",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"body": "@Peter Ladis, could be an uninitialize global variable like:\r\n\r\n\r\n{code:javascript}\r\nvar myVar;\r\n{code}\r\n\r\n",
					"updateAuthor": {
						"name": "ludolphus",
						"key": "ludolphus",
						"displayName": "Steven van Loef",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"created": "2018-10-30T14:46:58.000+0000",
					"updated": "2018-10-30T14:46:58.000+0000"
				},
				{
					"id": "443090",
					"author": {
						"name": "kosso",
						"key": "kosso",
						"displayName": "kosso",
						"active": true,
						"timeZone": "Europe/London"
					},
					"body": "@Peter :  Are you 'polluting the global scope' with  {{Ti.App.my_custom_thing}}  in app.js ?\r\n\r\nI _think_ this is what the deprecation refers to. It's been discouraged for a while, since I _think_ it causes issues with memory garbage collection. \r\n\r\n\r\n",
					"updateAuthor": {
						"name": "kosso",
						"key": "kosso",
						"displayName": "kosso",
						"active": true,
						"timeZone": "Europe/London"
					},
					"created": "2018-10-30T15:05:24.000+0000",
					"updated": "2018-10-30T15:05:24.000+0000"
				},
				{
					"id": "443091",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "There is a known issue currently in 7.5.0 that causes problems if you use third-party modules and assign them using the {{ns}} attribute in your Alloy templates instead of using the recommended {{module}} attribute.\r\n\r\nI'll prepare a backport of the timer changes for a 7.4.2 build so you can exclusively test those changes and will share it with you here once it's ready.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-30T15:28:33.000+0000",
					"updated": "2018-10-30T15:28:33.000+0000"
				},
				{
					"id": "443092",
					"author": {
						"name": "peterladis",
						"key": "peterladis",
						"displayName": "Peter Ladis",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "So I have code like this in my app.js\r\n\r\nfunction include(file) {\r\n    return eval(Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory, file).read().text);\r\n}\r\n\r\nand then below...I bring in the moment.js  class like this\r\n\r\ninclude('ui/common/moment.js');\r\n\r\n\r\n\r\nBut for some reason getting initialization errors like this:   \r\n\r\n[ERROR] \b\b \bScript Error {\r\n[ERROR] \b\b \b column = 16;\r\n[ERROR] \b\b \b line = 306;\r\n[ERROR] \b\b \b message = \"Can't find variable: moment\";\r\n\r\nIs this method not allowed in 7.5.0\r\n\r\n\r\n\r\nThe FULL STACK\r\n\r\n[ERROR] \b\b \bScript Error {\r\n[ERROR] \b\b \b column = 16;\r\n[ERROR] \b\b \b line = 306;\r\n[ERROR] \b\b \b message = \"Can't find variable: moment\";\r\n[ERROR] \b\b \b sourceURL = \"file:///Users/peterladis/Library/Developer/CoreSimulator/Devices/C8447ECB-B089-4017-9E19-CB8E5F56C43E/data/Containers/Bundle/Application/9AD7E62C-1478-4BBB-8EEB-9B6378050252/LilyPad.app/ui/lib/ScrollView.js\";\r\n[ERROR] \b\b \b stack = \" at formatDate(/ui/lib/ScrollView.js:306:16)\\n at buildActIndicator(/ui/lib/ScrollView.js:199:39)\\n at ScrollView(/ui/lib/ScrollView.js:311:20)\\n at FeedList(/ui/handheld/iphoneV2/FeedTemplates/FeedList.js:16:31)\\n at Home(/ui/handheld/iphoneV2/ContentWindows/Home.js:110:28)\\n at createCenterNavWindow(/ui/handheld/iphoneV2/FirstViewV2.js:2535:25)\\n at FirstViewV2(/ui/handheld/iphoneV2/FirstViewV2.js:7460:40)\\n at ApplicationWindow(/ui/handheld/iphoneV2/ApplicationWindow.js:23:30)\\n at (/app.js:162:26)\\n at (/app.js:205:3)\\n at global code(/app.js:207:70)\\n at require@[native code]\\n at (/ti.main.js:27:10)\\n at loadAsync(/ti.internal/bootstrap.loader.js:106:11)\\n at global code(/ti.main.js:24:52)\";\r\n[ERROR] \b\b \b toJSON = \"<KrollCallback: 0x600001ded5c0>\";\r\n[ERROR] \b\b \b}\r\n[ERROR] \b\b \bScript Error Module \"app.js\" failed to leave a valid exports object\r\n",
					"updateAuthor": {
						"name": "peterladis",
						"key": "peterladis",
						"displayName": "Peter Ladis",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-30T15:30:43.000+0000",
					"updated": "2018-10-30T15:32:19.000+0000"
				},
				{
					"id": "443093",
					"author": {
						"name": "ludolphus",
						"key": "ludolphus",
						"displayName": "Steven van Loef",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"body": "@Jan Vennemann I installed your 7.5.0 (thanks!) and reverted that 'unarchiveFromTemplate' method in TiViewProxy.m back to the one in 7.4.1.GA (because my app uses some 3rd party modules like you mention, also see: https://github.com/appcelerator/titanium_mobile/pull/10131) and my app has been without freeze for two hours now while using it 'extensively'. With 7.4.1.GA it would freeze within 5 to 15 minutes.\r\n\r\n(edit) Forget to mention: running with use-jscore-framework and run-on-main-thread both turned on.",
					"updateAuthor": {
						"name": "ludolphus",
						"key": "ludolphus",
						"displayName": "Steven van Loef",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"created": "2018-10-30T15:35:19.000+0000",
					"updated": "2018-10-30T16:03:14.000+0000"
				},
				{
					"id": "443094",
					"author": {
						"name": "peterladis",
						"key": "peterladis",
						"displayName": "Peter Ladis",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "@Jan.....Thanks ill wait for 7.4.2 build with the freeze fixes ",
					"updateAuthor": {
						"name": "peterladis",
						"key": "peterladis",
						"displayName": "Peter Ladis",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-30T15:44:18.000+0000",
					"updated": "2018-10-30T15:44:18.000+0000"
				},
				{
					"id": "443095",
					"author": {
						"name": "jannis",
						"key": "jannis",
						"displayName": "Jannis H",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "> I'll prepare a backport of the timer changes for a 7.4.2 build so you can exclusively test those changes and will share it with you here once it's ready.\r\n\r\n@Jan Vennemann I'd also love the 7.4.2 backport and will try it out and give feedback right away (we'll have ~30 people test it). \r\n\r\nWe're in a [bit of trouble|https://gymhero.me/community/t/version-2-24-released/2683] because of this bug, and I'd love to submit an update as soon as possible :)",
					"updateAuthor": {
						"name": "jannis",
						"key": "jannis",
						"displayName": "Jannis H",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-30T15:51:05.000+0000",
					"updated": "2018-10-30T15:51:05.000+0000"
				},
				{
					"id": "443096",
					"author": {
						"name": "darknos",
						"key": "darknos",
						"displayName": "Sergey Nosenko",
						"active": true,
						"timeZone": "Europe/Helsinki"
					},
					"body": "Hi,\r\n\r\n@Jan thank you for https://www.dropbox.com/s/zasd5dd7j9xl7lx/mobilesdk-7.4.2-osx.zip?dl=0 it works for me with jscore and main thread turned on.\r\n\r\nI was in trouble to extract and use 7.4.2 SDK from zip, so I just extracted folder \"iphone\" over my 7.4.1.GA and no freezes or crashes now in my app. \r\n\r\nGreat job!  And I also wait for backport to 7.4.2",
					"updateAuthor": {
						"name": "darknos",
						"key": "darknos",
						"displayName": "Sergey Nosenko",
						"active": true,
						"timeZone": "Europe/Helsinki"
					},
					"created": "2018-10-30T16:00:37.000+0000",
					"updated": "2018-10-30T16:00:37.000+0000"
				},
				{
					"id": "443098",
					"author": {
						"name": "peterladis",
						"key": "peterladis",
						"displayName": "Peter Ladis",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Which build is good to go for freezing issues....the older 7.4.2 did not fix anything?",
					"updateAuthor": {
						"name": "peterladis",
						"key": "peterladis",
						"displayName": "Peter Ladis",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-30T16:37:32.000+0000",
					"updated": "2018-10-30T16:37:32.000+0000"
				},
				{
					"id": "443102",
					"author": {
						"name": "peterladis",
						"key": "peterladis",
						"displayName": "Peter Ladis",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "@sergey.....is that build a new 7.4.2. or one from the other day with problems still",
					"updateAuthor": {
						"name": "peterladis",
						"key": "peterladis",
						"displayName": "Peter Ladis",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-30T18:28:11.000+0000",
					"updated": "2018-10-30T18:28:11.000+0000"
				},
				{
					"id": "443106",
					"author": {
						"name": "peterladis",
						"key": "peterladis",
						"displayName": "Peter Ladis",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Any  update on this?",
					"updateAuthor": {
						"name": "peterladis",
						"key": "peterladis",
						"displayName": "Peter Ladis",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-30T20:41:51.000+0000",
					"updated": "2018-10-30T20:41:51.000+0000"
				},
				{
					"id": "443107",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Sorry, it took a little longer. We detected an issue when run-on-main-thread is set to false and had to disable the new timer implementation for that.\r\n\r\nNow, i updated the 7.4.2 build i shared earlier to the newest version. Here is the download link again: https://www.dropbox.com/s/zasd5dd7j9xl7lx/mobilesdk-7.4.2-osx.zip?dl=0\r\n\r\nTo enable the new timer implementation it is required to use js core (enabled by default or explicitly via {{<use-jscore-framework>true</use-jscore-framework>}} under {{ios}}) and run on main thread also set to true with {{<property name=\"run-on-main-thread\" type=\"bool\">true</property>}}. We also included the change from the earlier 7.4.2 to timers when not using main thread which proved to help for some of you.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-30T21:57:51.000+0000",
					"updated": "2018-10-30T21:57:51.000+0000"
				},
				{
					"id": "443117",
					"author": {
						"name": "dieskim",
						"key": "dieskim",
						"displayName": "David van de Meer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "@Jan Vennemann - will you guys be able to just release the new timer fixes as part of 7.4.2.GA rather than part of 7.5.0? 7.5.0 has many other changes that many apps might require alot of work to get working (including ours) and if this fix could be released as part of 7.4.2.GA that would be great as it would mean most people could simply update from 7.4.0 / 7.4.1 to 7.4.2 without any real work to their apps.",
					"updateAuthor": {
						"name": "dieskim",
						"key": "dieskim",
						"displayName": "David van de Meer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-31T01:32:54.000+0000",
					"updated": "2018-10-31T01:32:54.000+0000"
				},
				{
					"id": "443118",
					"author": {
						"name": "mdelmarter",
						"key": "mdelmarter",
						"displayName": "Matthew Delmarter",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"body": "+1 on David's suggestion. Priority is getting a stable SDK that fixes this issue. I am not even sure what is in 7.5.0 to ensure that other areas are working - will tackle that when we get the formal Release Notes etc.\r\n\r\nThanks again for the great work team. Initial feedback from my beta testers is that everything is much more stable with zero app freezing.",
					"updateAuthor": {
						"name": "mdelmarter",
						"key": "mdelmarter",
						"displayName": "Matthew Delmarter",
						"active": true,
						"timeZone": "Pacific/Auckland"
					},
					"created": "2018-10-31T02:31:57.000+0000",
					"updated": "2018-10-31T02:31:57.000+0000"
				},
				{
					"id": "443119",
					"author": {
						"name": "dieskim",
						"key": "dieskim",
						"displayName": "David van de Meer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"updateAuthor": {
						"name": "dieskim",
						"key": "dieskim",
						"displayName": "David van de Meer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-31T03:21:40.000+0000",
					"updated": "2018-10-31T03:21:40.000+0000"
				},
				{
					"id": "443125",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "The above 7.4.2 is basically what you are asking for. An updated 7.4.1 with only the timer fixes. I'm not sure if we can squeeze in an official 7.4.2 release because the GA process takes time and resources are already reserved for 7.5.0 and 8.0.0. However, we'll discuss this internally and see what we can do.\r\n\r\n[~dieskim], why would the changes in TIMOB-24909 cause a few days work? Not overly familiar with that ticket, but shouldn't the implementation be 100% backward compatible?",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-31T10:04:33.000+0000",
					"updated": "2018-10-31T10:04:33.000+0000"
				},
				{
					"id": "443133",
					"author": {
						"name": "dieskim",
						"key": "dieskim",
						"displayName": "David van de Meer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "@Jan Vennemann thanks for the info. Do you have a specific branch on your fork of titanium_mobile on GitHub that is the 7.4.2 version? That way we could use that 7.4.2 and build cherry pick other fixed we need etc on top of that as needed. It should be good enough for people to build their own sdk versions and get apps out there. Maybe you already have a branch I could not find or maybe you can create a 7.4.2 branch?  Thanks for all the hard work on this. I'll build our apps with 7.4.2 tomorrow and let you know how it goes. ",
					"updateAuthor": {
						"name": "dieskim",
						"key": "dieskim",
						"displayName": "David van de Meer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-31T15:12:40.000+0000",
					"updated": "2018-10-31T15:12:40.000+0000"
				},
				{
					"id": "443140",
					"author": {
						"name": "coaks",
						"key": "coaks",
						"displayName": "Clint Oaks",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "In iOS 11, this 7.4.2 did help with a lot of crashes in our app.  We get 1 crash, after allowing permissions to push notifications, but after that the app doesn't crash.  Push notifications do not seem to be working still in iOS 11.",
					"updateAuthor": {
						"name": "coaks",
						"key": "coaks",
						"displayName": "Clint Oaks",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-31T21:02:13.000+0000",
					"updated": "2018-10-31T21:02:13.000+0000"
				},
				{
					"id": "443155",
					"author": {
						"name": "amigoni",
						"key": "amigoni",
						"displayName": "Leonardo Amigoni",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Question on 7.4.2 was there any change to the modules or can we just drop the sdk mobilesdk folder?",
					"updateAuthor": {
						"name": "amigoni",
						"key": "amigoni",
						"displayName": "Leonardo Amigoni",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-01T01:08:57.000+0000",
					"updated": "2018-11-01T01:08:57.000+0000"
				},
				{
					"id": "443162",
					"author": {
						"name": "narbs",
						"key": "narbs",
						"displayName": "Christian Clare",
						"active": true,
						"timeZone": "Australia/Brisbane"
					},
					"body": "We also could use a 7.4.2 branch with timer fixes applied rather than these only going into 7.5.0. We need to rebuild the 7.4.2 SDK with our fixes applied (and the new timer fixes) so could use a branch with a commit to cherry-pick on top of 7_4_X.\r\n\r\nLooked in master and 7_4_X and 7_5_X but couldn't see a commit that matched the native timer fixes that stopped the app hanging.\r\n\r\nThanks... these hangs are causing major problems for our customers.",
					"updateAuthor": {
						"name": "narbs",
						"key": "narbs",
						"displayName": "Christian Clare",
						"active": true,
						"timeZone": "Australia/Brisbane"
					},
					"created": "2018-11-01T02:11:27.000+0000",
					"updated": "2018-11-01T02:11:27.000+0000"
				},
				{
					"id": "443185",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "The PR with the new timer implementation is still under review and testing, so it is not merged into any of the main branches yet.\r\n\r\n[~dieskim] and everyone else asking for 7_4_X branch line, here you go: [timer-refactor-7_4_X|https://github.com/janvennemann/titanium_mobile/tree/timer-refactor-7_4_X]. This is the branch used in [this|https://github.com/appcelerator/titanium_mobile/pull/10416] 7_4_X PR i just opened.\r\n\r\n[~amigoni], the 7.4.2 build has no other changes, you can just drop the sdk into your mobilesdk folder.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-01T13:42:33.000+0000",
					"updated": "2018-11-01T13:42:33.000+0000"
				},
				{
					"id": "443187",
					"author": {
						"name": "dieskim",
						"key": "dieskim",
						"displayName": "David van de Meer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "@Jan Vennemann thank you so much. That's perfect. \r\n\r\nI can confirm that this 7.4.2 build is much better for us, but it is not completely bug free yet. Our app ran for 30 minutes with aggressive usage and testing and then crashed. The crash was once again cause by setting and accessing objects via Hyperloop, exactly as before but it did last longer. Jan it's the same crash as before in the emails I sent you but the app did last alot longer this time. I will work with our tester tomorrow to see if we can reproduce",
					"updateAuthor": {
						"name": "dieskim",
						"key": "dieskim",
						"displayName": "David van de Meer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-11-01T13:54:40.000+0000",
					"updated": "2018-11-01T13:54:40.000+0000"
				},
				{
					"id": "443188",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Glad to hear that it's working for you. Please open a new ticket regarding the Hyperloop issue with all relevant information so we can then investigate what's going on in that new ticket.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-01T14:08:38.000+0000",
					"updated": "2018-11-01T14:08:38.000+0000"
				},
				{
					"id": "443199",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "The new timer implementation is now merged to all our main branch lines!\r\n\r\nJust to let you know we plan to put out a 7.4.2.GA to bring just the timer fixes to 7.4.X. It will be released alongside 7.5.0.GA.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-01T17:48:40.000+0000",
					"updated": "2018-11-01T17:48:40.000+0000"
				},
				{
					"id": "443214",
					"author": {
						"name": "mr.jatinjoshi.mca@gmail.com",
						"key": "mr.jatinjoshi.mca@gmail.com",
						"displayName": "JATIN JOSHI",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I tested my app on 7.4.2 after installing it : appc ti sdk install --branch 7_4_X 7.4.2.v20181101134650\r\n\r\nand still the app freezed suddenly at point and then app crashed.\r\n\r\n\r\nRegards\r\nJatin",
					"updateAuthor": {
						"name": "mr.jatinjoshi.mca@gmail.com",
						"key": "mr.jatinjoshi.mca@gmail.com",
						"displayName": "JATIN JOSHI",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-11-02T01:28:01.000+0000",
					"updated": "2018-11-02T01:28:01.000+0000"
				},
				{
					"id": "443216",
					"author": {
						"name": "mr.jatinjoshi.mca@gmail.com",
						"key": "mr.jatinjoshi.mca@gmail.com",
						"displayName": "JATIN JOSHI",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "And crash didn't generated any error logs. \r\n\r\nRegards\r\nJatin",
					"updateAuthor": {
						"name": "mr.jatinjoshi.mca@gmail.com",
						"key": "mr.jatinjoshi.mca@gmail.com",
						"displayName": "JATIN JOSHI",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-11-02T01:29:25.000+0000",
					"updated": "2018-11-02T01:29:25.000+0000"
				},
				{
					"id": "443218",
					"author": {
						"name": "mr.jatinjoshi.mca@gmail.com",
						"key": "mr.jatinjoshi.mca@gmail.com",
						"displayName": "JATIN JOSHI",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Tested the app with : appc ti sdk install --branch 7_5_X 7.5.0.v20181101101355 and that crashes as well. \r\n\r\n\r\nRegards\r\nJatin",
					"updateAuthor": {
						"name": "mr.jatinjoshi.mca@gmail.com",
						"key": "mr.jatinjoshi.mca@gmail.com",
						"displayName": "JATIN JOSHI",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-11-02T01:57:03.000+0000",
					"updated": "2018-11-02T01:57:03.000+0000"
				},
				{
					"id": "443224",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~mr.jatinjoshi.mca@gmail.com], please make sure you are using JSCore and have run-on-main-thread enabled. If a crash occurs make sure to get the related crash report from the device. Also provide the logs and as much other information as possible. We can't do much with \"it crashed\" and no other information at all.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-02T09:17:18.000+0000",
					"updated": "2018-11-02T09:17:18.000+0000"
				},
				{
					"id": "443225",
					"author": {
						"name": "jannis",
						"key": "jannis",
						"displayName": "Jannis H",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Dear @Jan, here's a big thank you for your efforts and especially communicating so well and putting out SDK builds that we can test and use right away, without having to wait for an SDK release. https://media.giphy.com/media/bKBM7H63PIykM/giphy.gif",
					"updateAuthor": {
						"name": "jannis",
						"key": "jannis",
						"displayName": "Jannis H",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-02T09:36:42.000+0000",
					"updated": "2018-11-02T09:36:42.000+0000"
				},
				{
					"id": "443233",
					"author": {
						"name": "venkateshkumarg",
						"key": "venkateshkumarg",
						"displayName": "Venkateshkumar",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "*Dear @Jan,*\r\nI tested my app on 7.4.2 after installing it : appc ti sdk install --branch 7_4_X 7.4.2.v20181101134650\r\nand still the app freezed suddenly at point and then app crashed.\r\nI have enabled the two properties as you mentioned:\r\n<property name=\"run-on-main-thread\" type=\"bool\">true</property>\r\n<use-jscore-framework>true</use-jscore-framework>\r\n*My Crash report below:*\r\n\r\n1\tproc_state\tcom.scalepoint.ecbmobile: Foreground: false\t101\t16:07:31.455003 +0530\tsymptomsd\r\n1\tproc_state\tcall _saveAndUnloadSelectState\t101\t16:07:31.455365 +0530\tsymptomsd\r\n1\trnf\tNBSM Current state: normal, changed: systemForeground to 0 for net type 0\t101\t16:07:31.455556 +0530\tsymptomsd\r\n1\trnf\tNBSM Eligible to go to broken\t101\t16:07:31.455738 +0530\tsymptomsd\r\n1\trnf\tNBSM Current state: normal, changed: systemForeground to 0 for net type 0, eligible for broken but constraints unsatisfied (0,0)\t101\t16:07:31.455877 +0530\tsymptomsd\r\n1\t\tFormulating report for corpse[349] Scalepoint\t350\t16:07:31.593475 +0530\tReportCrash\r\n1\tdefault\tnotify_register_check() failed with error 1000000\t350\t16:07:31.598174 +0530\tReportCrash\r\n1\t\tReport of type '109(<private>)' not saved because the limit of 25 logs has been reached\t350\t16:07:31.617486 +0530\tReportCrash\r\n1\t\tNotice: This report is abbreviated for syslog inclusion because it could not be saved to disk.\r\nSymbolication may be possible by manually cleaning up and including the Binary Image section of a full report from this same device -- good luck!\t350\t16:07:31.621271 +0530\tReportCrash\r\n1\t\tProcess:             Scalepoint [349]\r\nPath:                /private/var/containers/Bundle/Application/1D5826DA-D537-44E2-B841-3644DEB3097F/Scalepoint.app/Scalepoint\r\nOS Version:          iPhone OS 12.0.1 (16A404)\t350\t16:07:31.621422 +0530\tReportCrash\r\n1\t\tException Type:  EXC_BAD_ACCESS (SIGSEGV)\r\nException Subtype: KERN_INVALID_ADDRESS at 0x0000000000000010\r\nVM Region Info: 0x10 is not in any region.  Bytes before following region: 4296818672\r\n      REGION TYPE                      START - END             [ VSIZE] PRT/MAX SHRMOD  REGION DETAIL\r\n      UNUSED SPACE AT START\r\n--->  \r\n      __TEXT                 00000001001c4000-000000010054c000 [ 3616K] r-x/r-x SM=COW  ...pp/Scalepoint\r\n\r\nTermination Signal: Segmentation fault: 11\r\nTermination Reason: Namespace SIGNAL, Code 0xb\r\nTerminating Process: exc handler [349]\r\nTriggered by Thread:  0\t350\t16:07:31.621805 +0530\tReportCrash\r\n1\t\tThread 0 name:  Dispatch queue: com.apple.main-thread\r\nThread 0 Crashed:\r\n\r\nThanks \r\nVenkatesh kumar\r\n",
					"updateAuthor": {
						"name": "venkateshkumarg",
						"key": "venkateshkumarg",
						"displayName": "Venkateshkumar",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-11-02T11:32:42.000+0000",
					"updated": "2018-11-02T11:33:16.000+0000"
				},
				{
					"id": "443268",
					"author": {
						"name": "fahad86",
						"key": "fahad86",
						"displayName": "Muhammad Ahmed Fahad",
						"active": true,
						"timeZone": "Asia/Shanghai"
					},
					"body": "The Crashes freeze seems to have gone down drastically on the https://www.dropbox.com/s/zasd5dd7j9xl7lx/mobilesdk-7.4.2-osx.zip?dl=0 SDK and I'm using it on production with:\r\n    <property name=\"run-on-main-thread\" type=\"bool\">true</property>\r\nand\r\n*removing* <use-jscore-framework>false</use-jscore-framework>\r\n\r\nHowever I am tracking a few crashes that seem to directly relate to the JS timer changes:\r\n\r\nKrollContext.m\r\n\r\nCrashed Thread\r\n\r\n0\tJavaScriptCore 0x00000001c6a6427c JSC::LLInt::setUpCall() + 288\r\n1\tJavaScriptCore 0x00000001c6351120 llint_entry + 29948\r\n2\tJavaScriptCore 0x00000001c6351134 llint_entry + 29968\r\n3\tJavaScriptCore 0x00000001c6351134 llint_entry + 29968\r\n4\tJavaScriptCore 0x00000001c6351134 llint_entry + 29968\r\n5\tJavaScriptCore 0x00000001c6351134 llint_entry + 29968\r\n6\tJavaScriptCore 0x00000001c6351134 llint_entry + 29968\r\n7\tJavaScriptCore 0x00000001c6351598 llint_entry + 31092\r\n8\tJavaScriptCore 0x00000001c6351134 llint_entry + 29968\r\n9\tJavaScriptCore 0x00000001c63510cc llint_entry + 29864\r\n10\tJavaScriptCore 0x00000001c6349a1c llintPCRangeStart + 296\r\n11\tJavaScriptCore 0x00000001c69c13f0 JSC::Interpreter::executeCall() + 420\r\n12\tJavaScriptCore 0x00000001c6b78068 JSC::profiledCall() + 168\r\n13\tJavaScriptCore 0x00000001c637f284 JSObjectCallAsFunction + 364\r\n14\tJavaScriptCore 0x00000001c62e9284 -[JSValue callWithArguments:] + 288\r\n*{color:red}!15\tSpacious千居 0x0000000100ebe1c8 __56-[JSTimerManager setIntervalFromArguments:shouldRepeat:]_block_invoke (KrollContext.m:1611){color}*\r\n16\tFoundation 0x00000001bfafc5fc __NSFireTimer + 80\r\n17\tCoreFoundation 0x00000001befdabf0 __CFRUNLOOP_IS_CALLING_OUT_TO_A_TIMER_CALLBACK_FUNCTION__ + 24\r\n18\tCoreFoundation 0x00000001befda920 __CFRunLoopDoTimer + 860\r\n19\tCoreFoundation 0x00000001befda154 __CFRunLoopDoTimers + 244\r\n20\tCoreFoundation 0x00000001befd5030 __CFRunLoopRun + 1876\r\n21\tCoreFoundation 0x00000001befd45b8 CFRunLoopRunSpecific + 432\r\n22\tGraphicsServices 0x00000001c1248584 GSEventRunModal + 96\r\n23\tUIKitCore 0x00000001ebf98bc8 UIApplicationMain + 208\r\n24\tSpacious千居 0x0000000100eaef44 main (main.m:30)\r\n25\tlibdyld.dylib 0x00000001bea94b94 start + 0",
					"updateAuthor": {
						"name": "fahad86",
						"key": "fahad86",
						"displayName": "Muhammad Ahmed Fahad",
						"active": true,
						"timeZone": "Asia/Shanghai"
					},
					"created": "2018-11-05T02:23:36.000+0000",
					"updated": "2018-11-05T02:28:03.000+0000"
				},
				{
					"id": "443337",
					"author": {
						"name": "mj",
						"key": "mj",
						"displayName": "martin",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "With SDK 7.5.0.v20181102122228 and SDK 7.4.2.v20181101134650 our app now runs fine on iOS 12.x, 11.x and 10.x, but crashes shortly after every startup (on both device and simulator) on iOS 9.x and iOS 8.x:\r\n\r\n[ERROR] :  The application has crashed with an uncaught exception 'NSInvalidArgumentException'.\r\n[ERROR] :  Reason:\r\n[ERROR] :  +[NSTimer scheduledTimerWithTimeInterval:repeats:block:]: unrecognized selector sent to class 0x10c4a3e38\r\n[ERROR] :  Stack trace:\r\n[ERROR] :  0   CoreFoundation                      0x000000010c281e65 __exceptionPreprocess + 165\r\n[ERROR] :  1   libobjc.A.dylib                     0x000000010b897deb objc_exception_throw + 48\r\n[ERROR] :  2   CoreFoundation                      0x000000010c28a38d +[NSObject(NSObject) doesNotRecognizeSelector:] + 205\r\n[ERROR] :  3   CoreFoundation                      0x000000010c1d790a ___forwarding___ + 970\r\n[ERROR] :  4   CoreFoundation                      0x000000010c1d74b8 _CF_forwarding_prep_0 + 120\r\n[ERROR] :  *{color:red}5   ---------                           0x000000010636bf5b -[KrollTimerManager setIntervalFromArguments:shouldRepeat:] + 475{color}*\r\n[ERROR] :  6   ---------                           0x000000010636b975 __35-[KrollTimerManager initInContext:]_block_invoke.298 + 69\r\n[ERROR] :  7   CoreFoundation                      0x000000010c1701cc __invoking___ + 140\r\n[ERROR] :  8   CoreFoundation                      0x000000010c17001e -[NSInvocation invoke] + 286\r\n[ERROR] :  9   JavaScriptCore                      0x0000000106e15533 _ZN3JSC24ObjCCallbackFunctionImpl4callEP9JSContextP13OpaqueJSValuemPKPKS3_PS6_ + 451\r\n[ERROR] :  10  JavaScriptCore                      0x0000000106e150a6 _ZN3JSCL34objCCallbackFunctionCallAsFunctionEPK15OpaqueJSContextP13OpaqueJSValueS4_mPKPKS3_PS6_ + 262\r\n[ERROR] :  11  JavaScriptCore                      0x0000000106e1632d _ZN3JSC19APICallbackFunction4callINS_20ObjCCallbackFunctionEEExPNS_9ExecStateE + 573\r\n[ERROR] :  12  JavaScriptCore                      0x0000000106de03b0 _ZN3JSC5LLInt9setUpCallEPNS_9ExecStateEPNS_11InstructionENS_22CodeSpecializationKindENS_7JSValueEPNS_17LLIntCallLinkInfoE + 528\r\n[ERROR] :  13  JavaScriptCore                      0x0000000106de73cd llint_entry + 22900\r\n[ERROR] :  14  JavaScriptCore                      0x0000000106de73d8 llint_entry + 22911\r\n[ERROR] :  15  ???                                 0x00000198e0ba8c3a 0x0 + 1756116978746\r\n[ERROR] :  16  JavaScriptCore                      0x0000000106de73d8 llint_entry + 22911\r\n[ERROR] :  17  JavaScriptCore                      0x0000000106de736d llint_entry + 22804\r\n[ERROR] :  18  JavaScriptCore                      0x0000000106de73d8 llint_entry + 22911\r\n[ERROR] :  19  JavaScriptCore                      0x0000000106de73d8 llint_entry + 22911\r\n[ERROR] :  20  JavaScriptCore                      0x0000000106de736d llint_entry + 22804\r\n[ERROR] :  21  JavaScriptCore                      0x0000000106de73d8 llint_entry + 22911\r\n[ERROR] :  22  JavaScriptCore                      0x0000000106de73d8 llint_entry + 22911\r\n[ERROR] :  23  JavaScriptCore                      0x0000000106de736d llint_entry + 22804\r\n[ERROR] :  24  JavaScriptCore                      0x0000000106de73d8 llint_entry + 22911\r\n[ERROR] :  25  JavaScriptCore                      0x0000000106de73d8 llint_entry + 22911\r\n[ERROR] :  26  JavaScriptCore                      0x0000000106de73d8 llint_entry + 22911\r\n[ERROR] :  27  JavaScriptCore                      0x0000000106de73d8 llint_entry + 22911\r\n[ERROR] :  28  JavaScriptCore                      0x0000000106de73d8 llint_entry + 22911\r\n[ERROR] :  29  JavaScriptCore                      0x0000000106de1849 vmEntryToJavaScript + 326\r\n[ERROR] :  30  JavaScriptCore                      0x0000000106cb4ee9 _ZN3JSC7JITCode7executeEPNS_2VMEPNS_14ProtoCallFrameE + 169\r\n[ERROR] :  31  JavaScriptCore                      0x0000000106c9b7f4 _ZN3JSC11Interpreter7executeEPNS_17ProgramExecutableEPNS_9ExecStateEPNS_8JSObjectE + 10404\r\n[ERROR] :  32  JavaScriptCore                      0x0000000106aa54b6 _ZN3JSC8evaluateEPNS_9ExecStateERKNS_10SourceCodeENS_7JSValueERN3WTF8NakedPtrINS_9ExceptionEEE + 470\r\n[ERROR] :  33  JavaScriptCore                      0x0000000106cfa548 JSEvaluateScript + 424\r\n[ERROR] :  34  ---------                           0x0000000106367847 -[KrollEval jsInvokeInContext:exception:] + 263\r\n[ERROR] :  35  ---------                           0x0000000106363199 -[KrollBridge loadCommonJSModule:withSourceURL:] + 409\r\n[ERROR] :  36  ---------                           0x00000001063640e2 -[KrollBridge loadJavascriptText:fromFile:withContext:] + 98\r\n[ERROR] :  37  ---------                           0x000000010636436c -[KrollBridge cachedLoadAsFile:asJSON:withContext:] + 268\r\n[ERROR] :  38  ---------                           0x000000010636449c -[KrollBridge loadAsFile:withContext:] + 268\r\n[ERROR] :  39  ---------                           0x00000001063647e2 -[KrollBridge loadAsFileOrDirectory:withContext:] + 82\r\n[ERROR] :  40  ---------                           0x0000000106365145 -[KrollBridge require:path:] + 949\r\n[ERROR] :  41  ---------                           0x000000010636920b CommonJSRequireCallback + 187\r\n[ERROR] :  42  JavaScriptCore                      0x0000000106cfbbab _ZN3JSC19APICallbackFunction4callINS_18JSCallbackFunctionEEExPNS_9ExecStateE + 571\r\n[ERROR] :  43  JavaScriptCore                      0x0000000106de03b0 _ZN3JSC5LLInt9setUpCallEPNS_9ExecStateEPNS_11InstructionENS_22CodeSpecializationKindENS_7JSValueEPNS_17LLIntCallLinkInfoE + 528\r\n[ERROR] :  44  JavaScriptCore                      0x0000000106de73cd llint_entry + 22900\r\n[ERROR] :  45  JavaScriptCore                      0x0000000106de73d8 llint_entry + 22911\r\n[ERROR] :  46  JavaScriptCore                      0x0000000106de73d8 llint_entry + 22911\r\n[ERROR] :  47  JavaScriptCore                      0x0000000106de1849 vmEntryToJavaScript + 326\r\n[ERROR] :  48  JavaScriptCore                      0x0000000106cb4ee9 _ZN3JSC7JITCode7executeEPNS_2VMEPNS_14ProtoCallFrameE + 169\r\n[ERROR] :  49  JavaScriptCore                      0x0000000106c9b7f4 _ZN3JSC11Interpreter7executeEPNS_17ProgramExecutableEPNS_9ExecStateEPNS_8JSObjectE + 10404\r\n[ERROR] :  50  JavaScriptCore                      0x0000000106aa54b6 _ZN3JSC8evaluateEPNS_9ExecStateERKNS_10SourceCodeENS_7JSValueERN3WTF8NakedPtrINS_9ExceptionEEE + 470\r\n[ERROR] :  51  JavaScriptCore                      0x0000000106cfa548 JSEvaluateScript + 424\r\n[ERROR] :  52  ---------                           0x00000001063616d2 -[KrollBridge evalFileOnThread:context:] + 1314\r\n[ERROR] :  53  ---------                           0x000000010636722c -[KrollInvocation invoke:] + 124\r\n[ERROR] :  54  ---------                           0x00000001063684b3 -[KrollContext invoke:] + 163\r\n[ERROR] :  55  ---------                           0x0000000106368879 -[KrollContext invokeOnThread:method:withObject:callback:selector:] + 169\r\n[ERROR] :  56  ---------                           0x0000000106361854 -[KrollBridge evalFile:callback:selector:] + 116\r\n[ERROR] :  57  ---------                           0x00000001063627f7 -[KrollBridge didStartNewContext:] + 2935\r\n[ERROR] :  58  ---------                           0x000000010636912f -[KrollContext main] + 1775\r\n[ERROR] :  59  ---------                           0x0000000106368287 __21-[KrollContext start]_block_invoke + 39\r\n[ERROR] :  60  libdispatch.dylib                   0x000000010d09fd59 _dispatch_call_block_and_release + 12\r\n[ERROR] :  61  libdispatch.dylib                   0x000000010d0bb4a7 _dispatch_client_callout + 8\r\n[ERROR] :  62  libdispatch.dylib                   0x000000010d0a5f2d _dispatch_main_queue_callback_4CF + 714\r\n[ERROR] :  63  CoreFoundation                      0x000000010c1e1d09 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ + 9\r\n[ERROR] :  64  CoreFoundation                      0x000000010c1a32c9 __CFRunLoopRun + 2073\r\n[ERROR] :  65  CoreFoundation                      0x000000010c1a2828 CFRunLoopRunSpecific + 488\r\n[ERROR] :  66  GraphicsServices                    0x000000010df1cad2 GSEventRunModal + 161\r\n[ERROR] :  67  UIKit                               0x0000000108959610 UIApplicationMain + 171\r\n[ERROR] :  68  ---------                           0x000000010634e683 main + 115\r\n[ERROR] :  69  libdyld.dylib                       0x000000010d0ea92d start + 1\r\n[ERROR] :  70  ???                                 0x0000000000000001 0x0 + 1\r\n",
					"updateAuthor": {
						"name": "mj",
						"key": "mj",
						"displayName": "martin",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-07T00:52:37.000+0000",
					"updated": "2018-11-07T00:52:37.000+0000"
				},
				{
					"id": "443340",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~fahad86], check the updated 7.4.2 build: https://www.dropbox.com/s/zasd5dd7j9xl7lx/mobilesdk-7.4.2-osx.zip?dl=0 It improves memory management of timer callbacks and arguments for certain edge cases.\r\n\r\n[~mj], we are currently working on a compatibility fix for iOS <10",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-07T01:15:37.000+0000",
					"updated": "2018-11-07T01:15:37.000+0000"
				},
				{
					"id": "443404",
					"author": {
						"name": "venkateshkumarg",
						"key": "venkateshkumarg",
						"displayName": "Venkateshkumar",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hi Jan,\r\n\r\nWe using device with OS Version: iPhone OS 12.0.1 (16A404). Crashes happening on iOS 12.x only. \r\n*No crashes on 11.x and 10.x*\r\n\r\nI tested my app on 7.4.2 after installing it : appc ti sdk install --branch 7_4_X 7.4.2.v20181101134650\r\nand still the app freezed suddenly at point and then app crashed.\r\nI have enabled the two properties as you mentioned:\r\n<property name=\"run-on-main-thread\" type=\"bool\">true</property>\r\n<use-jscore-framework>true</use-jscore-framework>\r\n\r\n*Scenario*\r\n* App launching without crashes and landing in dashboard page.\r\n* Now, Kill the app manually and Again, Open the app.\r\n* App crash issue occurred. \r\n\r\n*Please check my crash report*\r\n1 proc_state com.scalepoint.ecbmobile: Foreground: false 101 16:07:31.455003 +0530 symptomsd\r\n1 proc_state call _saveAndUnloadSelectState 101 16:07:31.455365 +0530 symptomsd\r\n1 rnf NBSM Current state: normal, changed: systemForeground to 0 for net type 0 101 16:07:31.455556 +0530 symptomsd\r\n1 rnf NBSM Eligible to go to broken 101 16:07:31.455738 +0530 symptomsd\r\n1 rnf NBSM Current state: normal, changed: systemForeground to 0 for net type 0, eligible for broken but constraints unsatisfied (0,0) 101 16:07:31.455877 +0530 symptomsd\r\n1 Formulating report for corpse[349] Scalepoint 350 16:07:31.593475 +0530 ReportCrash\r\n1 default notify_register_check() failed with error 1000000 350 16:07:31.598174 +0530 ReportCrash\r\n1 Report of type '109(<private>)' not saved because the limit of 25 logs has been reached 350 16:07:31.617486 +0530 ReportCrash\r\n1 Notice: This report is abbreviated for syslog inclusion because it could not be saved to disk.\r\nSymbolication may be possible by manually cleaning up and including the Binary Image section of a full report from this same device – good luck! 350 16:07:31.621271 +0530 ReportCrash\r\n1 Process: Scalepoint [349]\r\nPath: /private/var/containers/Bundle/Application/1D5826DA-D537-44E2-B841-3644DEB3097F/Scalepoint.app/Scalepoint\r\nOS Version: iPhone OS 12.0.1 (16A404) 350 16:07:31.621422 +0530 ReportCrash\r\n1 Exception Type: EXC_BAD_ACCESS (SIGSEGV)\r\nException Subtype: KERN_INVALID_ADDRESS at 0x0000000000000010\r\nVM Region Info: 0x10 is not in any region. Bytes before following region: 4296818672\r\nREGION TYPE START - END [ VSIZE] PRT/MAX SHRMOD REGION DETAIL\r\nUNUSED SPACE AT START\r\n--->\r\n__TEXT 00000001001c4000-000000010054c000 [ 3616K] r-x/r-x SM=COW ...pp/Scalepoint\r\n\r\nTermination Signal: Segmentation fault: 11\r\nTermination Reason: Namespace SIGNAL, Code 0xb\r\nTerminating Process: exc handler [349]\r\nTriggered by Thread: 0 350 16:07:31.621805 +0530 ReportCrash\r\n1 Thread 0 name: Dispatch queue: com.apple.main-thread\r\nThread 0 Crashed:\r\n\r\n",
					"updateAuthor": {
						"name": "venkateshkumarg",
						"key": "venkateshkumarg",
						"displayName": "Venkateshkumar",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-11-08T06:57:37.000+0000",
					"updated": "2018-11-08T06:57:37.000+0000"
				},
				{
					"id": "443409",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~venkateshkumarg], you crash report is incomplete. Please connect your device to iTunes and sync it to fix the issue (1 Report of type '109(<private>)' not saved because the limit of 25 logs has been reached) and update your comment with the full crash report. Also make sure it is symbolicated so we can properly see what is going on. Thanks!",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-08T10:55:27.000+0000",
					"updated": "2018-11-08T10:55:27.000+0000"
				},
				{
					"id": "443410",
					"author": {
						"name": "venkateshkumarg",
						"key": "venkateshkumarg",
						"displayName": "Venkateshkumar",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hi Jan,\r\n\r\n*Please check my updated full crash report:* [https://www.dropbox.com/s/rkvt63bizpjbsqm/Scalepoint-2018-11-08-171656.crash?dl=0]\r\n\r\nIncident Identifier: 667E8DBE-0C22-4083-A87B-1C9FB29D0DC9\r\nCrashReporter Key:   987e82d3b7c6d177d5a5dcfb710d06e5db44f1f8\r\nHardware Model:      iPad5,3\r\nProcess:             Scalepoint [420]\r\nPath:                /private/var/containers/Bundle/Application/8435F3FD-62E4-4F60-A8A2-F23083ACE5BF/Scalepoint.app/Scalepoint\r\nIdentifier:          com.scalepoint.ecbmobile\r\nVersion:             2018110800 (3.2.3)\r\nCode Type:           ARM-64 (Native)\r\nRole:                Non UI\r\nParent Process:      launchd [1]\r\nCoalition:           com.scalepoint.ecbmobile [536]\r\n\r\n\r\nDate/Time:           2018-11-08 17:16:56.1464 +0530\r\nLaunch Time:         2018-11-08 17:16:54.6949 +0530\r\nOS Version:          iPhone OS 12.1 (16B92)\r\nBaseband Version:    n/a\r\nReport Version:      104\r\n\r\nException Type:  EXC_CRASH (SIGABRT)\r\nException Codes: 0x0000000000000000, 0x0000000000000000\r\nException Note:  EXC_CORPSE_NOTIFY\r\nTermination Reason: Namespace OBJC, Code 0x1\r\nTriggered by Thread:  0\r\n\r\nThread 0 name:  Dispatch queue: com.apple.main-thread\r\nThread 0 Crashed:\r\n0   libsystem_kernel.dylib        \t0x0000000198afddf8 0x198adc000 + 138744\r\n1   libsystem_kernel.dylib        \t0x0000000198af7838 0x198adc000 + 112696\r\n2   libsystem_kernel.dylib        \t0x0000000198af77d4 0x198adc000 + 112596\r\n3   libobjc.A.dylib               \t0x00000001981394b4 0x198133000 + 25780\r\n4   libobjc.A.dylib               \t0x000000019813940c 0x198133000 + 25612\r\n5   libobjc.A.dylib               \t0x0000000198144b0c 0x198133000 + 72460\r\n6   libobjc.A.dylib               \t0x0000000198151098 0x198133000 + 123032\r\n7   Scalepoint                    \t0x000000010072a0e0 0x1006a0000 + 565472\r\n8   libobjc.A.dylib               \t0x000000019815338c 0x198133000 + 131980\r\n9   FrontBoardServices            \t0x000000019b9dbaa4 0x19b990000 + 309924\r\n10  FrontBoardServices            \t0x000000019b9db728 0x19b990000 + 309032\r\n11  FrontBoardServices            \t0x000000019b9dbd44 0x19b990000 + 310596\r\n12  CoreFoundation                \t0x0000000198ef81cc 0x198e4c000 + 704972\r\n13  CoreFoundation                \t0x0000000198ef814c 0x198e4c000 + 704844\r\n14  CoreFoundation                \t0x0000000198ef7a30 0x198e4c000 + 703024\r\n15  CoreFoundation                \t0x0000000198ef28fc 0x198e4c000 + 682236\r\n16  CoreFoundation                \t0x0000000198ef21cc 0x198e4c000 + 680396\r\n17  GraphicsServices              \t0x000000019b169584 0x19b15e000 + 46468\r\n18  UIKitCore                     \t0x00000001c5d2d054 0x1c5445000 + 9338964\r\n19  Scalepoint                    \t0x00000001006a7994 0x1006a0000 + 31124\r\n20  libdyld.dylib                 \t0x00000001989b2bb4 0x1989b2000 + 2996\r\n\r\nThread 1:\r\n0   libsystem_pthread.dylib       \t0x0000000198b86ce8 0x198b78000 + 60648\r\n\r\nThread 2:\r\n0   libsystem_pthread.dylib       \t0x0000000198b86ce8 0x198b78000 + 60648\r\n\r\nThread 3:\r\n0   libsystem_pthread.dylib       \t0x0000000198b86ce8 0x198b78000 + 60648\r\n\r\nThread 4:\r\n0   libsystem_pthread.dylib       \t0x0000000198b86ce8 0x198b78000 + 60648\r\n\r\nThread 5:\r\n0   libsystem_pthread.dylib       \t0x0000000198b86ce8 0x198b78000 + 60648\r\n\r\nThread 6 name:  com.apple.uikit.eventfetch-thread\r\nThread 6:\r\n0   libsystem_kernel.dylib        \t0x0000000198af3ed0 0x198adc000 + 98000\r\n1   libsystem_kernel.dylib        \t0x0000000198af33a8 0x198adc000 + 95144\r\n2   CoreFoundation                \t0x0000000198ef7bc4 0x198e4c000 + 703428\r\n3   CoreFoundation                \t0x0000000198ef2a60 0x198e4c000 + 682592\r\n4   CoreFoundation                \t0x0000000198ef21cc 0x198e4c000 + 680396\r\n5   Foundation                    \t0x00000001998e7404 0x1998df000 + 33796\r\n6   Foundation                    \t0x00000001998e72b0 0x1998df000 + 33456\r\n7   UIKitCore                     \t0x00000001c5e1a808 0x1c5445000 + 10311688\r\n8   Foundation                    \t0x0000000199a1a1ac 0x1998df000 + 1290668\r\n9   libsystem_pthread.dylib       \t0x0000000198b832ac 0x198b78000 + 45740\r\n10  libsystem_pthread.dylib       \t0x0000000198b8320c 0x198b78000 + 45580\r\n11  libsystem_pthread.dylib       \t0x0000000198b86cf4 0x198b78000 + 60660\r\n\r\nThread 7:\r\n0   libsystem_pthread.dylib       \t0x0000000198b86ce8 0x198b78000 + 60648\r\n\r\nThread 8:\r\n0   libsystem_pthread.dylib       \t0x0000000198b86ce8 0x198b78000 + 60648\r\n\r\nThread 9:\r\n0   libsystem_kernel.dylib        \t0x0000000198af3f24 0x198adc000 + 98084\r\n1   libdispatch.dylib             \t0x0000000198943074 0x198941000 + 8308\r\n2   libdispatch.dylib             \t0x00000001989439d0 0x198941000 + 10704\r\n3   libdispatch.dylib             \t0x00000001989517ec 0x198941000 + 67564\r\n4   libsystem_pthread.dylib       \t0x0000000198b832ac 0x198b78000 + 45740\r\n5   libsystem_pthread.dylib       \t0x0000000198b8320c 0x198b78000 + 45580\r\n6   libsystem_pthread.dylib       \t0x0000000198b86cf4 0x198b78000 + 60660\r\n\r\nThread 10 name:  JavaScriptCore bmalloc scavenger\r\nThread 10:\r\n0   libsystem_kernel.dylib        \t0x0000000198afef0c 0x198adc000 + 143116\r\n1   libsystem_pthread.dylib       \t0x0000000198b7bcd8 0x198b78000 + 15576\r\n2   libc++.1.dylib                \t0x00000001980cc568 0x1980c4000 + 34152\r\n3   JavaScriptCore                \t0x00000001a029ffd8 0x1a023e000 + 401368\r\n4   JavaScriptCore                \t0x00000001a029fe88 0x1a023e000 + 401032\r\n5   JavaScriptCore                \t0x00000001a029eb24 0x1a023e000 + 396068\r\n6   JavaScriptCore                \t0x00000001a029e1e0 0x1a023e000 + 393696\r\n7   JavaScriptCore                \t0x00000001a029fc8c 0x1a023e000 + 400524\r\n8   libsystem_pthread.dylib       \t0x0000000198b832ac 0x198b78000 + 45740\r\n9   libsystem_pthread.dylib       \t0x0000000198b8320c 0x198b78000 + 45580\r\n10  libsystem_pthread.dylib       \t0x0000000198b86cf4 0x198b78000 + 60660\r\n\r\nThread 11 name:  WTF::AutomaticThread\r\nThread 11:\r\n0   libsystem_kernel.dylib        \t0x0000000198afef0c 0x198adc000 + 143116\r\n1   libsystem_pthread.dylib       \t0x0000000198b7bcd8 0x198b78000 + 15576\r\n2   JavaScriptCore                \t0x00000001a0288b48 0x1a023e000 + 305992\r\n3   JavaScriptCore                \t0x00000001a026fd10 0x1a023e000 + 204048\r\n4   JavaScriptCore                \t0x00000001a0249654 0x1a023e000 + 46676\r\n5   JavaScriptCore                \t0x00000001a02499f4 0x1a023e000 + 47604\r\n6   JavaScriptCore                \t0x00000001a0286d60 0x1a023e000 + 298336\r\n7   JavaScriptCore                \t0x00000001a02882c8 0x1a023e000 + 303816\r\n8   libsystem_pthread.dylib       \t0x0000000198b832ac 0x198b78000 + 45740\r\n9   libsystem_pthread.dylib       \t0x0000000198b8320c 0x198b78000 + 45580\r\n10  libsystem_pthread.dylib       \t0x0000000198b86cf4 0x198b78000 + 60660\r\n\r\nThread 12 name:  WTF::AutomaticThread\r\nThread 12:\r\n0   libsystem_kernel.dylib        \t0x0000000198afef0c 0x198adc000 + 143116\r\n1   libsystem_pthread.dylib       \t0x0000000198b7bcd8 0x198b78000 + 15576\r\n2   JavaScriptCore                \t0x00000001a0288b48 0x1a023e000 + 305992\r\n3   JavaScriptCore                \t0x00000001a026fd10 0x1a023e000 + 204048\r\n4   JavaScriptCore                \t0x00000001a0249654 0x1a023e000 + 46676\r\n5   JavaScriptCore                \t0x00000001a02499f4 0x1a023e000 + 47604\r\n6   JavaScriptCore                \t0x00000001a0286d60 0x1a023e000 + 298336\r\n7   JavaScriptCore                \t0x00000001a02882c8 0x1a023e000 + 303816\r\n8   libsystem_pthread.dylib       \t0x0000000198b832ac 0x198b78000 + 45740\r\n9   libsystem_pthread.dylib       \t0x0000000198b8320c 0x198b78000 + 45580\r\n10  libsystem_pthread.dylib       \t0x0000000198b86cf4 0x198b78000 + 60660\r\n\r\nThread 0 crashed with ARM Thread State (64-bit):\r\n    x0: 0x0000000000000008   x1: 0x0000000000000001   x2: 0x0000000000000000   x3: 0x0000000000000000\r\n    x4: 0x0000000281d30400   x5: 0x0000000000000080   x6: 0x00676f6c7379732f   x7: 0x0000000000000ec0\r\n    x8: 0x0000000000000020   x9: 0x0000000281d30400  x10: 0xcccccccccccccccd  x11: 0x000000000000000a\r\n   x12: 0x0000000000000000  x13: 0x0000000000000031  x14: 0x0000000000000010  x15: 0x000000000000001c\r\n   x16: 0x0000000000000209  x17: 0x0000000000000000  x18: 0x0000000000000000  x19: 0x0000000000000080\r\n   x20: 0x0000000281d30400  x21: 0x0000000000000000  x22: 0x0000000000000000  x23: 0x0000000000000001\r\n   x24: 0x0000000000000008  x25: 0x0000000000000001  x26: 0x0000000100eaec60  x27: 0x0000000000000000\r\n   x28: 0x0000000280f7c708   fp: 0x000000016f75e3f0   lr: 0x0000000198af7838\r\n    sp: 0x000000016f75e3b0   pc: 0x0000000198afddf8 cpsr: 0x40000000",
					"updateAuthor": {
						"name": "venkateshkumarg",
						"key": "venkateshkumarg",
						"displayName": "Venkateshkumar",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-11-08T10:59:50.000+0000",
					"updated": "2018-11-08T12:09:46.000+0000"
				},
				{
					"id": "443418",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "We have a new build which assures compatibility with iOS 9 and 8 of the new timer implementation. You can get it here: https://www.dropbox.com/s/vqbrgqx04a68cnc/mobilesdk-7.4.2.v20181107185133-osx.zip?dl=0\r\n\r\n[~venkateshkumarg], that crash is not symbolicated which does not really help us. Please provide a symbolicated crash log.\r\n\r\n",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-08T14:23:53.000+0000",
					"updated": "2018-11-08T14:23:53.000+0000"
				},
				{
					"id": "443506",
					"author": {
						"name": "venkateshkumarg",
						"key": "venkateshkumarg",
						"displayName": "Venkateshkumar",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hi Jan,\r\nWhere i can get that symbolicated crash log.\r\n\r\n*Devices and OS*\r\n* iPhone (iOS12, iOS11, iOS10 and lesser version) - No crashes works perfectly\r\n* iPad (iOS11, iOS10 and lesser version) - No crashes works perfectly\r\n* iPad (iOS12) - *Crashing frequently for below scenario*\r\n\r\n*Scenario*\r\n* App launching without crashes and landing in dashboard page.\r\n* Now, Kill the app manually and Again, Open the app.\r\n* App crash issue occurred.\r\n\r\nIs below log will help to find the issue?\r\n1\tprocess_info\t[Scalepoint:335] SyscallError: setpriority(PRIO_DARWIN_ROLE, 335, 3): No such process\t60\t11:13:28.643549 +0530\tassertiond\r\n1\tprocess_info\tSyscallError: task_info failed\t60\t11:13:28.648927 +0530\tassertiond\r\n1\tprocess_info\tSyscallError: task_info failed\t60\t11:13:28.649062 +0530\tassertiond\r\n1\tprocess_info\tSyscallError: task_info failed\t60\t11:13:28.651255 +0530\tassertiond\r\n1\tprocess_info\tSyscallError: task_info failed\t60\t11:13:28.651454 +0530\tassertiond\r\n1\tproc_state\tCan't get most elevated app state from dictionary {\r\n    BKSApplicationStateExtensionKey = 0;\r\n    SBApplicationStateDisplayIDKey = \"com.scalepoint.ecbmobile\";\r\n    SBApplicationStateKey = 0;\r\n    SBApplicationStateProcessIDKey = 335;\r\n    SBApplicationStateRunningReasonsKey =     (\r\n                {\r\n            SBApplicationStateRunningReasonAssertionIdentifierKey = \"FBSceneSnapshotAction:com.scalepoint.ecbmobile\";\r\n            SBApplicationStateRunningReasonAssertionReasonKey = 4;\r\n        },\r\n                {\r\n            SBApplicationStateRunningReasonAssertionIdentifierKey = Suspending;\r\n            SBApplicationStateRunningReasonAssertionReasonKey = 10001;\r\n        },\r\n                {\r\n            SBApplicationStateRunningReasonAssertionIdentifierKey = \"Shared Background Assertion 1 for com.scalepoint.ecbmobile\";\r\n            SBApplicationStateRunningReasonAssertionReasonKey = 4;\r\n        }\r\n    );\r\n}\t105\t11:13:28.742744 +0530\tsymptomsd\r\n1\tDataStore\tNo data found at /var/mobile/Library/UserNotifications/com.scalepoint.ecbmobile/Topics.plist\t50\t11:13:29.236376 +0530\tSpringBoard\r\n1\t\tTask <3AF38FBE-D39D-4E7A-A40E-0542AE71814C>.<1> finished with error - code: -1100\t338\t11:13:30.105377 +0530\tScalepoint\r\n1\t\tTask <E33012DC-3A7E-46AA-A867-731F745645DA>.<1> finished with error - code: -1100\t338\t11:13:30.119897 +0530\tScalepoint\r\n1\t\tTask <3281B22B-4198-4A71-A803-C7760E17E23D>.<1> finished with error - code: -1100\t338\t11:13:30.135978 +0530\tScalepoint\r\n1\t\tTask <7C76F5F2-9691-4E64-BEF8-809492CD6119>.<1> finished with error - code: -1100\t338\t11:13:30.144695 +0530\tScalepoint\r\n1\tKeyboardArbiter\tHW kbd: Failed to set (null) as keyboard focus\t50\t11:13:30.221557 +0530\tSpringBoard\r\n1\tproc_state\tCan't get most elevated app state from dictionary {\r\n    BKSApplicationStateExtensionKey = 0;\r\n    SBApplicationStateDisplayIDKey = \"com.scalepoint.ecbmobile\";\r\n    SBApplicationStateKey = 0;\r\n    SBApplicationStateProcessIDKey = 338;\r\n    SBApplicationStateRunningReasonsKey =     (\r\n                {\r\n            SBApplicationStateRunningReasonAssertionIdentifierKey = Resume;\r\n            SBApplicationStateRunningReasonAssertionReasonKey = 10000;\r\n        }\r\n    );\r\n}\t105\t11:13:30.238820 +0530\tsymptomsd\r\n",
					"updateAuthor": {
						"name": "venkateshkumarg",
						"key": "venkateshkumarg",
						"displayName": "Venkateshkumar",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-11-13T06:40:07.000+0000",
					"updated": "2018-11-13T06:41:38.000+0000"
				},
				{
					"id": "443509",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~venkateshkumarg], please see https://stackoverflow.com/questions/25855389/how-to-symbolicate-crash-log-xcode for information how to get symbolicated crash logs for your app from Xcode.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-13T06:56:18.000+0000",
					"updated": "2018-11-13T06:56:18.000+0000"
				},
				{
					"id": "443511",
					"author": {
						"name": "venkateshkumarg",
						"key": "venkateshkumarg",
						"displayName": "Venkateshkumar",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hi Jan,\r\n\r\nPlease check symbolicated crash logs of my app from Xcode in the below link https://www.dropbox.com/s/nhatk51tm0q4g0u/Scalepoint%20%2013-11-18%2C%204-14%20PM.txt?dl=0",
					"updateAuthor": {
						"name": "venkateshkumarg",
						"key": "venkateshkumarg",
						"displayName": "Venkateshkumar",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-11-13T10:47:32.000+0000",
					"updated": "2018-11-13T10:47:32.000+0000"
				},
				{
					"id": "443513",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~venkateshkumarg], thank's for the symbolicated crash log. However, there are no indicators that this is related to JavaScriptCore or Timers. Please open a separate ticket and attach the crash log and, if possible, provide a reproducible test case, thanks.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-13T11:22:48.000+0000",
					"updated": "2018-11-13T11:22:48.000+0000"
				},
				{
					"id": "443514",
					"author": {
						"name": "venkateshkumarg",
						"key": "venkateshkumarg",
						"displayName": "Venkateshkumar",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Thanks Jan, Thanks for quick response. I will create new ticket with crash log and test case. ",
					"updateAuthor": {
						"name": "venkateshkumarg",
						"key": "venkateshkumarg",
						"displayName": "Venkateshkumar",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-11-13T11:27:10.000+0000",
					"updated": "2018-11-13T11:27:10.000+0000"
				},
				{
					"id": "443519",
					"author": {
						"name": "aboldt",
						"key": "aboldt",
						"displayName": "Alexander",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hi All, We have received issue from one of our customer. The app is continuously crashing under IOS12. It is working under IOS11 without issues. As downgrade is not possible on IOS level they are frustrated and looking for a fix.\r\n\r\nWe have already suggested to get recent Appcelerator SDK 7.4.2 and they have already added the possible jscore setting:\r\n\r\n{code:xml}\r\n<use-jscore-framework>false</use-jscore-framework>\r\n{code}\r\n\r\nCrashLogs can be downloaded under: https://drive.google.com/open?id=1m4ZV7zm4jR-3Ta9HtQ1bpiZmiZwHi8XA",
					"updateAuthor": {
						"name": "aboldt",
						"key": "aboldt",
						"displayName": "Alexander",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-11-13T14:59:03.000+0000",
					"updated": "2018-11-13T15:31:18.000+0000"
				},
				{
					"id": "443522",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "For 7.4.2 and onward it is important to have jscore *enabled* to benefit from the fixes made in the ticket. Also, i'm unable to access the logs you shared (missing permissions).",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-13T15:24:24.000+0000",
					"updated": "2018-11-13T15:24:24.000+0000"
				},
				{
					"id": "443524",
					"author": {
						"name": "aboldt",
						"key": "aboldt",
						"displayName": "Alexander",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hi Jan, thanks for the update. I've shared the drive doc again. Please let me know if you can access this now.",
					"updateAuthor": {
						"name": "aboldt",
						"key": "aboldt",
						"displayName": "Alexander",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-11-13T15:31:51.000+0000",
					"updated": "2018-11-13T15:31:51.000+0000"
				},
				{
					"id": "443526",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~aboldt], i see threads with {{KrollTimer}} in your crash log which mean you are not running with {{use-jscore-framework}} set to true and {{run-on-main-thread}} also set to true. Please make sure to properly configure the app in {{tiapp.xml}} and enabled JSCore as well as run-on-main-thread, then test again with the most recent 7.4.2 build from my comment above.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-13T15:36:43.000+0000",
					"updated": "2018-11-13T15:36:43.000+0000"
				},
				{
					"id": "443527",
					"author": {
						"name": "aboldt",
						"key": "aboldt",
						"displayName": "Alexander",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hi Jan, Thanks for the quick feedback. Please confirm that the following within tiapp.xml is the correct setting\r\n{code:java}\r\n<property name=\"run-on-main-thread\" type=\"bool\">false</property>\r\n    <ios>\r\n        ...\r\n        <use-jscore-framework>true</use-jscore-framework>\r\n{code}",
					"updateAuthor": {
						"name": "aboldt",
						"key": "aboldt",
						"displayName": "Alexander",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-11-13T15:57:28.000+0000",
					"updated": "2018-11-13T15:57:28.000+0000"
				},
				{
					"id": "443534",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "See my previous comment, {{run-on-main-thread}} must be {{true}}.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-13T18:49:26.000+0000",
					"updated": "2018-11-13T18:49:26.000+0000"
				},
				{
					"id": "443568",
					"author": {
						"name": "aboldt",
						"key": "aboldt",
						"displayName": "Alexander",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Customer has tested changes but the crashes are still consistent. new crash logs have been uploaded to: https://drive.google.com/open?id=1FGrko2EKct1rv4ShqDiRJhD0AtM0Lc0Z. I have search for the mentioned KrollTimer in those new logs but they are not recorded anymore. any pointers what could be the reason on this? \r\nThank you for your feedback.",
					"updateAuthor": {
						"name": "aboldt",
						"key": "aboldt",
						"displayName": "Alexander",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-11-14T11:05:44.000+0000",
					"updated": "2018-11-14T11:09:06.000+0000"
				},
				{
					"id": "443577",
					"author": {
						"name": "aboldt",
						"key": "aboldt",
						"displayName": "Alexander",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Additional Log files can be found here: https://drive.google.com/open?id=1a-Qu3rd18-Ea0W2wyfvxTHMUOFdF76fz Can we please get this reviewed and let us know on how this can be resolved for the customer. Thanks for your help.",
					"updateAuthor": {
						"name": "aboldt",
						"key": "aboldt",
						"displayName": "Alexander",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-11-14T15:14:17.000+0000",
					"updated": "2018-11-14T15:14:17.000+0000"
				},
				{
					"id": "443583",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Your crash reports are not symbolicated. Please send the symbolicated crash reports to [mailto:jvennemann@axway.com] so we don't spam this ticket. Thanks!",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-14T16:56:07.000+0000",
					"updated": "2018-11-14T16:56:07.000+0000"
				},
				{
					"id": "443620",
					"author": {
						"name": "fahad86",
						"key": "fahad86",
						"displayName": "Muhammad Ahmed Fahad",
						"active": true,
						"timeZone": "Asia/Shanghai"
					},
					"body": "Jan Vennemann, we are running our app based on: https://www.dropbox.com/s/vqbrgqx04a68cnc/mobilesdk-7.4.2.v20181107185133-osx.zip?dl=0 with the right flags on prod. Currently recording a bunch of the following crashes:\r\n\r\n{code:java}\r\nKrollContext.m\r\n\r\nName\t\r\nSIGSEGV\r\n\r\nReason\t\r\nSEGV_MAPERR\r\n\r\nCrashed Thread\r\n\r\n0\tJavaScriptCore 0x00000001bb8e027c JSC::LLInt::setUpCall() + 288\r\n1\tJavaScriptCore 0x00000001bb1cd120 llint_entry + 29948\r\n2\tJavaScriptCore 0x00000001bb1cd134 llint_entry + 29968\r\n3\tJavaScriptCore 0x00000001bb1cd134 llint_entry + 29968\r\n4\tJavaScriptCore 0x00000001bb1cd134 llint_entry + 29968\r\n5\tJavaScriptCore 0x00000001bb1cd134 llint_entry + 29968\r\n6\tJavaScriptCore 0x00000001bb1cd134 llint_entry + 29968\r\n7\tJavaScriptCore 0x00000001bb1cd598 llint_entry + 31092\r\n8\tJavaScriptCore 0x00000001bb1cd134 llint_entry + 29968\r\n9\tJavaScriptCore 0x00000001bb1cd0cc llint_entry + 29864\r\n10\tJavaScriptCore 0x00000001bb1c5a1c llintPCRangeStart + 296\r\n11\tJavaScriptCore 0x00000001bb83d3f0 JSC::Interpreter::executeCall() + 420\r\n12\tJavaScriptCore 0x00000001bb9f4068 JSC::profiledCall() + 168\r\n13\tJavaScriptCore 0x00000001bb1fb284 JSObjectCallAsFunction + 364\r\n14\tJavaScriptCore 0x00000001bb165284 -[JSValue callWithArguments:] + 288\r\n!\t15\tAppNameXXXX 0x000000010260595c -[KrollTimerTarget timerFired:] (KrollContext.m:1633)\r\n16\tFoundation 0x00000001b49785fc __NSFireTimer + 80\r\n17\tCoreFoundation 0x00000001b3e56bf0 __CFRUNLOOP_IS_CALLING_OUT_TO_A_TIMER_CALLBACK_FUNCTION__ + 24\r\n18\tCoreFoundation 0x00000001b3e56920 __CFRunLoopDoTimer + 860\r\n19\tCoreFoundation 0x00000001b3e56154 __CFRunLoopDoTimers + 244\r\n20\tCoreFoundation 0x00000001b3e51030 __CFRunLoopRun + 1876\r\n21\tCoreFoundation 0x00000001b3e505b8 CFRunLoopRunSpecific + 432\r\n22\tGraphicsServices 0x00000001b60c4584 GSEventRunModal + 96\r\n23\tUIKitCore 0x00000001e0e48bc8 UIApplicationMain + 208\r\n24\tAppNameXXXX 0x00000001025f6e04 main (main.m:30)\r\n25\tlibdyld.dylib 0x00000001b3910b94 start + 0\r\n{code}\r\n\r\n\r\n\r\nCould you kindly check if it is related to the changes in the SDK?",
					"updateAuthor": {
						"name": "fahad86",
						"key": "fahad86",
						"displayName": "Muhammad Ahmed Fahad",
						"active": true,
						"timeZone": "Asia/Shanghai"
					},
					"created": "2018-11-15T03:42:43.000+0000",
					"updated": "2018-11-15T03:42:43.000+0000"
				},
				{
					"id": "443637",
					"author": {
						"name": "venkateshkumarg",
						"key": "venkateshkumarg",
						"displayName": "Venkateshkumar",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"updateAuthor": {
						"name": "venkateshkumarg",
						"key": "venkateshkumarg",
						"displayName": "Venkateshkumar",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-11-15T09:52:21.000+0000",
					"updated": "2018-11-15T09:52:21.000+0000"
				},
				{
					"id": "443788",
					"author": {
						"name": "jonkravetz",
						"key": "jonkravetz",
						"displayName": "jon kravetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I'm on TiSDK 7.5.0 GA and experiencing random crashes in regard to tableview layout and interaction on an iPhone running iOS 12.0.1.\r\n\r\nThese iOS12 crashing problems need to be escalated and resolved as soon as possible. Should not be occurring on 7.5.0 GA.\r\n\r\nEssentially there is a survey with a scroll view consisting of about 15 table views with 7 rows per tableview.\r\n\r\nThe app will crash when app is building the tableview row contents.\r\n\r\nHere is the start of crash log (i dont see option to add file here):\r\n\r\nI EMA 11-20-18, 11-50 AM.crash ncident Identifier: 692EA414-187F-4611-97B6-C0242C702DD8\r\nCrashReporter Key: 784984f7c75d042e7cf638fab5227335f90e1750\r\nHardware Model: iPhone9,3\r\nProcess: EMA [734]\r\nPath: /private/var/containers/Bundle/Application/B43D450C-DBA9-4D2E-B92E-A512A6E93CE2/EMA.app/EMA\r\nIdentifier: com.pilrhealth.ema\r\nVersion: 1.2.0 (1.2.0)\r\nCode Type: ARM-64 (Native)\r\nRole: Non UI\r\nParent Process: launchd [1]\r\nCoalition: com.pilrhealth.ema [654]\r\n\r\nDate/Time: 2018-11-20 11:50:07.9619 -0800\r\nLaunch Time: 2018-11-20 11:43:59.7720 -0800\r\nOS Version: iPhone OS 12.0.1 (16A404)\r\nBaseband Version: 3.00.01\r\nReport Version: 104\r\n\r\nException Type: EXC_BAD_ACCESS (SIGSEGV)\r\nException Subtype: KERN_INVALID_ADDRESS at 0x0000000000000040\r\nVM Region Info: 0x40 is not in any region. Bytes before following region: 4306468800\r\nREGION TYPE START - END [ VSIZE] PRT/MAX SHRMOD REGION DETAIL\r\nUNUSED SPACE AT START\r\n---> \r\n__TEXT 0000000100af8000-0000000100e3c000 [ 3344K] r-x/r-x SM=COW ...2/EMA.app/EMA\r\n\r\nTriggered by Thread: 4\r\n\r\nThread 0 name: Dispatch queue: com.apple.main-thread\r\nThread 0:\r\n0 libsystem_kernel.dylib 0x00000001cc951ed0 mach_msg_trap + 8\r\n1 libsystem_kernel.dylib 0x00000001cc9513a8 mach_msg + 72\r\n2 CoreFoundation 0x00000001ccd55fb0 __CFRunLoopServiceMachPort + 236\r\n3 CoreFoundation 0x00000001ccd50e4c __CFRunLoopRun + 1396\r\n4 CoreFoundation 0x00000001ccd505b8 CFRunLoopRunSpecific + 436\r\n5 GraphicsServices 0x00000001cefc4584 GSEventRunModal + 100\r\n6 UIKitCore 0x00000001f9d14bc8 UIApplicationMain + 212\r\n7 EMA 0x0000000100afff10 main + 32528 (main.m:29)\r\n8 libdyld.dylib 0x00000001cc810b94 start + 4\r\n\r\nThread 1:\r\n0 libsystem_pthread.dylib 0x00000001cc9e4cfc start_wqthread + 0\r\n\r\nThread 2:\r\n0 libsystem_pthread.dylib 0x00000001cc9e4cfc start_wqthread + 0\r\n\r\nThread 3 name: com.apple.uikit.eventfetch-thread\r\nThread 3:\r\n0 libsystem_kernel.dylib 0x00000001cc951ed0 mach_msg_trap + 8\r\n1 libsystem_kernel.dylib 0x00000001cc9513a8 mach_msg + 72\r\n2 CoreFoundation 0x00000001ccd55fb0 __CFRunLoopServiceMachPort + 236\r\n3 CoreFoundation 0x00000001ccd50e4c __CFRunLoopRun + 1396\r\n4 CoreFoundation 0x00000001ccd505b8 CFRunLoopRunSpecific + 436\r\n5 Foundation 0x00000001cd7446a4 -[NSRunLoop+ 34468 (NSRunLoop) runMode:beforeDate:] + 300\r\n6 Foundation 0x00000001cd744550 -[NSRunLoop+ 34128 (NSRunLoop) runUntilDate:] + 148\r\n7 UIKitCore 0x00000001f9e0141c -[UIEventFetcher threadMain] + 136\r\n8 Foundation 0x00000001cd8773b0 _NSThreadstart_ + 1040\r\n9 libsystem_pthread.dylib 0x00000001cc9e12fc _pthread_body + 128\r\n10 libsystem_pthread.dylib 0x00000001cc9e125c _pthread_start + 48\r\n11 libsystem_pthread.dylib 0x00000001cc9e4d08 thread_start + 4\r\n\r\nThread 4 name: KrollContext<kroll$1>\r\nThread 4 Crashed:\r\n0 JavaScriptCore 0x00000001d47e0280 JSC::LLInt::setUpCall+ 7848576 (JSC::ExecState*, JSC::Instruction*, JSC::CodeSpecializationKind, JSC::JSValue, JSC::LLIntCallLinkInfo*) + 296\r\n1 JavaScriptCore 0x00000001d47e01a4 JSC::LLInt::setUpCall+ 7848356 (JSC::ExecState*, JSC::Instruction*, JSC::CodeSpecializationKind, JSC::JSValue, JSC::LLIntCallLinkInfo*) + 76\r\n2 JavaScriptCore 0x00000001d40cd120 llint_entry + 29952\r\n3 JavaScriptCore 0x00000001d40cd478 llint_entry + 30808\r\n4 JavaScriptCore 0x00000001d40cd0cc llint_entry + 29868\r\n5 JavaScriptCore 0x00000001d40cd0cc llint_entry + 29868\r\n6 JavaScriptCore 0x00000001d40cd0cc llint_entry + 29868\r\n7 JavaScriptCore 0x00000001d40cd0cc llint_entry + 29868\r\n8 JavaScriptCore 0x00000001d40cd134 llint_entry + 29972\r\n9 JavaScriptCore 0x00000001d40cd134 llint_entry + 29972\r\n10 JavaScriptCore 0x00000001d40cd134 llint_entry + 29972\r\n11 JavaScriptCore 0x00000001d40cd134 llint_entry + 29972\r\n12 JavaScriptCore 0x00000001d40cd134 llint_entry + 29972\r\n13 JavaScriptCore 0x00000001d40cd4e0 llint_entry + 30912\r\n14 JavaScriptCore 0x00000001d40cd134 llint_entry + 29972\r\n15 JavaScriptCore 0x00000001d40c5a1c vmEntryToJavaScript + 300\r\n16 JavaScriptCore 0x00000001d473d3f0 JSC::Interpreter::executeCall+ 7181296 (JSC::ExecState*, JSC::JSObject*, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) + 424\r\n17 JavaScriptCore 0x00000001d48f4068 JSC::profiledCall+ 8978536 (JSC::ExecState*, JSC::ProfilingReason, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) + 172\r\n18 JavaScriptCore 0x00000001d40fb284 JSObjectCallAsFunction + 368\r\n19 EMA 0x0000000100cf324c TiBindingEventProcess + 2077260 (TiBindingEvent.m:269)\r\n20 EMA 0x0000000100cf350c -[TiBindingCallbackInvoke invoke:] + 2077964 (TiBindingRunLoop.m:51)\r\n21 EMA 0x0000000100b15c64 -[KrollContext invoke:] + 121956 (KrollContext.m:1002)\r\n22 EMA 0x0000000100b17290 -[KrollContext main] + 127632 (KrollContext.m:1374)\r\n23 Foundation 0x00000001cd8773b0 _NSThreadstart_ + 1040\r\n24 libsystem_pthread.dylib 0x00000001cc9e12fc _pthread_body + 128\r\n25 libsystem_pthread.dylib 0x00000001cc9e125c _pthread_start + 48\r\n26 libsystem_pthread.dylib 0x00000001cc9e4d08 thread_start + 4\r\n\r\nThread 5 name: JavaScriptCore bmalloc scavenger\r\nThread 5:\r\n0 libsystem_kernel.dylib 0x00000001cc95cf0c __psynch_cvwait + 8\r\n1 libsystem_pthread.dylib 0x00000001cc9d9d48 _pthread_cond_wait$VARIANT$mp + 636\r\n2 libc++.1.dylib 0x00000001cbf28568 std::_1::condition_variable::do_timed_wait+ 34152 (std::1::unique_lock<std::1::mutex>&, std::1::chrono::time_point<std::1::chrono::system_clock, std::1::chrono::duration<long long, std::_1::ratio<1l, 1000000000l> > >) + 96\r\n3 JavaScriptCore 0x00000001d40c539c std::_1::cv_status std::1::condition_variable::wait_until<std::1::chrono::steady_clock, std::1::chrono::duration<long long, std::1::ratio<1l, 1000000000l> > >+ 398236 (std::1::unique_lock<std::1::mutex>&, std::1::chrono::time_point<std::1::chrono::steady_clock, std::1::chrono::duration<long long, std::_1::ratio<1l, 1000000000l> > > const&) + 124\r\n4 JavaScriptCore 0x00000001d40c524c std::_1::cv_status std::1::condition_variable_any::wait_until<std::1::unique_lock<bmalloc::Mutex>, std::1::chrono::steady_clock, std::1::chrono::duration<long long, std::1::ratio<1l, 1000000000l> > >+ 397900 (std::1::unique_lock<bmalloc::Mutex>&, std::1::chrono::time_point<std::1::chrono::steady_clock, std::1::chrono::duration<long long, std::_1::ratio<1l, 1000000000l> > > const&) + 112\r\n5 JavaScriptCore 0x00000001d40c3ee8 bmalloc::Scavenger::threadRunLoop+ 392936 () + 296\r\n6 JavaScriptCore 0x00000001d40c35a4 bmalloc::Scavenger::Scavenger+ 390564 (std::__1::lock_guard<bmalloc::Mutex>&) + 0\r\n7 JavaScriptCore 0x00000001d40c5050 std::_1::thread_specific_ptr<std::1::thread_struct>::set_pointer+ 397392 (std::1::_thread_struct*) + 0\r\n8 libsystem_pthread.dylib 0x00000001cc9e12fc _pthread_body + 128\r\n9 libsystem_pthread.dylib 0x00000001cc9e125c _pthread_start + 48\r\n10 libsystem_pthread.dylib 0x00000001cc9e4d08 thread_start + 4\r\n\r\nThread 6 name: com.apple.NSURLConnectionLoader\r\nThread 6:\r\n0 libsystem_kernel.dylib 0x00000001cc951ed0 mach_msg_trap + 8\r\n1 libsystem_kernel.dylib 0x00000001cc9513a8 mach_msg + 72\r\n2 CoreFoundation 0x00000001ccd55fb0 __CFRunLoopServiceMachPort + 236\r\n3 CoreFoundation 0x00000001ccd50e4c __CFRunLoopRun + 1396\r\n4 CoreFoundation 0x00000001ccd505b8 CFRunLoopRunSpecific + 436\r\n5 CFNetwork 0x00000001cd370e18 -[__CoreSchedulingSetRunnable runForever] + 212\r\n6 Foundation 0x00000001cd8773b0 _NSThreadstart_ + 1040\r\n7 libsystem_pthread.dylib 0x00000001cc9e12fc _pthread_body + 128\r\n8 libsystem_pthread.dylib 0x00000001cc9e125c _pthread_start + 48\r\n9 libsystem_pthread.dylib 0x00000001cc9e4d08 thread_start + 4\r\n\r\nThread 7:\r\n0 libsystem_pthread.dylib 0x00000001cc9e4cfc start_wqthread + 0\r\n\r\nThread 8:\r\n0 libsystem_pthread.dylib 0x00000001cc9e4cfc start_wqthread + 0\r\n\r\nThread 9 name: AVAudioSession Notify Thread\r\nThread 9:\r\n0 libsystem_kernel.dylib 0x00000001cc951ed0 mach_msg_trap + 8\r\n1 libsystem_kernel.dylib 0x00000001cc9513a8 mach_msg + 72\r\n2 CoreFoundation 0x00000001ccd55fb0 __CFRunLoopServiceMachPort + 236\r\n3 CoreFoundation 0x00000001ccd50e4c __CFRunLoopRun + 1396\r\n4 CoreFoundation 0x00000001ccd505b8 CFRunLoopRunSpecific + 436\r\n5 AVFAudio 0x00000001d2d29c4c GenericRunLoopThread::Entry+ 584780 (void*) + 164\r\n6 AVFAudio 0x00000001d2d55d34 CAPThread::Entry+ 765236 (CAPThread*) + 88\r\n7 libsystem_pthread.dylib 0x00000001cc9e12fc _pthread_body + 128\r\n8 libsystem_pthread.dylib 0x00000001cc9e125c _pthread_start + 48\r\n9 libsystem_pthread.dylib 0x00000001cc9e4d08 thread_start + 4\r\n\r\nThread 10:\r\n0 libsystem_pthread.dylib 0x00000001cc9e4cfc start_wqthread + 0\r\n\r\nThread 11 name: WTF::AutomaticThread\r\nThread 11:\r\n0 libsystem_kernel.dylib 0x00000001cc95cf0c __psynch_cvwait + 8\r\n1 libsystem_pthread.dylib 0x00000001cc9d9d48 _pthread_cond_wait$VARIANT$mp + 636\r\n2 JavaScriptCore 0x00000001d40adf34 WTF::ThreadCondition::timedWait+ 302900 (WTF::Mutex&, WTF::WallTime) + 148\r\n3 JavaScriptCore 0x00000001d40950f4 WTF::ParkingLot::parkConditionallyImpl(void const*, WTF::ScopedLambda<bool ()> const&, WTF::ScopedLambda<void + 200948 ()> const&, WTF::TimeWithDynamicClockType const&) + 2004\r\n4 JavaScriptCore 0x00000001d406ea38 bool WTF::Condition::waitUntil<WTF::Lock>+ 43576 (WTF::Lock&, WTF::TimeWithDynamicClockType const&) + 184\r\n5 JavaScriptCore 0x00000001d406edd8 WTF::Function<void ()>::CallableWrapper<WTF::AutomaticThread::start(WTF::AbstractLocker const&)::$_0>::call+ 44504 () + 216\r\n6 JavaScriptCore 0x00000001d40ac14c WTF::Thread::entryPoint+ 295244 (WTF::Thread::NewThreadContext*) + 256\r\n7 JavaScriptCore 0x00000001d40ad6b4 WTF::wtfThreadEntryPoint+ 300724 (void*) + 12\r\n8 libsystem_pthread.dylib 0x00000001cc9e12fc _pthread_body + 128\r\n9 libsystem_pthread.dylib 0x00000001cc9e125c _pthread_start + 48\r\n10 libsystem_pthread.dylib 0x00000001cc9e4d08 thread_start + 4\r\n\r\nThread 12 name: JSC Heap Collector Thread\r\nThread 12:\r\n0 libsystem_kernel.dylib 0x00000001cc95cf0c __psynch_cvwait + 8\r\n1 libsystem_pthread.dylib 0x00000001cc9d9d48 _pthread_cond_wait$VARIANT$mp + 636\r\n2 JavaScriptCore 0x00000001d40adf34 WTF::ThreadCondition::timedWait+ 302900 (WTF::Mutex&, WTF::WallTime) + 148\r\n3 JavaScriptCore 0x00000001d40950f4 WTF::ParkingLot::parkConditionallyImpl(void const*, WTF::ScopedLambda<bool ()> const&, WTF::ScopedLambda<void + 200948 ()> const&, WTF::TimeWithDynamicClockType const&) + 2004\r\n4 JavaScriptCore 0x00000001d406ea38 bool WTF::Condition::waitUntil<WTF::Lock>+ 43576 (WTF::Lock&, WTF::TimeWithDynamicClockType const&) + 184\r\n5 JavaScriptCore 0x00000001d406edd8 WTF::Function<void ()>::CallableWrapper<WTF::AutomaticThread::start(WTF::AbstractLocker const&)::$_0>::call+ 44504 () + 216\r\n6 JavaScriptCore 0x00000001d40ac14c WTF::Thread::entryPoint+ 295244 (WTF::Thread::NewThreadContext*) + 256\r\n7 JavaScriptCore 0x00000001d40ad6b4 WTF::wtfThreadEntryPoint+ 300724 (void*) + 12\r\n8 libsystem_pthread.dylib 0x00000001cc9e12fc _pthread_body + 128\r\n9 libsystem_pthread.dylib 0x00000001cc9e125c _pthread_start + 48\r\n10 libsystem_pthread.dylib 0x00000001cc9e4d08 thread_start + 4\r\n\r\nThread 4 crashed with ARM Thread State (64-bit):\r\nx0: 0x000000010549af68 x1: 0x000000010549af68 x2: 0x0000000000000000 x3: 0x00000001093b5d10\r\nx4: 0x0000000106445ed8 x5: 0x000000016f6496e8 x6: 0x000000016f649800 x7: 0x0000000000000000\r\nx8: 0x0000000000000000 x9: 0x0000000104d4e000 x10: 0x0000000000000043 x11: 0x0000000000071418\r\nx12: 0x000000016f5e8000 x13: 0x0000000040000000 x14: 0x0000000000061418 x15: 0x0000000104cf4000\r\nx16: 0x0000000104cd9680 x17: 0x00000001d40cd024 x18: 0x0000000000000000 x19: 0x000000016f649d10\r\nx20: 0x000000016f649e00 x21: 0x00000001093b5d10 x22: 0x0000000104d00000 x23: 0x0000000104d00000\r\nx24: 0x00000001058d1f20 x25: 0x0000000104c30048 x26: 0x0000000000000000 x27: 0xffff000000000000\r\nx28: 0xffff000000000002 fp: 0x000000016f649cb0 lr: 0x00000001d47e01a4\r\nsp: 0x000000016f649c40 pc: 0x00000001d47e0280 cpsr: 0x80000000\r\n\r\nBinary Images:\r\n0x100af8000 - 0x100e3bfff EMA arm64 <68d85eb671933e71a40e29216120b58b> /var/containers/Bundle/Application/B43D450C-DBA9-4D2E-B92E-A512A6E93CE2/EMA.app/EMA\r\n0x1011b8000 - 0x1011c3fff libobjc-trampolines.dylib arm64 <62573b18de65349aa12efd1340ea3ce3> /usr/lib/libobjc-trampolines.dylib\r\n0x1011f4000 - 0x101257fff dyld arm64 <8f53711b46f3359ea4d6479c85ada9ce> /usr/lib/dyld\r\n0x1cbf1e000 - 0x1cbf1ffff libSystem.B.dylib arm64 <1e51d2b63e6f3a51a6e3083c19fca592> /usr/lib/libSystem.B.dylib\r\n0x1cbf20000 - 0x1cbf7afff libc+.1.dylib arm64 <cdfb6d089d283b38984709b6fd40ab92> /usr/lib/libc+.1.dylib\r\n0x1cbf7b000 - 0x1cbf8efff libc+abi.dylib arm64 <b0fff64f8b7d33968178cfb40348061a> /usr/lib/libc+abi.dylib\r\n0x1cbf8f000 - 0x1cc717fff libobjc.A.dylib arm64 <55e000b76ec63c9e8228778494a89ea4> /usr/lib/libobjc.A.dylib\r\n0x1cc718000 - 0x1cc71dfff libcache.dylib arm64 <b2bac7ac70683b5f91e0f2f378bf28cd> /usr/lib/system/libcache.dylib\r\n0x1cc71e000 - 0x1cc729fff libcommonCrypto.dylib arm64 <2d5bb382755836aab784906f31e7dcb5> /usr/lib/system/libcommonCrypto.dylib\r\n0x1cc72a000 - 0x1cc72efff libcompiler_rt.dylib arm64 <6ca9ad49f51c3108843c31a5b36eb7ce> /usr/lib/system/libcompiler_rt.dylib\r\n0x1cc72f000 - 0x1cc737fff libcopyfile.dylib arm64 <8ceb19f412b93db9a6f0cb32137910c8> /usr/lib/system/libcopyfile.dylib\r\n0x1cc738000 - 0x1cc79efff libcorecrypto.dylib arm64 <321917e412123eb08e6cc6198ffd551f> /usr/lib/system/libcorecrypto.dylib\r\n0x1cc79f000 - 0x1cc80ffff libdispatch.dylib arm64 <acad07ef5fde3122a11a31ac4bf6eb3b> /usr/lib/system/libdispatch.dylib\r\n0x1cc810000 - 0x1cc83afff libdyld.dylib arm64 <03e11fb4f89d31d2868320ef92c4aacd> /usr/lib/system/libdyld.dylib\r\n0x1cc83b000 - 0x1cc83bfff liblaunch.dylib arm64 <1d34dc4311ca3a2d9959c21d24fe6577> /usr/lib/system/liblaunch.dylib\r\n0x1cc83c000 - 0x1cc841fff libmacho.dylib arm64 <ae93f60c203531e1b34d5a2334514a8a> /usr/lib/system/libmacho.dylib\r\n0x1cc842000 - 0x1cc843fff libremovefile.dylib arm64 <33e735f56b813308a91b70583f7336be> /usr/lib/system/libremovefile.dylib\r\n0x1cc844000 - 0x1cc85bfff libsystem_asl.dylib arm64 <9cc4f792c7eb32d9a66f4b61f4f2e521> /usr/lib/system/libsystem_asl.dylib\r\n0x1cc85c000 - 0x1cc85cfff libsystem_blocks.dylib arm64 <7484ff4bebd834a0a4925ad00ce06f41> /usr/lib/system/libsystem_blocks.dylib\r\n0x1cc85d000 - 0x1cc8dbfff libsystem_c.dylib arm64 <40dd5c3b586a38eb9f5274d994ecd9d2> /usr/lib/system/libsystem_c.dylib\r\n0x1cc8dc000 - 0x1cc8e0fff libsystem_configuration.dylib arm64 <5e462c94ad453059a6473af38b97b4d7> /usr/lib/system/libsystem_configuration.dylib\r\n0x1cc8e1000 - 0x1cc8e8fff libsystem_containermanager.dylib arm64 <0970fd02f7863726a8d2e584e3c86b6b> /usr/lib/system/libsystem_containermanager.dylib\r\n0x1cc8e9000 - 0x1cc8eafff libsystem_coreservices.dylib arm64 <a6303082c39e376485e1632620d8fa90> /usr/lib/system/libsystem_coreservices.dylib\r\n0x1cc8eb000 - 0x1cc8f1fff libsystem_darwin.dylib arm64 <44792e5e5b67344b9fe42d2ee50fd855> /usr/lib/system/libsystem_darwin.dylib\r\n0x1cc8f2000 - 0x1cc8f8fff libsystem_dnssd.dylib arm64 <9ae1ce7b0d0d3477bab652b6e90824da> /usr/lib/system/libsystem_dnssd.dylib\r\n\r\n[file has full contents]",
					"updateAuthor": {
						"name": "jonkravetz",
						"key": "jonkravetz",
						"displayName": "jon kravetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-11-20T20:10:00.000+0000",
					"updated": "2018-11-20T20:10:32.000+0000"
				},
				{
					"id": "443804",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~jonkravetz], your app is not running on main thread. Please add {{<property name=\"run-on-main-thread\" type=\"bool\">true</property>}} to your tiapp.xml. If the issue persists open a new ticket and submit a reproducible test case.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-21T10:47:13.000+0000",
					"updated": "2018-11-21T10:47:13.000+0000"
				},
				{
					"id": "443815",
					"author": {
						"name": "jonkravetz",
						"key": "jonkravetz",
						"displayName": "jon kravetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I changed the \"run-on-main-thread\" property to true and the issue still persists:\r\n\r\nIt is hard for me to figure out how I can submit a reproducible test case in this situation, because the app has a robust architecture and it would be difficult/time-consuming to figure out how separate this functionality for sharing.\r\n\r\nHere is the crash log:\r\n{code}\r\nIncident Identifier: E5EE2A38-6D87-485C-A309-33F3D2C028BD\r\nCrashReporter Key:   784984f7c75d042e7cf638fab5227335f90e1750\r\nHardware Model:      iPhone9,3\r\nProcess:             EMA [1120]\r\nPath:                /private/var/containers/Bundle/Application/6FB5B8A3-7F47-4B8E-8FD0-564897D3CE9E/EMA.app/EMA\r\nIdentifier:          com.pilrhealth.ema\r\nVersion:             1.2.0 (1.2.0)\r\nCode Type:           ARM-64 (Native)\r\nRole:                Non UI\r\nParent Process:      launchd [1]\r\nCoalition:           com.pilrhealth.ema [1036]\r\n\r\n\r\nDate/Time:           2018-11-21 06:50:54.4200 -0800\r\nLaunch Time:         2018-11-21 06:45:38.7734 -0800\r\nOS Version:          iPhone OS 12.0.1 (16A404)\r\nBaseband Version:    3.00.01\r\nReport Version:      104\r\n\r\nException Type:  EXC_BAD_ACCESS (SIGSEGV)\r\nException Subtype: KERN_INVALID_ADDRESS at 0x0000000000000040\r\nVM Region Info: 0x40 is not in any region.  Bytes before following region: 4304273344\r\n      REGION TYPE                      START - END             [ VSIZE] PRT/MAX SHRMOD  REGION DETAIL\r\n      UNUSED SPACE AT START\r\n--->  \r\n      __TEXT                 00000001008e0000-0000000100c24000 [ 3344K] r-x/r-x SM=COW  ...E/EMA.app/EMA\r\n\r\nTriggered by Thread:  4\r\n\r\nThread 0 name:  Dispatch queue: com.apple.main-thread\r\nThread 0:\r\n0   libsystem_kernel.dylib        \t0x00000001cc951ed0 mach_msg_trap + 8\r\n1   libsystem_kernel.dylib        \t0x00000001cc9513a8 mach_msg + 72\r\n2   CoreFoundation                \t0x00000001ccd55fb0 __CFRunLoopServiceMachPort + 236\r\n3   CoreFoundation                \t0x00000001ccd50e4c __CFRunLoopRun + 1396\r\n4   CoreFoundation                \t0x00000001ccd505b8 CFRunLoopRunSpecific + 436\r\n5   GraphicsServices              \t0x00000001cefc4584 GSEventRunModal + 100\r\n6   UIKitCore                     \t0x00000001f9d14bc8 UIApplicationMain + 212\r\n7   EMA                           \t0x00000001008e7f10 main + 32528 (main.m:29)\r\n8   libdyld.dylib                 \t0x00000001cc810b94 start + 4\r\n\r\nThread 1:\r\n0   libsystem_pthread.dylib       \t0x00000001cc9e4cfc start_wqthread + 0\r\n\r\nThread 2:\r\n0   libsystem_pthread.dylib       \t0x00000001cc9e4cfc start_wqthread + 0\r\n\r\nThread 3 name:  com.apple.uikit.eventfetch-thread\r\nThread 3:\r\n0   libsystem_kernel.dylib        \t0x00000001cc951ed0 mach_msg_trap + 8\r\n1   libsystem_kernel.dylib        \t0x00000001cc9513a8 mach_msg + 72\r\n2   CoreFoundation                \t0x00000001ccd55fb0 __CFRunLoopServiceMachPort + 236\r\n3   CoreFoundation                \t0x00000001ccd50e4c __CFRunLoopRun + 1396\r\n4   CoreFoundation                \t0x00000001ccd505b8 CFRunLoopRunSpecific + 436\r\n5   Foundation                    \t0x00000001cd7446a4 -[NSRunLoop+ 34468 (NSRunLoop) runMode:beforeDate:] + 300\r\n6   Foundation                    \t0x00000001cd744550 -[NSRunLoop+ 34128 (NSRunLoop) runUntilDate:] + 148\r\n7   UIKitCore                     \t0x00000001f9e0141c -[UIEventFetcher threadMain] + 136\r\n8   Foundation                    \t0x00000001cd8773b0 __NSThread__start__ + 1040\r\n9   libsystem_pthread.dylib       \t0x00000001cc9e12fc _pthread_body + 128\r\n10  libsystem_pthread.dylib       \t0x00000001cc9e125c _pthread_start + 48\r\n11  libsystem_pthread.dylib       \t0x00000001cc9e4d08 thread_start + 4\r\n\r\nThread 4 name:  KrollContext<kroll$1>\r\nThread 4 Crashed:\r\n0   JavaScriptCore                \t0x00000001d47e0280 JSC::LLInt::setUpCall+ 7848576 (JSC::ExecState*, JSC::Instruction*, JSC::CodeSpecializationKind, JSC::JSValue, JSC::LLIntCallLinkInfo*) + 296\r\n1   JavaScriptCore                \t0x00000001d47e01a4 JSC::LLInt::setUpCall+ 7848356 (JSC::ExecState*, JSC::Instruction*, JSC::CodeSpecializationKind, JSC::JSValue, JSC::LLIntCallLinkInfo*) + 76\r\n2   JavaScriptCore                \t0x00000001d40cd120 llint_entry + 29952\r\n3   JavaScriptCore                \t0x00000001d40cd4e0 llint_entry + 30912\r\n4   JavaScriptCore                \t0x00000001d40cd0cc llint_entry + 29868\r\n5   JavaScriptCore                \t0x00000001d40cd0cc llint_entry + 29868\r\n6   JavaScriptCore                \t0x00000001d40cd0cc llint_entry + 29868\r\n7   JavaScriptCore                \t0x00000001d40cd0cc llint_entry + 29868\r\n8   JavaScriptCore                \t0x00000001d40cd134 llint_entry + 29972\r\n9   JavaScriptCore                \t0x00000001d40cd134 llint_entry + 29972\r\n10  JavaScriptCore                \t0x00000001d40c5a1c vmEntryToJavaScript + 300\r\n11  JavaScriptCore                \t0x00000001d473d3f0 JSC::Interpreter::executeCall+ 7181296 (JSC::ExecState*, JSC::JSObject*, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) + 424\r\n12  JavaScriptCore                \t0x00000001d48f4068 JSC::profiledCall+ 8978536 (JSC::ExecState*, JSC::ProfilingReason, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) + 172\r\n13  JavaScriptCore                \t0x00000001d40fb284 JSObjectCallAsFunction + 368\r\n14  EMA                           \t0x00000001008fb1e0 -[KrollCallback call:thisObject:] + 111072 (KrollCallback.m:149)\r\n15  EMA                           \t0x00000001008fc914 -[KrollEvent invoke:] + 117012 (KrollContext.m:732)\r\n16  EMA                           \t0x00000001008fdc64 -[KrollContext invoke:] + 121956 (KrollContext.m:1002)\r\n17  EMA                           \t0x00000001008ff290 -[KrollContext main] + 127632 (KrollContext.m:1374)\r\n18  Foundation                    \t0x00000001cd8773b0 __NSThread__start__ + 1040\r\n19  libsystem_pthread.dylib       \t0x00000001cc9e12fc _pthread_body + 128\r\n20  libsystem_pthread.dylib       \t0x00000001cc9e125c _pthread_start + 48\r\n21  libsystem_pthread.dylib       \t0x00000001cc9e4d08 thread_start + 4\r\n\r\nThread 5 name:  JavaScriptCore bmalloc scavenger\r\nThread 5:\r\n0   libsystem_kernel.dylib        \t0x00000001cc95cf0c __psynch_cvwait + 8\r\n1   libsystem_pthread.dylib       \t0x00000001cc9d9d48 _pthread_cond_wait$VARIANT$mp + 636\r\n2   libc++.1.dylib                \t0x00000001cbf28568 std::__1::condition_variable::__do_timed_wait+ 34152 (std::__1::unique_lock<std::__1::mutex>&, std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > >) + 96\r\n3   JavaScriptCore                \t0x00000001d40c539c std::__1::cv_status std::__1::condition_variable::wait_until<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > >+ 398236 (std::__1::unique_lock<std::__1::mutex>&, std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > > const&) + 124\r\n4   JavaScriptCore                \t0x00000001d40c524c std::__1::cv_status std::__1::condition_variable_any::wait_until<std::__1::unique_lock<bmalloc::Mutex>, std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > >+ 397900 (std::__1::unique_lock<bmalloc::Mutex>&, std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > > const&) + 112\r\n5   JavaScriptCore                \t0x00000001d40c3ee8 bmalloc::Scavenger::threadRunLoop+ 392936 () + 296\r\n6   JavaScriptCore                \t0x00000001d40c35a4 bmalloc::Scavenger::Scavenger+ 390564 (std::__1::lock_guard<bmalloc::Mutex>&) + 0\r\n7   JavaScriptCore                \t0x00000001d40c5050 std::__1::__thread_specific_ptr<std::__1::__thread_struct>::set_pointer+ 397392 (std::__1::__thread_struct*) + 0\r\n8   libsystem_pthread.dylib       \t0x00000001cc9e12fc _pthread_body + 128\r\n9   libsystem_pthread.dylib       \t0x00000001cc9e125c _pthread_start + 48\r\n10  libsystem_pthread.dylib       \t0x00000001cc9e4d08 thread_start + 4\r\n\r\nThread 6 name:  WTF::AutomaticThread\r\nThread 6:\r\n0   libsystem_kernel.dylib        \t0x00000001cc95cf0c __psynch_cvwait + 8\r\n1   libsystem_pthread.dylib       \t0x00000001cc9d9d48 _pthread_cond_wait$VARIANT$mp + 636\r\n2   JavaScriptCore                \t0x00000001d40adf34 WTF::ThreadCondition::timedWait+ 302900 (WTF::Mutex&, WTF::WallTime) + 148\r\n3   JavaScriptCore                \t0x00000001d40950f4 WTF::ParkingLot::parkConditionallyImpl(void const*, WTF::ScopedLambda<bool ()> const&, WTF::ScopedLambda<void + 200948 ()> const&, WTF::TimeWithDynamicClockType const&) + 2004\r\n4   JavaScriptCore                \t0x00000001d406ea38 bool WTF::Condition::waitUntil<WTF::Lock>+ 43576 (WTF::Lock&, WTF::TimeWithDynamicClockType const&) + 184\r\n5   JavaScriptCore                \t0x00000001d406edd8 WTF::Function<void ()>::CallableWrapper<WTF::AutomaticThread::start(WTF::AbstractLocker const&)::$_0>::call+ 44504 () + 216\r\n6   JavaScriptCore                \t0x00000001d40ac14c WTF::Thread::entryPoint+ 295244 (WTF::Thread::NewThreadContext*) + 256\r\n7   JavaScriptCore                \t0x00000001d40ad6b4 WTF::wtfThreadEntryPoint+ 300724 (void*) + 12\r\n8   libsystem_pthread.dylib       \t0x00000001cc9e12fc _pthread_body + 128\r\n9   libsystem_pthread.dylib       \t0x00000001cc9e125c _pthread_start + 48\r\n10  libsystem_pthread.dylib       \t0x00000001cc9e4d08 thread_start + 4\r\n\r\nThread 7 name:  com.apple.NSURLConnectionLoader\r\nThread 7:\r\n0   libsystem_kernel.dylib        \t0x00000001cc951ed0 mach_msg_trap + 8\r\n1   libsystem_kernel.dylib        \t0x00000001cc9513a8 mach_msg + 72\r\n2   CoreFoundation                \t0x00000001ccd55fb0 __CFRunLoopServiceMachPort + 236\r\n3   CoreFoundation                \t0x00000001ccd50e4c __CFRunLoopRun + 1396\r\n4   CoreFoundation                \t0x00000001ccd505b8 CFRunLoopRunSpecific + 436\r\n5   CFNetwork                     \t0x00000001cd370e18 -[__CoreSchedulingSetRunnable runForever] + 212\r\n6   Foundation                    \t0x00000001cd8773b0 __NSThread__start__ + 1040\r\n7   libsystem_pthread.dylib       \t0x00000001cc9e12fc _pthread_body + 128\r\n8   libsystem_pthread.dylib       \t0x00000001cc9e125c _pthread_start + 48\r\n9   libsystem_pthread.dylib       \t0x00000001cc9e4d08 thread_start + 4\r\n\r\nThread 8 name:  JSC Heap Collector Thread\r\nThread 8:\r\n0   libsystem_kernel.dylib        \t0x00000001cc95cf0c __psynch_cvwait + 8\r\n1   libsystem_pthread.dylib       \t0x00000001cc9d9d48 _pthread_cond_wait$VARIANT$mp + 636\r\n2   JavaScriptCore                \t0x00000001d40adf34 WTF::ThreadCondition::timedWait+ 302900 (WTF::Mutex&, WTF::WallTime) + 148\r\n3   JavaScriptCore                \t0x00000001d40950f4 WTF::ParkingLot::parkConditionallyImpl(void const*, WTF::ScopedLambda<bool ()> const&, WTF::ScopedLambda<void + 200948 ()> const&, WTF::TimeWithDynamicClockType const&) + 2004\r\n4   JavaScriptCore                \t0x00000001d406ea38 bool WTF::Condition::waitUntil<WTF::Lock>+ 43576 (WTF::Lock&, WTF::TimeWithDynamicClockType const&) + 184\r\n5   JavaScriptCore                \t0x00000001d406edd8 WTF::Function<void ()>::CallableWrapper<WTF::AutomaticThread::start(WTF::AbstractLocker const&)::$_0>::call+ 44504 () + 216\r\n6   JavaScriptCore                \t0x00000001d40ac14c WTF::Thread::entryPoint+ 295244 (WTF::Thread::NewThreadContext*) + 256\r\n7   JavaScriptCore                \t0x00000001d40ad6b4 WTF::wtfThreadEntryPoint+ 300724 (void*) + 12\r\n8   libsystem_pthread.dylib       \t0x00000001cc9e12fc _pthread_body + 128\r\n9   libsystem_pthread.dylib       \t0x00000001cc9e125c _pthread_start + 48\r\n10  libsystem_pthread.dylib       \t0x00000001cc9e4d08 thread_start + 4\r\n\r\nThread 9:\r\n0   libsystem_pthread.dylib       \t0x00000001cc9e4cfc start_wqthread + 0\r\n\r\nThread 10:\r\n0   libsystem_pthread.dylib       \t0x00000001cc9e4cfc start_wqthread + 0\r\n\r\nThread 11:\r\n0   libsystem_pthread.dylib       \t0x00000001cc9e4cfc start_wqthread + 0\r\n\r\nThread 12:\r\n0   libsystem_pthread.dylib       \t0x00000001cc9e4cfc start_wqthread + 0\r\n\r\nThread 4 crashed with ARM Thread State (64-bit):\r\n    x0: 0x00000001035ad880   x1: 0x00000001035ad880   x2: 0x0000000000000000   x3: 0x0000000105f805a0\r\n    x4: 0x0000000104bc6090   x5: 0x0000000000000066   x6: 0x000000016f861af0   x7: 0x0000000000000000\r\n    x8: 0x0000000000000000   x9: 0x0000000102e42000  x10: 0x000000000000001f  x11: 0x0000000000000008\r\n   x12: 0x00000000004a32e5  x13: 0x0000000040000000  x14: 0x0000000000000000  x15: 0x0000000000073e80\r\n   x16: 0x0000000000074010  x17: 0x00000001d40cd024  x18: 0x0000000000000000  x19: 0x000000016f862000\r\n   x20: 0x000000016f8620f0  x21: 0x0000000105f805a0  x22: 0x0000000102e00000  x23: 0x0000000102e00000\r\n   x24: 0x0000000107f79a10  x25: 0x0000000102d30048  x26: 0x0000000000000000  x27: 0xffff000000000000\r\n   x28: 0xffff000000000002   fp: 0x000000016f861fa0   lr: 0x00000001d47e01a4\r\n    sp: 0x000000016f861f30   pc: 0x00000001d47e0280 cpsr: 0x80000000\r\n{code}\r\n",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-21T14:55:25.000+0000",
					"updated": "2018-11-22T14:26:26.000+0000"
				},
				{
					"id": "443828",
					"author": {
						"name": "fahad86",
						"key": "fahad86",
						"displayName": "Muhammad Ahmed Fahad",
						"active": true,
						"timeZone": "Asia/Shanghai"
					},
					"body": "Crashes with 7.5.0.GA in Production:\r\n\r\n{code:java}\r\nName\t\r\nSIGSEGV\r\n\r\nReason\t\r\nSEGV_MAPERR\r\n\r\nApp Version\t\r\nDownload\r\nCrashed Thread\r\n\r\n0\tJavaScriptCore 0x00000001f1550820 JSC::ASTBuilder::makeAssignNode() + 68\r\n1\tlibdyld.dylib 0x00000001e93e5050 dyld3::ScopedTimer::startTimer() + 20\r\n\r\n{code}\r\n\r\n\r\n\r\n\r\n{code:java}\r\nKrollContext.m\r\n\r\nName\t\r\nSIGSEGV\r\n\r\nReason\t\r\nSEGV_MAPERR\r\n\r\nApp Version\t6.0.9 (6.0.9)\r\nDownload\r\nCrashed Thread\r\n\r\n0\tJavaScriptCore 0x00000001bf616c0c JSC::LLInt::setUpCall() + 292\r\n1\tJavaScriptCore 0x00000001bef03d78 llint_entry + 29988\r\n2\tJavaScriptCore 0x00000001bef04138 llint_entry + 30948\r\n3\tJavaScriptCore 0x00000001bef03d8c llint_entry + 30008\r\n4\tJavaScriptCore 0x00000001bef04138 llint_entry + 30948\r\n5\tJavaScriptCore 0x00000001bef03d8c llint_entry + 30008\r\n6\tJavaScriptCore 0x00000001bef03d8c llint_entry + 30008\r\n7\tJavaScriptCore 0x00000001bef04138 llint_entry + 30948\r\n8\tJavaScriptCore 0x00000001bef03d8c llint_entry + 30008\r\n9\tJavaScriptCore 0x00000001bef03d8c llint_entry + 30008\r\n10\tJavaScriptCore 0x00000001beefc654 llintPCRangeStart + 304\r\n11\tJavaScriptCore 0x00000001bf572c64 JSC::Interpreter::executeProgram() + 9616\r\n12\tJavaScriptCore 0x00000001bf74dbdc JSC::evaluate() + 316\r\n13\tJavaScriptCore 0x00000001bef252b4 JSEvaluateScript + 484\r\n!\t14\tXXXXXX 0x0000000104aa7fa0 -[KrollEval jsInvokeInContext:exception:] (KrollContext.m:647)\r\n15\tXXXXXX 0x0000000104aa525c -[KrollBridge loadCommonJSModule:withSourceURL:] (KrollBridge.m:749)\r\n16\tXXXXXX 0x0000000104aa5ce0 -[KrollBridge loadJavascriptText:fromFile:withContext:] (KrollBridge.m:935)\r\n17\tXXXXXX 0x0000000104aa5f3c -[KrollBridge loadAsFile:withContext:] (KrollBridge.m:999)\r\n18\tXXXXXX 0x0000000104aa6150 -[KrollBridge loadAsFileOrDirectory:withContext:] (KrollBridge.m:1068)\r\n19\tXXXXXX 0x0000000104aa6668 -[KrollBridge require:path:] (KrollBridge.m:1174)\r\n20\tXXXXXX 0x0000000104aa91a0 CommonJSRequireCallback (KrollContext.m:253)\r\n21\tJavaScriptCore 0x00000001bef25d30 JSC::APICallbackFunction::call<JSC::JSCallbackFunction>() + 344\r\n22\tJavaScriptCore 0x00000001bef04930 llint_entry + 32988\r\n23\tJavaScriptCore 0x00000001bef03d8c llint_entry + 30008\r\n24\tJavaScriptCore 0x00000001bef03d8c llint_entry + 30008\r\n25\tJavaScriptCore 0x00000001bef03d8c llint_entry + 30008\r\n26\tJavaScriptCore 0x00000001beefc654 llintPCRangeStart + 304\r\n27\tJavaScriptCore 0x00000001bf572c64 JSC::Interpreter::executeProgram() + 9616\r\n28\tJavaScriptCore 0x00000001bf74dbdc JSC::evaluate() + 316\r\n29\tJavaScriptCore 0x00000001bef252b4 JSEvaluateScript + 484\r\n30\tXXXXXX 0x0000000104aa4140 -[KrollBridge evalFileOnThread:context:] (KrollBridge.m:425)\r\n31\tXXXXXX 0x0000000104aa7bd8 -[KrollInvocation invoke:] (KrollContext.m:105)\r\n32\tXXXXXX 0x0000000104aa8860 -[KrollContext invoke:] (KrollContext.m:1002)\r\n33\tXXXXXX 0x0000000104aa4bd0 -[KrollBridge didStartNewContext:] (KrollBridge.m:0)\r\n34\tXXXXXX 0x0000000104aa9108 -[KrollContext main] (KrollContext.m:1281)\r\n35\tlibdispatch.dylib 0x00000001b75fd6c8 _dispatch_call_block_and_release + 20\r\n36\tlibdispatch.dylib 0x00000001b75fe484 _dispatch_client_callout + 12\r\n37\tlibdispatch.dylib 0x00000001b75ddb44 _dispatch_main_queue_callback_4CF$VARIANT$armv81 + 1008\r\n38\tCoreFoundation 0x00000001b7b53dd0 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ + 8\r\n39\tCoreFoundation 0x00000001b7b4ec98 __CFRunLoopRun + 1960\r\n40\tCoreFoundation 0x00000001b7b4e1cc CFRunLoopRunSpecific + 432\r\n41\tGraphicsServices 0x00000001b9dc5584 GSEventRunModal + 96\r\n42\tUIKitCore 0x00000001e4dc5054 UIApplicationMain + 208\r\n43\tXXXXXX 0x0000000104a9bdd8 main (main.m:29)\r\n44\tlibdyld.dylib 0x00000001b760ebb4 start + 0\r\n{code}\r\n\r\n\r\n\r\n\r\n{code:java}\r\nmain.m\r\n\r\nName\t\r\nSIGSEGV\r\n\r\nReason\t\r\nSEGV_MAPERR\r\n\r\nApp Version\t6.0.9 (6.0.9)\r\nDownload\r\nCrashed Thread\r\n\r\n0\tJavaScriptCore 0x00000001d1d96c0c JSC::LLInt::setUpCall() + 292\r\n1\tJavaScriptCore 0x00000001d1683d78 llint_entry + 29988\r\n2\tJavaScriptCore 0x00000001d1683d24 llint_entry + 29904\r\n3\tJavaScriptCore 0x00000001d1683d24 llint_entry + 29904\r\n4\tJavaScriptCore 0x00000001d1683d8c llint_entry + 30008\r\n5\tJavaScriptCore 0x00000001d1683d24 llint_entry + 29904\r\n6\tJavaScriptCore 0x00000001d1683d8c llint_entry + 30008\r\n7\tJavaScriptCore 0x00000001d1683d8c llint_entry + 30008\r\n8\tJavaScriptCore 0x00000001d1683d8c llint_entry + 30008\r\n9\tJavaScriptCore 0x00000001d16841f0 llint_entry + 31132\r\n10\tJavaScriptCore 0x00000001d1683d8c llint_entry + 30008\r\n11\tJavaScriptCore 0x00000001d1683d24 llint_entry + 29904\r\n12\tJavaScriptCore 0x00000001d167c654 llintPCRangeStart + 304\r\n13\tJavaScriptCore 0x00000001d1cf4070 JSC::Interpreter::executeCall() + 420\r\n14\tJavaScriptCore 0x00000001d1eaaa2c JSC::profiledCall() + 184\r\n15\tJavaScriptCore 0x00000001d16b202c JSObjectCallAsFunction + 364\r\n16\tJavaScriptCore 0x00000001d161be94 -[JSValue callWithArguments:] + 288\r\n17\tFoundation 0x00000001cadf73f8 __NSFireTimer + 80\r\n18\tCoreFoundation 0x00000001ca2d4804 __CFRUNLOOP_IS_CALLING_OUT_TO_A_TIMER_CALLBACK_FUNCTION__ + 24\r\n19\tCoreFoundation 0x00000001ca2d4534 __CFRunLoopDoTimer + 860\r\n20\tCoreFoundation 0x00000001ca2d3d68 __CFRunLoopDoTimers + 244\r\n21\tCoreFoundation 0x00000001ca2cec44 __CFRunLoopRun + 1876\r\n22\tCoreFoundation 0x00000001ca2ce1cc CFRunLoopRunSpecific + 432\r\n23\tGraphicsServices 0x00000001cc545584 GSEventRunModal + 96\r\n24\tUIKitCore 0x00000001f7545054 UIApplicationMain + 208\r\n!\t25\tXXXXXX 0x0000000100733dd8 main (main.m:29)\r\n26\tlibdyld.dylib 0x00000001c9d8ebb4 start + 0\r\n{code}\r\n\r\n\r\n\r\n\r\n",
					"updateAuthor": {
						"name": "fahad86",
						"key": "fahad86",
						"displayName": "Muhammad Ahmed Fahad",
						"active": true,
						"timeZone": "Asia/Shanghai"
					},
					"created": "2018-11-22T03:21:08.000+0000",
					"updated": "2018-11-22T03:21:08.000+0000"
				},
				{
					"id": "443850",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~jonkravetz], if the issue persists, please update your crash report.\r\n\r\nIf you can't provide an isolated test case consider providing us your app project for better insight if that is possible. As already mentioned multiple times in this ticket, you can send them privately to [mailto:jvennemann@axway.com] or [mailto:vsingh@axway.com].",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-22T14:35:49.000+0000",
					"updated": "2018-11-22T14:35:49.000+0000"
				},
				{
					"id": "443933",
					"author": {
						"name": "jonkravetz",
						"key": "jonkravetz",
						"displayName": "jon kravetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hi Jan, \r\n\r\nI just sent you an email with github branch access and steps to reproduce. Please let us know what you think is going on and/or followup with any additional questions. We are still experiencing the intermittent crashing.\r\n\r\nThanks,\r\n\r\nJon Kravetz",
					"updateAuthor": {
						"name": "jonkravetz",
						"key": "jonkravetz",
						"displayName": "jon kravetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-11-27T17:11:21.000+0000",
					"updated": "2018-11-27T17:11:21.000+0000"
				},
				{
					"id": "444062",
					"author": {
						"name": "amigoni",
						"key": "amigoni",
						"displayName": "Leonardo Amigoni",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "7.5.0 Is causing random crashes again. 7.4.2 was fine on our project",
					"updateAuthor": {
						"name": "amigoni",
						"key": "amigoni",
						"displayName": "Leonardo Amigoni",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-29T22:32:52.000+0000",
					"updated": "2018-11-29T22:32:52.000+0000"
				},
				{
					"id": "444088",
					"author": {
						"name": "Roberto",
						"key": "roberto",
						"displayName": "Roberto Zaratin",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I have the same problem of Leonardo Amigoni \r\n7.5.0 Is causing random crashes again",
					"updateAuthor": {
						"name": "Roberto",
						"key": "roberto",
						"displayName": "Roberto Zaratin",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-11-30T09:49:28.000+0000",
					"updated": "2018-11-30T09:49:28.000+0000"
				},
				{
					"id": "444090",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Thanks for the feedback guys, especially [~jonkravetz] for providing his project as a test case. We are looking into it and let you know once we have an update.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-11-30T10:52:40.000+0000",
					"updated": "2018-11-30T10:52:40.000+0000"
				},
				{
					"id": "444273",
					"author": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I have started using new titanium 7.5.0 and got app crush and it gave me following error on console, Its working fine with 7.4.2 though\r\n\r\nI have set following properties to false in my tiapp.xml as it was working fine only with false in 7.4.0\r\n \r\n<property name=\"run-on-main-thread\" type=\"bool\">false</property>\r\n <property name=\"use-jscore-framework\" type=\"bool\">false</property>\r\n\r\n[ERROR] :  The application has crashed with an uncaught exception 'org.bramalea_city_centre.TiUIWebViewProxy'.\r\n[ERROR] :  Reason:\r\n[ERROR] :  Invalid type passed to function\r\n[ERROR] :  Stack trace:\r\n[ERROR] :  0   CoreFoundation                      0x00000001b5e8feb8 <redacted> + 252\r\n[ERROR] :  1   libobjc.A.dylib                     0x00000001b5061a40 objc_exception_throw + 56\r\n[ERROR] :  2   Bramalea City Centre                0x00000001022915d0 Bramalea City Centre + 775632\r\n[ERROR] :  3   Bramalea City Centre                0x000000010226edc4 Bramalea City Centre + 634308\r\n[ERROR] :  4   Bramalea City Centre                0x000000010222fd30 Bramalea City Centre + 376112\r\n[ERROR] :  5   Foundation                          0x00000001b694239c <redacted> + 336\r\n[ERROR] :  6   CoreFoundation                      0x00000001b5e201cc <redacted> + 24\r\n[ERROR] :  7   CoreFoundation                      0x00000001b5e2014c <redacted> + 88\r\n[ERROR] :  8   CoreFoundation                      0x00000001b5e1fa30 <redacted> + 176\r\n[ERROR] :  9   CoreFoundation                      0x00000001b5e1a8fc <redacted> + 1040\r\n[ERROR] :  10  CoreFoundation                      0x00000001b5e1a1cc CFRunLoopRunSpecific + 436\r\n[ERROR] :  11  GraphicsServices                    0x00000001b8091584 GSEventRunModal + 100\r\n[ERROR] :  12  UIKitCore                           0x00000001e3091054 UIApplicationMain + 212\r\n[ERROR] :  13  Bramalea City Centre                0x00000001021da02c Bramalea City Centre + 24620\r\n[ERROR] :  14  libdyld.dylib                       0x00000001b58dabb4 <redacted> + 4",
					"updateAuthor": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-12-05T16:34:04.000+0000",
					"updated": "2018-12-05T16:34:04.000+0000"
				},
				{
					"id": "444275",
					"author": {
						"name": "topener",
						"key": "topener",
						"displayName": "Rene Pot",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~ppancholi] you will need to put the properties on true for the fix to be applied. Can you try it with that?",
					"updateAuthor": {
						"name": "topener",
						"key": "topener",
						"displayName": "Rene Pot",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-12-05T16:42:39.000+0000",
					"updated": "2018-12-05T16:42:39.000+0000"
				},
				{
					"id": "444278",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Please note that the use-jscore-framework is no property and rather has to go inside the {{<ios>}} section as a node if you specifiy it. Using JSCore is true by default. The structure of you {{tiapp.xml}} should look like this.\r\n\r\n{code:xml}\r\n<ti:app>\r\n  <property name=\"run-on-main-thread\" type=\"bool\">true</property>\r\n  <ios>\r\n    <use-jscore-framework>true</use-jscore-framework> <!-- optional, true by default since 7.0.0 -->\r\n  </ios>\r\n</ti:app>\r\n{code}\r\n\r\n",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-12-05T17:04:55.000+0000",
					"updated": "2018-12-05T17:07:18.000+0000"
				},
				{
					"id": "444282",
					"author": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Thanks for help!\r\n\r\nIt's working fine with properties set to true",
					"updateAuthor": {
						"name": "ppancholi",
						"key": "ppancholi",
						"displayName": "Pankti Pancholi",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-12-05T17:40:50.000+0000",
					"updated": "2018-12-05T17:40:50.000+0000"
				},
				{
					"id": "444312",
					"author": {
						"name": "jonkravetz",
						"key": "jonkravetz",
						"displayName": "jon kravetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Wondering whether there are any updates for this issue? We provided our code and are interested to know whether it has been tested, if there is any feedback.",
					"updateAuthor": {
						"name": "jonkravetz",
						"key": "jonkravetz",
						"displayName": "jon kravetz",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-12-06T19:12:32.000+0000",
					"updated": "2018-12-06T19:12:32.000+0000"
				},
				{
					"id": "444314",
					"author": {
						"name": "icecandyent",
						"key": "icecandyent",
						"displayName": "Simon Buckingham",
						"active": true,
						"timeZone": "Europe/London"
					},
					"body": "This is very confusing. I have been following this thread for a while on and off now.\r\n\r\nEarlier on people were saying you need to set the \"use-jscore-framework\" flag to false to get things to work.\r\n\r\nNow @jvennemann is saying use true.\r\n\r\nWhat exactly does this flag do and how does it affect performance? Again from earlier reading of comments it seemed that all this flag does is allow debugging in Safari (which is not needed usually), but maybe it has more reach than that.\r\n\r\nIn our app we moved from Ti SDK 7.4.1 to 7.5.0 and had an immediate improvement in performance (everything faster with no freezes). But we are using \"use-jscore-framework\" set to false.\r\n\r\n",
					"updateAuthor": {
						"name": "icecandyent",
						"key": "icecandyent",
						"displayName": "Simon Buckingham",
						"active": true,
						"timeZone": "Europe/London"
					},
					"created": "2018-12-06T19:25:13.000+0000",
					"updated": "2018-12-06T19:25:13.000+0000"
				},
				{
					"id": "444326",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~jonkravetz], we have received another test case which lets us reproduce the issue in 7.5.0 reliably and we have found the change in 7.5.0 that introduced the issue. Working on a fix right now!\r\n\r\n[~icecandyent], use-jscore-framework switches from our legacy TiCore to the official JavaScriptCore framework from Apple as the JavaScript runtime. TiCore is an old fork of JavaScriptCore which we did to implement various changes that were necessary in the earlier days of Titanium. Since then Apple's official JavaScriptCore framework also implemented those changes and we could switch back to use that and also benefit from all the optimizations and improvements Apple implemented there. In 8.0.0, TiCore will be removed and JavaScriptCore is the only available JS runtime on iOS. So it does a little more than just \"allowing debugging in Safari\".\r\n\r\nWhen this issue first came up it was an easy workaround to use TiCore because the issue was related to GC optimizations done by Apple in JavaScriptCore. For others the changing the {{ron-on-main-thread}} property also seemed to help. If this property is set to false, JavaScript execution runs on a separate thread. Since this can cause issues when interacting with the UI (which always needs to be done on the main thread) this property is also deprecated and will be removed in 8.0.0.\r\n\r\nAfter making several fixes to our core users could switch back to use JavaScriptCore and {{run-on-main-thread}}. We have a few outstanding reports about continued crashes which we are investigating.\r\n\r\nHope this clears up a few things!",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-12-07T11:36:34.000+0000",
					"updated": "2018-12-07T11:36:34.000+0000"
				},
				{
					"id": "444327",
					"author": {
						"name": "icecandyent",
						"key": "icecandyent",
						"displayName": "Simon Buckingham",
						"active": true,
						"timeZone": "Europe/London"
					},
					"body": "[~jvennemann] thank you very much for the clear explanation. I hope you are putting this somewhere important in the Ti docs!",
					"updateAuthor": {
						"name": "icecandyent",
						"key": "icecandyent",
						"displayName": "Simon Buckingham",
						"active": true,
						"timeZone": "Europe/London"
					},
					"created": "2018-12-07T12:06:44.000+0000",
					"updated": "2018-12-07T12:06:44.000+0000"
				},
				{
					"id": "444421",
					"author": {
						"name": "a.marcone",
						"key": "a.marcone",
						"displayName": "Alberto Marcone",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "we're waiting for the fix too, hope this is coming out soon!",
					"updateAuthor": {
						"name": "a.marcone",
						"key": "a.marcone",
						"displayName": "Alberto Marcone",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-12-10T14:42:09.000+0000",
					"updated": "2018-12-10T14:42:09.000+0000"
				},
				{
					"id": "444482",
					"author": {
						"name": "jvandijk",
						"key": "jvandijk",
						"displayName": "Jeroen van Dijk",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"body": "[~jvennemann] is there already an idea if this is going to be fixed in 7.5.1? I don't see anything related in the current milestone on Github yet.",
					"updateAuthor": {
						"name": "jvandijk",
						"key": "jvandijk",
						"displayName": "Jeroen van Dijk",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"created": "2018-12-11T14:13:15.000+0000",
					"updated": "2018-12-11T14:13:15.000+0000"
				},
				{
					"id": "444483",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Alright guys, here is the latest 7.5.1 build addressing the reoccurring crashes some of you were seeing with 7.5.0.GA.\r\n\r\nhttps://www.dropbox.com/s/dwgcxtk5fmwfl41/mobilesdk-7.5.1.v20181211045525-osx.zip?dl=0\r\n\r\nPlease give it a try and let us now how this version works for you. We were seeing positive results in our test case and no more crashes occurred even after several iterations.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-12-11T14:14:39.000+0000",
					"updated": "2018-12-11T14:14:39.000+0000"
				},
				{
					"id": "444484",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~jvandijk], the corresponding PR is https://github.com/appcelerator/titanium_mobile/pull/10525 and it was solved together with TIMOB-26452",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-12-11T14:17:14.000+0000",
					"updated": "2018-12-11T14:17:14.000+0000"
				},
				{
					"id": "444574",
					"author": {
						"name": "jvandijk",
						"key": "jvandijk",
						"displayName": "Jeroen van Dijk",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"body": "[~jvennemann] Looking good so far. Running your test build for 2 days now and haven't seen a freeze myself yet.",
					"updateAuthor": {
						"name": "jvandijk",
						"key": "jvandijk",
						"displayName": "Jeroen van Dijk",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"created": "2018-12-13T10:13:36.000+0000",
					"updated": "2018-12-13T10:13:44.000+0000"
				},
				{
					"id": "444769",
					"author": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Just saw the blog post addressing this issue. I'd like to thank the whole team that worked hard to make it work, especially @Jan Vennemann for his comments and explanations!\r\nI'm just a little bit confused on what's the best release to use and settings.\r\nI understand that we should use _run-on-main-thread_ and _use-jscore-framework_ set to *true* but with the blog post about the 7.4.2.GA release and 7.5.1 I'm not sure which one is the recommended version.\r\nPlease correct me if I'm mistaken, but 7.4.2 addresses bugs and issues and this one is included, but 7.5.1 has a lot of improvements, new features and fixes + this one, is that correct?\r\nGonna give them a try and let you know!\r\nThanks again",
					"updateAuthor": {
						"name": "chmiiller",
						"key": "chmiiller",
						"displayName": "Carlos Henrique Zinato",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-12-20T08:33:16.000+0000",
					"updated": "2018-12-20T08:33:16.000+0000"
				},
				{
					"id": "444780",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~chmiiller], basically you are correct. Except that 7.4.2.GA contains the fixes made for this ticket only, nothing else. 7.5.1.GA also has the fixes made for this ticket along wither other high priority fixes for 7.5.0.GA. And since 7.5.X was a minor update it contains a lot of other new features and fixes compared to the 7.4.X branch as well.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-12-20T14:24:40.000+0000",
					"updated": "2018-12-20T14:24:40.000+0000"
				},
				{
					"id": "445771",
					"author": {
						"name": "a.marcone",
						"key": "a.marcone",
						"displayName": "Alberto Marcone",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "I had hoped that everything was fixed, but maybe I found an error connected to this ticket.\r\n\r\nWhen I pause my app with a setInterval running, and then resume it, I get this error (shown as many times as the interval run in the background)\r\n\r\n!https://cdn1.imggmi.com/uploads/2019/1/30/cb2b0b94c4933b97d2c640a18201553f-full.png!\r\n",
					"updateAuthor": {
						"name": "a.marcone",
						"key": "a.marcone",
						"displayName": "Alberto Marcone",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2019-01-30T16:04:54.000+0000",
					"updated": "2019-01-30T16:04:54.000+0000"
				},
				{
					"id": "445776",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~a.marcone], could you please open a separate ticket and post a simple test case? Usually timers will be suspended when the app switches to background and resume once it enters foreground again so they shouldn't fire when app is paused.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2019-01-30T18:36:32.000+0000",
					"updated": "2019-01-30T18:36:32.000+0000"
				},
				{
					"id": "445784",
					"author": {
						"name": "a.marcone",
						"key": "a.marcone",
						"displayName": "Alberto Marcone",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "sorry, I replied to this ticket only because this is happening only after updating to the above mentioned sdk and I never experienced anything like that - especially because the error mentions the JSContext and timer that were the culprit of the issues from other users.",
					"updateAuthor": {
						"name": "a.marcone",
						"key": "a.marcone",
						"displayName": "Alberto Marcone",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2019-01-31T08:42:53.000+0000",
					"updated": "2019-01-31T08:42:53.000+0000"
				},
				{
					"id": "446395",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~rmitro], you can use TIMOB-26852 for follow up issues related to JSCore crashes. Please attach the crash log to that ticket and include as much additional info as you can provide. Test cases or full example projects are always a big help for such crashes since they are hard to pin down with just the crash log. Thanks!",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2019-02-28T13:00:27.000+0000",
					"updated": "2019-02-28T13:00:27.000+0000"
				}
			],
			"maxResults": 241,
			"total": 241,
			"startAt": 0
		}
	}
}