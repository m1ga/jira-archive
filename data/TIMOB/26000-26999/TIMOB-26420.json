{
	"id": "172240",
	"key": "TIMOB-26420",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": {
			"id": "3",
			"description": "The problem is a duplicate of an existing issue.",
			"name": "Duplicate"
		},
		"resolutiondate": "2018-10-05T12:16:02.000+0000",
		"created": "2018-09-19T08:27:01.000+0000",
		"priority": {
			"name": "Critical",
			"id": "1"
		},
		"labels": [
			"device",
			"ios-12",
			"ios12",
			"kroll"
		],
		"versions": [],
		"issuelinks": [
			{
				"id": "56904",
				"type": {
					"id": "10002",
					"name": "Duplicate",
					"inward": "is duplicated by",
					"outward": "duplicates"
				},
				"outwardIssue": {
					"id": "172201",
					"key": "TIMOB-26391",
					"fields": {
						"summary": "iOS: App randomly freezes on iOS 12 beta when using built-in JSCore",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Critical",
							"id": "1"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": {
			"name": "vijaysingh",
			"key": "vijaysingh",
			"displayName": "Vijay Singh",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2018-10-05T12:16:02.000+0000",
		"status": {
			"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
			"name": "Resolved",
			"id": "5",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [],
		"description": "After updating to ios 12 the application starts to crash randomly but often.\r\n\r\n\r\n\r\nthe part from the crashlog that is probably causing it:\r\n{code:java}\r\n14  MyApplication           0x0000000104453094 -[KrollBridge evalFileOnThread:context:] + 110740 (KrollBridge.m:432)\r\n15  MyApplication           0x0000000104459640 -[KrollInvocation invoke:] + 136768 (KrollContext.m:103)\r\n16  MyApplication           0x000000010445bbb0 -[KrollContext invokeOnThread:method:withObject:callback:selector:] + 146352 (KrollContext.m:1065)\r\n17  MyApplication           0x0000000104453254 -[KrollBridge evalFile:callback:selector:] + 111188 (KrollBridge.m:452)\r\n18  MyApplication           0x00000001044540b8 -[KrollBridge didStartNewContext:] + 114872 (KrollBridge.m:0)\r\n19  MyApplication           0x000000010445c874 -[KrollContext main] + 149620 (KrollContext.m:1262)\r\n{code}\r\n\r\nFull crash log:\r\n{code:java}\r\nIncident Identifier: 273DA187-754B-498B-B6A0-F9A2A48B9163\r\nCrashReporter Key:   e54932b550f96832a65276093add14c1b2c04fbe\r\nHardware Model:      iPad6,7\r\nProcess:             MyApplication [471]\r\nPath:                /private/var/containers/Bundle/Application/54E187A3-B589-428E-994F-868028FFFD5B/MyApplication.app/MyApplication\r\nIdentifier:          com.myapplication\r\nVersion:             2.7.5 (2.7.5)\r\nCode Type:           ARM-64 (Native)\r\nRole:                Non UI\r\nParent Process:      launchd [1]\r\nCoalition:           com.myapplication [600]\r\n\r\n\r\nDate/Time:           2018-09-18 23:24:40.4051 +0200\r\nLaunch Time:         2018-09-18 23:24:39.7584 +0200\r\nOS Version:          iPhone OS 12.0 (16A366)\r\nBaseband Version:    n/a\r\nReport Version:      104\r\n\r\nException Type:  EXC_BAD_ACCESS (SIGSEGV)\r\nException Subtype: KERN_INVALID_ADDRESS at 0x00000001669c89e8\r\nVM Region Info: 0x1669c89e8 is not in any region.  Bytes after previous region: 1527548393  Bytes before following region: 82834968\r\n      REGION TYPE                      START - END             [ VSIZE] PRT/MAX SHRMOD  REGION DETAIL\r\n      MALLOC_TINY            000000010b800000-000000010b900000 [ 1024K] rw-/rwx SM=PRV\r\n--->  GAP OF 0x5ffc8000 BYTES\r\n      Stack Guard            000000016b8c8000-000000016b8cc000 [   16K] ---/rwx SM=NUL\r\n\r\nTermination Signal: Segmentation fault: 11\r\nTermination Reason: Namespace SIGNAL, Code 0xb\r\nTerminating Process: exc handler [471]\r\nTriggered by Thread:  8\r\n\r\nThread 0 name:  Dispatch queue: com.apple.main-thread\r\nThread 0:\r\n0   CoreText                        0x0000000187c476b4 ConvertSettingsToOTFeatures+ 788148 (TInlineVector<unsigned int, 30ul> const&, TFontFeatureSettingList const&, bool, TInlineVector<std::__1::pair<unsigned int, unsigned int>, 30ul>&, KerningStatus*, FeatureDefaults) + 1252\r\n1   CoreText                        0x0000000187c47654 ConvertSettingsToOTFeatures+ 788052 (TInlineVector<unsigned int, 30ul> const&, TFontFeatureSettingList const&, bool, TInlineVector<std::__1::pair<unsigned int, unsigned int>, 30ul>&, KerningStatus*, FeatureDefaults) + 1156\r\n2   CoreText                        0x0000000187c29b2c TOpenTypeMorph::ShapeGlyphs+ 666412 (SyncState&, bool*) + 724\r\n3   CoreText                        0x0000000187ba8240 TShapingEngine::ShapeGlyphs+ 135744 (TRunGlue&, AnnexTableFlag, __CFString const*) + 160\r\n4   CoreText                        0x0000000187bcea08 CTFontTransformGlyphs + 432\r\n5   UIFoundation                    0x000000018e48684c -[NSCoreTypesetter _NSFastDrawString:length:attributes:paragraphStyle:typesetterBehavior:lineBreakMode:rect:padding:cgContext:baselineRendering:usesFontLeading:usesScreenFont:scrollable:syncAlignment:mirrored:boundingRectPointer:baselineOffsetPointer:wantsTextLineFragments:applicationFrameworkContext:] + 3120\r\n6   UIFoundation                    0x000000018e482d44 -[NSCoreTypesetter _stringDrawingCoreTextEngineWithOriginalString:rect:padding:context:forceClipping:styledTextOptions:attributes:stringDrawingOptions:drawingContext:wantsTextLineFragments:validatedAttributedString:firstNonRenderedCharacterIndex:foundSoftHyphenAtEOL:enginePathUsed:] + 1112\r\n7   UIFoundation                    0x000000018e501e38 __NSStringDrawingEngine + 3104\r\n8   UIFoundation                    0x000000018e4870b0 -[NSAttributedString+ 24752 (NSExtendedStringDrawing) boundingRectWithSize:options:context:] + 568\r\n9   UIFoundation                    0x000000018e49ee30 -[NSAttributedString+ 122416 (NSStringDrawing) size] + 76\r\n10  MyApplication           0x0000000104512148 -[TiUILabel sizeForFont:] + 893256 (TiUILabel.m:68)\r\n11  MyApplication           0x0000000104512278 -[TiUILabel contentWidthForWidth:] + 893560 (TiUILabel.m:87)\r\n12  MyApplication           0x0000000104511978 -[TiUILabelProxy contentWidthForWidth:] + 891256 (TiUILabelProxy.m:17)\r\n13  MyApplication           0x000000010447fed0 -[TiViewProxy autoWidthForSize:] + 294608 (TiViewProxy.m:876)\r\n14  MyApplication           0x0000000104480bd8 -[TiViewProxy minimumParentWidthForSize:] + 297944 (TiViewProxy.m:1002)\r\n15  MyApplication           0x0000000104480de0 -[TiViewProxy minimumParentHeightForSize:] + 298464 (TiViewProxy.m:1019)\r\n16  MyApplication           0x0000000104480558 -[TiViewProxy autoHeightForSize:] + 296280 (TiViewProxy.m:950)\r\n17  MyApplication           0x0000000104481300 -[TiViewProxy minimumParentHeightForSize:] + 299776 (TiViewProxy.m:1046)\r\n18  MyApplication           0x00000001045cd478 -[TiUIScrollViewProxy autoHeightForSize:] + 1660024 (TiUIScrollViewProxy.m:202)\r\n19  MyApplication           0x00000001045d04f8 -[TiUIScrollView handleContentSize] + 1672440 (TiUIScrollView.m:289)\r\n20  MyApplication           0x00000001045d0130 __43-[TiUIScrollView setNeedsHandleContentSize]_block_invoke + 1671472 (TiUIScrollView.m:236)\r\n21  MyApplication           0x0000000104573a9c __TiThreadPerformOnMainThread_block_invoke + 1292956 (TiBase.m:249)\r\n22  MyApplication           0x0000000104573e74 TiThreadProcessPendingMainThreadBlocks + 1293940 (TiBase.m:357)\r\n23  MyApplication           0x0000000104573c84 __TiThreadPerformOnMainThread_block_invoke.206 + 1293444 (TiBase.m:287)\r\n24  libdispatch.dylib               0x000000018390a6c8 _dispatch_call_block_and_release + 24\r\n25  libdispatch.dylib               0x000000018390b484 _dispatch_client_callout + 16\r\n26  libdispatch.dylib               0x00000001838b79ec _dispatch_main_queue_callback_4CF$VARIANT$mp + 1068\r\n27  CoreFoundation                  0x0000000183e611bc __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ + 12\r\n28  CoreFoundation                  0x0000000183e5c084 __CFRunLoopRun + 1964\r\n29  CoreFoundation                  0x0000000183e5b5b8 CFRunLoopRunSpecific + 436\r\n30  GraphicsServices                0x00000001860cf584 GSEventRunModal + 100\r\n31  UIKitCore                       0x00000001b025f558 UIApplicationMain + 212\r\n32  MyApplication           0x000000010443ef9c main + 28572 (main.m:30)\r\n33  libdyld.dylib                   0x000000018391bb94 start + 4\r\n\r\nThread 1:\r\n0   libsystem_pthread.dylib         0x0000000183aefcfc start_wqthread + 0\r\n\r\nThread 2:\r\n0   libsystem_pthread.dylib         0x0000000183aefcfc start_wqthread + 0\r\n\r\nThread 3:\r\n0   libsystem_pthread.dylib         0x0000000183aefcfc start_wqthread + 0\r\n\r\nThread 4:\r\n0   libsystem_pthread.dylib         0x0000000183aefcfc start_wqthread + 0\r\n\r\nThread 5 name:  com.apple.uikit.eventfetch-thread\r\nThread 5:\r\n0   libsystem_kernel.dylib          0x0000000183a5ced0 mach_msg_trap + 8\r\n1   libsystem_kernel.dylib          0x0000000183a5c3a8 mach_msg + 72\r\n2   CoreFoundation                  0x0000000183e60fb0 __CFRunLoopServiceMachPort + 236\r\n3   CoreFoundation                  0x0000000183e5be4c __CFRunLoopRun + 1396\r\n4   CoreFoundation                  0x0000000183e5b5b8 CFRunLoopRunSpecific + 436\r\n5   Foundation                      0x000000018484f6a4 -[NSRunLoop+ 34468 (NSRunLoop) runMode:beforeDate:] + 300\r\n6   Foundation                      0x000000018484f550 -[NSRunLoop+ 34128 (NSRunLoop) runUntilDate:] + 148\r\n7   UIKitCore                       0x00000001b01bcac0 -[UIEventFetcher threadMain] + 136\r\n8   Foundation                      0x00000001849823b0 __NSThread__start__ + 1040\r\n9   libsystem_pthread.dylib         0x0000000183aec2fc _pthread_body + 128\r\n10  libsystem_pthread.dylib         0x0000000183aec25c _pthread_start + 48\r\n11  libsystem_pthread.dylib         0x0000000183aefd08 thread_start + 4\r\n\r\nThread 6:\r\n0   libsystem_pthread.dylib         0x0000000183aefcfc start_wqthread + 0\r\n\r\nThread 7:\r\n0   libsystem_pthread.dylib         0x0000000183aefcfc start_wqthread + 0\r\n\r\nThread 8 name:  KrollContext<kroll$1>\r\nThread 8 Crashed:\r\n0   JavaScriptCore                  0x000000018b8eb27c JSC::LLInt::setUpCall+ 7848572 (JSC::ExecState*, JSC::Instruction*, JSC::CodeSpecializationKind, JSC::JSValue, JSC::LLIntCallLinkInfo*) + 292\r\n1   JavaScriptCore                  0x000000018b8eb1a4 JSC::LLInt::setUpCall+ 7848356 (JSC::ExecState*, JSC::Instruction*, JSC::CodeSpecializationKind, JSC::JSValue, JSC::LLIntCallLinkInfo*) + 76\r\n2   JavaScriptCore                  0x000000018b1d8120 llint_entry + 29952\r\n3   JavaScriptCore                  0x000000018b1d0a1c vmEntryToJavaScript + 300\r\n4   JavaScriptCore                  0x000000018b8483f0 JSC::Interpreter::executeCall+ 7181296 (JSC::ExecState*, JSC::JSObject*, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) + 424\r\n5   JavaScriptCore                  0x000000018ba7a0fc JSC::boundThisNoArgsFunctionCall+ 9482492 (JSC::ExecState*) + 452\r\n6   JavaScriptCore                  0x000000018b1d8bac llint_entry + 32652\r\n7   JavaScriptCore                  0x000000018b1d8134 llint_entry + 29972\r\n8   JavaScriptCore                  0x000000018b1d84e0 llint_entry + 30912\r\n9   JavaScriptCore                  0x000000018b1d8134 llint_entry + 29972\r\n10  JavaScriptCore                  0x000000018b1d0a1c vmEntryToJavaScript + 300\r\n11  JavaScriptCore                  0x000000018b846fe4 JSC::Interpreter::executeProgram+ 7176164 (JSC::SourceCode const&, JSC::ExecState*, JSC::JSObject*) + 9620\r\n12  JavaScriptCore                  0x000000018ba22218 JSC::evaluate+ 9122328 (JSC::ExecState*, JSC::SourceCode const&, JSC::JSValue, WTF::NakedPtr<JSC::Exception>&) + 316\r\n13  JavaScriptCore                  0x000000018b1f9634 JSEvaluateScript + 472\r\n14  MyApplication           0x0000000104453094 -[KrollBridge evalFileOnThread:context:] + 110740 (KrollBridge.m:432)\r\n15  MyApplication           0x0000000104459640 -[KrollInvocation invoke:] + 136768 (KrollContext.m:103)\r\n16  MyApplication           0x000000010445bbb0 -[KrollContext invokeOnThread:method:withObject:callback:selector:] + 146352 (KrollContext.m:1065)\r\n17  MyApplication           0x0000000104453254 -[KrollBridge evalFile:callback:selector:] + 111188 (KrollBridge.m:452)\r\n18  MyApplication           0x00000001044540b8 -[KrollBridge didStartNewContext:] + 114872 (KrollBridge.m:0)\r\n19  MyApplication           0x000000010445c874 -[KrollContext main] + 149620 (KrollContext.m:1262)\r\n20  Foundation                      0x00000001849823b0 __NSThread__start__ + 1040\r\n21  libsystem_pthread.dylib         0x0000000183aec2fc _pthread_body + 128\r\n22  libsystem_pthread.dylib         0x0000000183aec25c _pthread_start + 48\r\n23  libsystem_pthread.dylib         0x0000000183aefd08 thread_start + 4\r\n\r\nThread 9:\r\n0   libsystem_kernel.dylib          0x0000000183a5cf24 semaphore_timedwait_trap + 8\r\n1   libdispatch.dylib               0x00000001838ac0ac _dispatch_sema4_timedwait$VARIANT$mp + 64\r\n2   libdispatch.dylib               0x00000001838aca08 _dispatch_semaphore_wait_slow + 72\r\n3   libdispatch.dylib               0x00000001838ba824 _dispatch_worker_thread + 352\r\n4   libsystem_pthread.dylib         0x0000000183aec2fc _pthread_body + 128\r\n5   libsystem_pthread.dylib         0x0000000183aec25c _pthread_start + 48\r\n6   libsystem_pthread.dylib         0x0000000183aefd08 thread_start + 4\r\n\r\nThread 10 name:  JavaScriptCore bmalloc scavenger\r\nThread 10:\r\n0   libsystem_kernel.dylib          0x0000000183a5cfd8 swtch_pri + 8\r\n1   libsystem_pthread.dylib         0x0000000183aecf88 sched_yield + 16\r\n2   JavaScriptCore                  0x000000018b1cd93c bmalloc::Mutex::lockSlowCase+ 387388 () + 108\r\n3   JavaScriptCore                  0x000000018b1cadb8 void std::__1::condition_variable_any::wait<std::__1::unique_lock<bmalloc::Mutex> >+ 376248 (std::__1::unique_lock<bmalloc::Mutex>&) + 164\r\n4   JavaScriptCore                  0x000000018b1cee70 bmalloc::Scavenger::threadRunLoop+ 392816 () + 176\r\n5   JavaScriptCore                  0x000000018b1ce5a4 bmalloc::Scavenger::Scavenger+ 390564 (std::__1::lock_guard<bmalloc::Mutex>&) + 0\r\n6   JavaScriptCore                  0x000000018b1d0050 std::__1::__thread_specific_ptr<std::__1::__thread_struct>::set_pointer+ 397392 (std::__1::__thread_struct*) + 0\r\n7   libsystem_pthread.dylib         0x0000000183aec2fc _pthread_body + 128\r\n8   libsystem_pthread.dylib         0x0000000183aec25c _pthread_start + 48\r\n9   libsystem_pthread.dylib         0x0000000183aefd08 thread_start + 4\r\n\r\nThread 11 name:  WTF::AutomaticThread\r\nThread 11:\r\n0   libsystem_kernel.dylib          0x0000000183a67f0c __psynch_cvwait + 8\r\n1   libsystem_pthread.dylib         0x0000000183ae4d48 _pthread_cond_wait$VARIANT$mp + 636\r\n2   JavaScriptCore                  0x000000018b1b8f34 WTF::ThreadCondition::timedWait+ 302900 (WTF::Mutex&, WTF::WallTime) + 148\r\n3   JavaScriptCore                  0x000000018b1a00f4 WTF::ParkingLot::parkConditionallyImpl(void const*, WTF::ScopedLambda<bool ()> const&, WTF::ScopedLambda<void + 200948 ()> const&, WTF::TimeWithDynamicClockType const&) + 2004\r\n4   JavaScriptCore                  0x000000018b179a38 bool WTF::Condition::waitUntil<WTF::Lock>+ 43576 (WTF::Lock&, WTF::TimeWithDynamicClockType const&) + 184\r\n5   JavaScriptCore                  0x000000018b179dd8 WTF::Function<void ()>::CallableWrapper<WTF::AutomaticThread::start(WTF::AbstractLocker const&)::$_0>::call+ 44504 () + 216\r\n6   JavaScriptCore                  0x000000018b1b714c WTF::Thread::entryPoint+ 295244 (WTF::Thread::NewThreadContext*) + 256\r\n7   JavaScriptCore                  0x000000018b1b86b4 WTF::wtfThreadEntryPoint+ 300724 (void*) + 12\r\n8   libsystem_pthread.dylib         0x0000000183aec2fc _pthread_body + 128\r\n9   libsystem_pthread.dylib         0x0000000183aec25c _pthread_start + 48\r\n10  libsystem_pthread.dylib         0x0000000183aefd08 thread_start + 4\r\n\r\nThread 12 name:  JSC Heap Collector Thread\r\nThread 12:\r\n0   libsystem_kernel.dylib          0x0000000183a67f0c __psynch_cvwait + 8\r\n1   libsystem_pthread.dylib         0x0000000183ae4d48 _pthread_cond_wait$VARIANT$mp + 636\r\n2   JavaScriptCore                  0x000000018b1b8f34 WTF::ThreadCondition::timedWait+ 302900 (WTF::Mutex&, WTF::WallTime) + 148\r\n3   JavaScriptCore                  0x000000018b1a00f4 WTF::ParkingLot::parkConditionallyImpl(void const*, WTF::ScopedLambda<bool ()> const&, WTF::ScopedLambda<void + 200948 ()> const&, WTF::TimeWithDynamicClockType const&) + 2004\r\n4   JavaScriptCore                  0x000000018b179a38 bool WTF::Condition::waitUntil<WTF::Lock>+ 43576 (WTF::Lock&, WTF::TimeWithDynamicClockType const&) + 184\r\n5   JavaScriptCore                  0x000000018b179dd8 WTF::Function<void ()>::CallableWrapper<WTF::AutomaticThread::start(WTF::AbstractLocker const&)::$_0>::call+ 44504 () + 216\r\n6   JavaScriptCore                  0x000000018b1b714c WTF::Thread::entryPoint+ 295244 (WTF::Thread::NewThreadContext*) + 256\r\n7   JavaScriptCore                  0x000000018b1b86b4 WTF::wtfThreadEntryPoint+ 300724 (void*) + 12\r\n8   libsystem_pthread.dylib         0x0000000183aec2fc _pthread_body + 128\r\n9   libsystem_pthread.dylib         0x0000000183aec25c _pthread_start + 48\r\n10  libsystem_pthread.dylib         0x0000000183aefd08 thread_start + 4\r\n\r\nThread 8 crashed with ARM Thread State (64-bit):\r\n    x0: 0x0000000106dee4e8   x1: 0x0000000106dee4e8   x2: 0x0000000000000000   x3: 0x00000001b43d8668\r\n    x4: 0x0000000106de5bc0   x5: 0x0000000000000001   x6: 0x000000016be21208   x7: 0x0000000000000000\r\n    x8: 0x000000000bd0513d   x9: 0x00000001081a0000  x10: 0x000000018ba47638  x11: 0x0000000000000000\r\n   x12: 0x0000000000000002  x13: 0x0000000040000000  x14: 0x0000000000000000  x15: 0x0000000108259600\r\n   x16: 0x0000000183addd60  x17: 0x0000000000000cf3  x18: 0x0000000000000000  x19: 0x000000016be21370\r\n   x20: 0x000000016be213f0  x21: 0x00000001b43d8668  x22: 0x0000000106e00000  x23: 0x0000000106e00000\r\n   x24: 0x0000000108207930  x25: 0x000000016be21670  x26: 0x0000000000000000  x27: 0xffff000000000000\r\n   x28: 0xffff000000000002   fp: 0x000000016be21360   lr: 0x000000018b8eb1a4\r\n    sp: 0x000000016be212f0   pc: 0x000000018b8eb27c cpsr: 0x80000000\r\n{code}\r\n",
		"attachment": [
			{
				"id": "65645",
				"filename": "Bildschirmfoto 2018-09-24 um 10.19.33.png",
				"author": {
					"name": "hknoechel",
					"key": "hansknoechel",
					"displayName": "Hans Knöchel",
					"active": true,
					"timeZone": "Europe/Berlin"
				},
				"created": "2018-09-24T08:21:22.000+0000",
				"size": 951155,
				"mimeType": "image/png"
			}
		],
		"flagged": false,
		"summary": "ios 12 app crash (EXC_BAD_ACCESS, KERN_INVALID_ADDRESS)",
		"creator": {
			"name": "bar b",
			"key": "bar b",
			"displayName": "Bar Bruy",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"subtasks": [],
		"reporter": {
			"name": "bar b",
			"key": "bar b",
			"displayName": "Bar Bruy",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"environment": "* on real devices only\r\n* ios 12\r\n* titanium sdk 7.4 and sdk 7.2",
		"closedSprints": [
			{
				"id": 1078,
				"state": "closed",
				"name": "2018 Sprint 20 SDK",
				"startDate": "2018-09-23T16:57:58.349Z",
				"endDate": "2018-10-07T16:57:00.000Z",
				"completeDate": "2018-10-07T23:31:40.476Z",
				"originBoardId": 114
			}
		],
		"comment": {
			"comments": [
				{
					"id": "441812",
					"author": {
						"name": "sdarda",
						"key": "sdarda",
						"displayName": "Sharif AbuDarda",
						"active": false,
						"timeZone": "Asia/Dhaka"
					},
					"body": "Hello, This looks to a case of a non-reproducible issue on our end. Usually, this could be caused by old code being updated to the new release. Make sure you remove all event listeners in window close. This is a standard recommendation. In any case, Could you provide a standalone test case that regenerates the issue? Also, Look for other reported JIRA ticket on the same problem. Maybe someone solved it on their end. Thanks.",
					"updateAuthor": {
						"name": "sdarda",
						"key": "sdarda",
						"displayName": "Sharif AbuDarda",
						"active": false,
						"timeZone": "Asia/Dhaka"
					},
					"created": "2018-09-19T20:48:27.000+0000",
					"updated": "2018-09-19T20:48:27.000+0000"
				},
				{
					"id": "441827",
					"author": {
						"name": "bar b",
						"key": "bar b",
						"displayName": "Bar Bruy",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Hi,\r\n\r\nMy app crashes in less then a minute. and in my app its very-reproducible.\r\nIt happens without leaving the initial window.\r\nI was doing repetitive http calls.\r\n\r\nHow do you mean \"Old code being updated\"?\r\n=> the current app in the app store crashes on ios12 with titanium sdk 7.2.\r\n=> During development it also crashes (ios12 and sdk 7.4)\r\n=> It only crashes on real devices.\r\n\r\n\"Make sure you remove all event listeners in window close\"\r\n=> In my app all eventlisteners are removed on window close\r\n\r\nHow can I add more extensive logging to pinpoint the problem?\r\nI'll try to create a reproducible testproject.\r\n\r\nThanks,\r\nBart",
					"updateAuthor": {
						"name": "bar b",
						"key": "bar b",
						"displayName": "Bar Bruy",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-20T06:45:43.000+0000",
					"updated": "2018-09-20T06:45:43.000+0000"
				},
				{
					"id": "441828",
					"author": {
						"name": "topener",
						"key": "topener",
						"displayName": "Rene Pot",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Hi [~bar b], do you by any chance use {{run-on-main-thread}}?",
					"updateAuthor": {
						"name": "topener",
						"key": "topener",
						"displayName": "Rene Pot",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-20T08:28:50.000+0000",
					"updated": "2018-09-20T08:28:50.000+0000"
				},
				{
					"id": "441830",
					"author": {
						"name": "bar b",
						"key": "bar b",
						"displayName": "Bar Bruy",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Hi, Rene Pot,\r\n\r\nI've tried both run-on-main-thread true and false.\r\n\r\nthe crashes seem slightly different then the one i first logged.\r\n+run-on-main-thread: true+ \r\n\r\n{code:java}\r\nException Type:  EXC_BAD_ACCESS (SIGSEGV)\r\nException Subtype: KERN_INVALID_ADDRESS at 0x00000001636559e8\r\nVM Region Info: 0x1636559e8 is not in any region.  Bytes after previous region: 1493899753  Bytes before following region: 199173656\r\n      REGION TYPE                      START - END             [ VSIZE] PRT/MAX SHRMOD  REGION DETAIL\r\n      MALLOC_LARGE           000000010a598000-000000010a5a4000 [   48K] rw-/rwx SM=PRV  \r\n--->  GAP OF 0x64ea4000 BYTES\r\n      Stack Guard            000000016f448000-000000016f44c000 [   16K] ---/rwx SM=NUL  \r\n\r\nTermination Signal: Segmentation fault: 11\r\nTermination Reason: Namespace SIGNAL, Code 0xb\r\nTerminating Process: exc handler [710]\r\nTriggered by Thread:  0\r\n\r\nThread 0 name:  Dispatch queue: com.apple.main-thread\r\nThread 0 Crashed:\r\n0   JavaScriptCore                \t0x000000018b8eb27c JSC::LLInt::setUpCall+ 7848572 (JSC::ExecState*, JSC::Instruction*, JSC::CodeSpecializationKind, JSC::JSValue, JSC::LLIntCallLinkInfo*) + 292\r\n1   JavaScriptCore                \t0x000000018b8eb1a4 JSC::LLInt::setUpCall+ 7848356 (JSC::ExecState*, JSC::Instruction*, JSC::CodeSpecializationKind, JSC::JSValue, JSC::LLIntCallLinkInfo*) + 76\r\n2   JavaScriptCore                \t0x000000018b1d8120 llint_entry + 29952\r\n3   JavaScriptCore                \t0x000000018b1d80cc llint_entry + 29868\r\n4   JavaScriptCore                \t0x000000018b1d80cc llint_entry + 29868\r\n5   JavaScriptCore                \t0x000000018b1d0a1c vmEntryToJavaScript + 300\r\n6   JavaScriptCore                \t0x000000018b8483f0 JSC::Interpreter::executeCall+ 7181296 (JSC::ExecState*, JSC::JSObject*, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) + 424\r\n7   JavaScriptCore                \t0x000000018ba7a0fc JSC::boundThisNoArgsFunctionCall+ 9482492 (JSC::ExecState*) + 452\r\n8   JavaScriptCore                \t0x000000018b1d0b94 vmEntryToNative + 308\r\n9   JavaScriptCore                \t0x000000018b84844c JSC::Interpreter::executeCall+ 7181388 (JSC::ExecState*, JSC::JSObject*, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) + 516\r\n10  JavaScriptCore                \t0x000000018b9ff068 JSC::profiledCall+ 8978536 (JSC::ExecState*, JSC::ProfilingReason, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) + 172\r\n11  JavaScriptCore                \t0x000000018b206284 JSObjectCallAsFunction + 368\r\n12  Chapps Rental Inspector       \t0x00000001008e7678 __65-[KrollObject invokeCallbackForKey:withObject:thisObject:onDone:]_block_invoke + 194168 (KrollObject.m:1103)\r\n13  libdispatch.dylib             \t0x000000018390a6c8 _dispatch_call_block_and_release + 24\r\n14  libdispatch.dylib             \t0x000000018390b484 _dispatch_client_callout + 16\r\n15  libdispatch.dylib             \t0x00000001838b79ec _dispatch_main_queue_callback_4CF$VARIANT$mp + 1068\r\n16  CoreFoundation                \t0x0000000183e611bc __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ + 12\r\n17  CoreFoundation                \t0x0000000183e5c084 __CFRunLoopRun + 1964\r\n18  CoreFoundation                \t0x0000000183e5b5b8 CFRunLoopRunSpecific + 436\r\n19  GraphicsServices              \t0x00000001860cf584 GSEventRunModal + 100\r\n20  UIKitCore                     \t0x00000001b025f558 UIApplicationMain + 212\r\n21  Chapps Rental Inspector       \t0x00000001008bdd3c main + 23868 (main.m:30)\r\n22  libdyld.dylib                 \t0x000000018391bb94 start + 4\r\n{code}\r\n\r\nrun-on-main-thread false:\r\n{code}\r\nException Type:  EXC_BAD_ACCESS (SIGSEGV)\r\nException Subtype: KERN_INVALID_ADDRESS at 0x00000001655559e8\r\nVM Region Info: 0x1655559e8 is not in any region.  Bytes after previous region: 1524783593  Bytes before following region: 134473240\r\n      REGION TYPE                      START - END             [ VSIZE] PRT/MAX SHRMOD  REGION DETAIL\r\n      MALLOC_LARGE           000000010a71c000-000000010a730000 [   80K] rw-/rwx SM=PRV  \r\n--->  GAP OF 0x62e64000 BYTES\r\n      Stack Guard            000000016d594000-000000016d598000 [   16K] ---/rwx SM=NUL  \r\n\r\nTermination Signal: Segmentation fault: 11\r\nTermination Reason: Namespace SIGNAL, Code 0xb\r\nTerminating Process: exc handler [715]\r\nTriggered by Thread:  6\r\n\r\nThread 0 name:  Dispatch queue: com.apple.main-thread\r\nThread 0:\r\n0   libsystem_kernel.dylib        \t0x0000000183a5ced0 mach_msg_trap + 8\r\n1   libsystem_kernel.dylib        \t0x0000000183a5c3a8 mach_msg + 72\r\n2   CoreFoundation                \t0x0000000183e60fb0 __CFRunLoopServiceMachPort + 236\r\n3   CoreFoundation                \t0x0000000183e5be4c __CFRunLoopRun + 1396\r\n4   CoreFoundation                \t0x0000000183e5b5b8 CFRunLoopRunSpecific + 436\r\n5   GraphicsServices              \t0x00000001860cf584 GSEventRunModal + 100\r\n6   UIKitCore                     \t0x00000001b025f558 UIApplicationMain + 212\r\n7   Chapps Rental Inspector       \t0x0000000102772f9c main + 28572 (main.m:30)\r\n8   libdyld.dylib                 \t0x000000018391bb94 start + 4\r\n\r\nThread 1:\r\n0   libsystem_pthread.dylib       \t0x0000000183aefcfc start_wqthread + 0\r\n\r\nThread 2:\r\n0   libsystem_pthread.dylib       \t0x0000000183aefcfc start_wqthread + 0\r\n\r\nThread 3:\r\n0   libsystem_pthread.dylib       \t0x0000000183aefcfc start_wqthread + 0\r\n\r\nThread 4 name:  com.apple.uikit.eventfetch-thread\r\nThread 4:\r\n0   libsystem_kernel.dylib        \t0x0000000183a5ced0 mach_msg_trap + 8\r\n1   libsystem_kernel.dylib        \t0x0000000183a5c3a8 mach_msg + 72\r\n2   CoreFoundation                \t0x0000000183e60fb0 __CFRunLoopServiceMachPort + 236\r\n3   CoreFoundation                \t0x0000000183e5be4c __CFRunLoopRun + 1396\r\n4   CoreFoundation                \t0x0000000183e5b5b8 CFRunLoopRunSpecific + 436\r\n5   Foundation                    \t0x000000018484f6a4 -[NSRunLoop+ 34468 (NSRunLoop) runMode:beforeDate:] + 300\r\n6   Foundation                    \t0x000000018484f550 -[NSRunLoop+ 34128 (NSRunLoop) runUntilDate:] + 148\r\n7   UIKitCore                     \t0x00000001b01bcac0 -[UIEventFetcher threadMain] + 136\r\n8   Foundation                    \t0x00000001849823b0 __NSThread__start__ + 1040\r\n9   libsystem_pthread.dylib       \t0x0000000183aec2fc _pthread_body + 128\r\n10  libsystem_pthread.dylib       \t0x0000000183aec25c _pthread_start + 48\r\n11  libsystem_pthread.dylib       \t0x0000000183aefd08 thread_start + 4\r\n\r\nThread 5:\r\n0   libsystem_pthread.dylib       \t0x0000000183aefcfc start_wqthread + 0\r\n\r\nThread 6 name:  KrollContext<kroll$1>\r\nThread 6 Crashed:\r\n0   JavaScriptCore                \t0x000000018b8eb27c JSC::LLInt::setUpCall+ 7848572 (JSC::ExecState*, JSC::Instruction*, JSC::CodeSpecializationKind, JSC::JSValue, JSC::LLIntCallLinkInfo*) + 292\r\n1   JavaScriptCore                \t0x000000018b8eb1a4 JSC::LLInt::setUpCall+ 7848356 (JSC::ExecState*, JSC::Instruction*, JSC::CodeSpecializationKind, JSC::JSValue, JSC::LLIntCallLinkInfo*) + 76\r\n2   JavaScriptCore                \t0x000000018b1d8120 llint_entry + 29952\r\n3   JavaScriptCore                \t0x000000018b1d80cc llint_entry + 29868\r\n4   JavaScriptCore                \t0x000000018b1d80cc llint_entry + 29868\r\n5   JavaScriptCore                \t0x000000018b1d0a1c vmEntryToJavaScript + 300\r\n6   JavaScriptCore                \t0x000000018b8483f0 JSC::Interpreter::executeCall+ 7181296 (JSC::ExecState*, JSC::JSObject*, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) + 424\r\n7   JavaScriptCore                \t0x000000018ba7a0fc JSC::boundThisNoArgsFunctionCall+ 9482492 (JSC::ExecState*) + 452\r\n8   JavaScriptCore                \t0x000000018b1d0b94 vmEntryToNative + 308\r\n9   JavaScriptCore                \t0x000000018b84844c JSC::Interpreter::executeCall+ 7181388 (JSC::ExecState*, JSC::JSObject*, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) + 516\r\n10  JavaScriptCore                \t0x000000018b9ff068 JSC::profiledCall+ 8978536 (JSC::ExecState*, JSC::ProfilingReason, JSC::JSValue, JSC::CallType, JSC::CallData const&, JSC::JSValue, JSC::ArgList const&) + 172\r\n11  JavaScriptCore                \t0x000000018b206284 JSObjectCallAsFunction + 368\r\n12  Chapps Rental Inspector       \t0x000000010279e4d0 -[KrollObject invokeCallbackForKey:withObject:thisObject:onDone:] + 206032 (KrollObject.m:1103)\r\n13  CoreFoundation                \t0x0000000183eda660 __invoking___ + 144\r\n14  CoreFoundation                \t0x0000000183db6980 -[NSInvocation invoke] + 292\r\n15  CoreFoundation                \t0x0000000183db7564 -[NSInvocation invokeWithTarget:] + 60\r\n16  Chapps Rental Inspector       \t0x00000001027936b0 -[ExpandedInvocationOperation main] + 161456 (KrollContext.m:1528)\r\n17  Foundation                    \t0x000000018486619c -[__NSOperationInternal _start:] + 740\r\n18  Chapps Rental Inspector       \t0x000000010278f6fc -[KrollContext invoke:] + 145148 (KrollContext.m:985)\r\n19  Chapps Rental Inspector       \t0x0000000102790d50 -[KrollContext main] + 150864 (KrollContext.m:1355)\r\n20  Foundation                    \t0x00000001849823b0 __NSThread__start__ + 1040\r\n21  libsystem_pthread.dylib       \t0x0000000183aec2fc _pthread_body + 128\r\n22  libsystem_pthread.dylib       \t0x0000000183aec25c _pthread_start + 48\r\n23  libsystem_pthread.dylib       \t0x0000000183aefd08 thread_start + 4\r\n{code}\r\n",
					"updateAuthor": {
						"name": "bar b",
						"key": "bar b",
						"displayName": "Bar Bruy",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-20T09:37:04.000+0000",
					"updated": "2018-09-20T09:37:04.000+0000"
				},
				{
					"id": "441844",
					"author": {
						"name": "bar b",
						"key": "bar b",
						"displayName": "Bar Bruy",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "I've created a test program that will crash on a real device with ios 12\r\nThis does not crash on a simulator with ios12, and it will also not crash on a real device with ios 11\r\n\r\nit is a loop \r\n* downloading json from a public api.\r\n* parse the json\r\n* insert it into a db\r\n\r\non a real device with ios12 this crashes random between 600 to 1500 cycles.\r\non the simulator with ios12 it did not even crash after 30 000 cycles\r\non a ipad2 with ios 9 it did not even crash after 5 000 cycles\r\n\r\n{code}\r\nTitanium.App.idleTimerDisabled = true;\r\n\r\nvar window = Ti.UI.createWindow({ keepScreenOn: true, layout: 'vertical' });\r\n\r\nvar label = Ti.UI.createLabel({ text: 'starting downloads...', left: 8, right: 8, height: Ti.UI.SIZE, top: 50 });\r\nwindow.add(label);\r\n\r\nvar row = Ti.UI.createTableViewRow({ title: 'Starting downloads ...' });\r\nvar table = Ti.UI.createTableView({ width: Ti.UI.FILL, height: Ti.UI.FILL, data: [row] });\r\nwindow.add(table);\r\nwindow.open();\r\n\r\nfunction log(message) {\r\n    var row = Ti.UI.createTableViewRow({ title: message });\r\n    table.insertRowBefore(0, row, false);\r\n    label.text = counter;\r\n    Ti.API.info(message);\r\n}\r\n\r\nvar xhr = null;\r\nvar counter = 0;\r\ncreateDb();\r\ndownload();\r\n\r\nfunction download() {\r\n    var url = \"https://api.openbrewerydb.org/breweries\";\r\n    xhr = Ti.Network.createHTTPClient({\r\n        onload: downloadSuccess,\r\n        onerror: downloadFailed,\r\n        timeout: 5000\r\n    });\r\n    xhr.open(\"GET\", url);\r\n    xhr.send();\r\n};\r\n\r\nfunction downloadFailed(response) {\r\n    counter++;\r\n    var errorMessage = response != null && response.error != null ? response.error : 'No error info';\r\n    log('Download error ' + errorMessage);\r\n    //setTimeout(download, 50); //I use the setTimeout so the ui gets rendered, if you just execute download(); it will also crash\r\n    download();\r\n};\r\n\r\nfunction downloadSuccess(response) {\r\n    counter++;\r\n    var message = \"\";\r\n    if (response && response.success && xhr && xhr.responseText) {\r\n        log('download success: ' + counter);\r\n        databaseInsert(JSON.parse(xhr.responseText));\r\n    } else {\r\n        log('web request failed');\r\n        Ti.API.warning(message);\r\n    }\r\n    download();\r\n};\r\n\r\nfunction createDb() {\r\n    var db = Ti.Database.open('MyDatabase.sqlite3');\r\n    db.execute(\r\n        'CREATE TABLE IF NOT EXISTS myTable(' +\r\n        'id INTEGER PRIMARY KEY,' +\r\n        'jsonObject TEXT' +\r\n        ');'\r\n    );\r\n    db.close();\r\n}\r\n\r\nfunction databaseInsert(jsonObject) {\r\n    var db = Ti.Database.open('MyDatabase.sqlite3');\r\n    db.execute('insert into myTable ' +\r\n        '(jsonObject) ' +\r\n        'VALUES(?)',\r\n        JSON.stringify(jsonObject)\r\n    );\r\n    db.close();\r\n}\r\n{code}\r\n\r\n***Edit 21/09***\r\nChanged testcode so the UI does not freeze",
					"updateAuthor": {
						"name": "bar b",
						"key": "bar b",
						"displayName": "Bar Bruy",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-20T13:25:00.000+0000",
					"updated": "2018-09-21T12:02:37.000+0000"
				},
				{
					"id": "441873",
					"author": {
						"name": "gertjans",
						"key": "gertjans",
						"displayName": "Gertjan Smits",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"updateAuthor": {
						"name": "gertjans",
						"key": "gertjans",
						"displayName": "Gertjan Smits",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-21T08:14:22.000+0000",
					"updated": "2018-09-21T08:14:22.000+0000"
				},
				{
					"id": "441877",
					"author": {
						"name": "bar b",
						"key": "bar b",
						"displayName": "Bar Bruy",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "@Gertjan Smits Did you try this on an actual device running ios12?\r\n\r\nFor me this code freeses the ui but does not crash on device with ios 11.  \r\nIt does not crash on the simulator with ios12\r\nBut it does crash on an actual device running ios12",
					"updateAuthor": {
						"name": "bar b",
						"key": "bar b",
						"displayName": "Bar Bruy",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-21T09:14:42.000+0000",
					"updated": "2018-09-21T09:14:42.000+0000"
				},
				{
					"id": "441879",
					"author": {
						"name": "gertjans",
						"key": "gertjans",
						"displayName": "Gertjan Smits",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "I am testing on a iPhone 6, 7, 8 Plus and an iPad Pro 12.9 - all running iOS 12.\r\n\r\nWhat do you mean with crash exactly? For me a crash and a freeze are 2 different things.\r\n*Freeze* stops the UI, but you still see the app.\r\n*Crash* kills the app and you have to restart it again.\r\n\r\nThe issues we have with are apps are _crashes_. Your issue seems to be about _freezes_.\r\n\r\n(both should be fixed obviously - but they might not be the same)",
					"updateAuthor": {
						"name": "gertjans",
						"key": "gertjans",
						"displayName": "Gertjan Smits",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-21T09:21:35.000+0000",
					"updated": "2018-09-21T09:23:10.000+0000"
				},
				{
					"id": "441882",
					"author": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Testing on iPhone SE iOS 12 device, I get the impression that setTimeout causes UI freezes and databaseInsert (without setTimeout) causes crashes",
					"updateAuthor": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-21T09:35:54.000+0000",
					"updated": "2018-09-21T09:35:54.000+0000"
				},
				{
					"id": "441883",
					"author": {
						"name": "bar b",
						"key": "bar b",
						"displayName": "Bar Bruy",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "@Gerjansmits My actual app crashes (not freezes) on ios 12.\r\n*the testcode I provided kills(crashes) the app after 600-1600 cycles. running on a ipad pro 12.9 with ios12\r\n=> @Gerjansmits can you also try to change the \"setTimeout(download,..)\" with direct invocation:  \"download()\"?\r\n\r\n@Nikos Poulios My ipad pro 12.9 (ios12) also crashes with the setTimeout\r\n",
					"updateAuthor": {
						"name": "bar b",
						"key": "bar b",
						"displayName": "Bar Bruy",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-21T09:47:51.000+0000",
					"updated": "2018-09-21T09:47:51.000+0000"
				},
				{
					"id": "441884",
					"author": {
						"name": "gertjans",
						"key": "gertjans",
						"displayName": "Gertjan Smits",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "I just explicitly set the {{run-on-main-thread}} to {{false}}, which causes the *crash*! Before it was on {{true}} which resulted in a *freeze*. So I guess the issue is the same, only that this flag changes the symptom a bit.\r\n\r\n{code:java}\r\n<property name=\"run-on-main-thread\" type=\"bool\">false</property>\r\n{code}\r\n",
					"updateAuthor": {
						"name": "gertjans",
						"key": "gertjans",
						"displayName": "Gertjan Smits",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-21T09:48:19.000+0000",
					"updated": "2018-09-21T09:48:19.000+0000"
				},
				{
					"id": "441885",
					"author": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "@Bar Bruy yes it certainly crashes with the setTimeout. What I mean is that when there is call to databaseInsert app tends to crash and if there is no call to databaseInsert the app tends to freeze when setTimeout is there. With no setTimeout and no databaseInsert, app seems to work ok...Gertjan might be right though and all the above are different final results of the same issue",
					"updateAuthor": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-21T09:58:17.000+0000",
					"updated": "2018-09-21T09:58:17.000+0000"
				},
				{
					"id": "441887",
					"author": {
						"name": "bar b",
						"key": "bar b",
						"displayName": "Bar Bruy",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Dear appcelerator, and fellow developers that have the same (or simular) issues,\r\n\r\nThe test project I created freezes the ui, and this can cause confusion to what to problem is. \r\nI've updated the testcode, the UI does not freeze anymore. (previously I animated the table inserts)\r\n\r\nso once again to summarize:\r\n* code crashes (ios 12 device)\r\n* code works fine on (ios 11 device/simulator) and (ios 12 simulator)\r\n* run-on-main-thread true or false does not affect the crashing\r\n\r\nTest project:\r\n{code}\r\nTitanium.App.idleTimerDisabled = true;\r\n\r\nvar window = Ti.UI.createWindow({ keepScreenOn: true, layout: 'vertical' });\r\n\r\nvar label = Ti.UI.createLabel({ text: 'starting downloads...', left: 8, right: 8, height: Ti.UI.SIZE, top: 50 });\r\nwindow.add(label);\r\n\r\nvar row = Ti.UI.createTableViewRow({ title: 'Starting downloads ...' });\r\nvar table = Ti.UI.createTableView({ width: Ti.UI.FILL, height: Ti.UI.FILL, data: [row] });\r\nwindow.add(table);\r\nwindow.open();\r\n\r\nfunction log(message) {\r\n    var row = Ti.UI.createTableViewRow({ title: message });\r\n    table.insertRowBefore(0, row, false);\r\n    label.text = counter;\r\n    Ti.API.info(message);\r\n}\r\n\r\nvar xhr = null;\r\nvar counter = 0;\r\ncreateDb();\r\ndownload();\r\n\r\nfunction download() {\r\n    var url = \"https://api.openbrewerydb.org/breweries\";\r\n    xhr = Ti.Network.createHTTPClient({\r\n        onload: downloadSuccess,\r\n        onerror: downloadFailed,\r\n        timeout: 5000\r\n    });\r\n    xhr.open(\"GET\", url);\r\n    xhr.send();\r\n};\r\n\r\nfunction downloadFailed(response) {\r\n    counter++;\r\n    var errorMessage = response != null && response.error != null ? response.error : 'No error info';\r\n    log('Download error ' + errorMessage);\r\n    //setTimeout(download, 50); //I use the setTimeout so the ui gets rendered, if you just execute download(); it will also crash\r\n    download();\r\n};\r\n\r\nfunction downloadSuccess(response) {\r\n    counter++;\r\n    var message = \"\";\r\n    if (response && response.success && xhr && xhr.responseText) {\r\n        log('download success: ' + counter);\r\n        databaseInsert(JSON.parse(xhr.responseText));\r\n    } else {\r\n        log('web request failed');\r\n        Ti.API.warning(message);\r\n    }\r\n    download();\r\n};\r\n\r\nfunction createDb() {\r\n    var db = Ti.Database.open('MyDatabase.sqlite3');\r\n    db.execute(\r\n        'CREATE TABLE IF NOT EXISTS myTable(' +\r\n        'id INTEGER PRIMARY KEY,' +\r\n        'jsonObject TEXT' +\r\n        ');'\r\n    );\r\n    db.close();\r\n}\r\n\r\nfunction databaseInsert(jsonObject) {\r\n    var db = Ti.Database.open('MyDatabase.sqlite3');\r\n    db.execute('insert into myTable ' +\r\n        '(jsonObject) ' +\r\n        'VALUES(?)',\r\n        JSON.stringify(jsonObject)\r\n    );\r\n    db.close();\r\n}\r\n{code}\r\n\r\n",
					"updateAuthor": {
						"name": "bar b",
						"key": "bar b",
						"displayName": "Bar Bruy",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-21T11:55:30.000+0000",
					"updated": "2018-09-21T11:55:30.000+0000"
				},
				{
					"id": "441891",
					"author": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Yes now it is more clear the crash issue (sorry for the confusion but there are other tickets for apparently another issue concerning setTimeout and app freezes). \r\n\r\nIt should also be noted that the code above works ok on iOS 12 using Titanium 6.3.0.GA",
					"updateAuthor": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-21T13:43:00.000+0000",
					"updated": "2018-09-21T13:43:00.000+0000"
				},
				{
					"id": "441916",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Please follow TIMOB-26296 for details on this issue, thank you!",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-22T15:15:08.000+0000",
					"updated": "2018-09-22T15:15:08.000+0000"
				},
				{
					"id": "441933",
					"author": {
						"name": "narbs",
						"key": "narbs",
						"displayName": "Christian Clare",
						"active": true,
						"timeZone": "Australia/Brisbane"
					},
					"body": "Hans - TIMOB-26296 isn't visible... is that an internal Jira? Really need to know what the definitive Jira is for the iOS 12 random crashing issue - it is affecting our production app",
					"updateAuthor": {
						"name": "narbs",
						"key": "narbs",
						"displayName": "Christian Clare",
						"active": true,
						"timeZone": "Australia/Brisbane"
					},
					"created": "2018-09-24T04:14:14.000+0000",
					"updated": "2018-09-24T04:14:14.000+0000"
				},
				{
					"id": "441935",
					"author": {
						"name": "bar b",
						"key": "bar b",
						"displayName": "Bar Bruy",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "@Hans, i also cannot navigate in any way to TIMOB-26296 or don't know how to.\r\nI would like to know if I need to go to the app store with a nightly build or if I can fix it in code.\r\nthx for your help.\r\nBart",
					"updateAuthor": {
						"name": "bar b",
						"key": "bar b",
						"displayName": "Bar Bruy",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-24T06:48:58.000+0000",
					"updated": "2018-09-24T06:48:58.000+0000"
				},
				{
					"id": "441936",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Sorry, it's TIMOB-26391!",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-24T07:43:44.000+0000",
					"updated": "2018-09-24T07:43:44.000+0000"
				},
				{
					"id": "441937",
					"author": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "@Hans are you sure this is a duplicate of TIMOB-26391? As discussed in the comments above, issue is about app crashes not freezes and not related to setTimeout or setInterval, example code seems to crash on databaseInsert and regardless of run-on-main-thread",
					"updateAuthor": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-24T07:52:16.000+0000",
					"updated": "2018-09-24T07:56:26.000+0000"
				},
				{
					"id": "441938",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~nipoul] The initial author only provided sql-related samples, which we can reproduce in the same way as TIMOB-26391. I agree that the initial log is rather about labels, but it seems like there is no isolated test-case for that. *EDIT*: Reopening for now, but we require a test-case to reproduce and fix it.\r\n\r\nAnd to confirm: Does {{<use-jscore-framework>false</use-jscore-framework>}} help? We noticed this during our investigations and it may also apply here.",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-24T07:55:38.000+0000",
					"updated": "2018-09-24T08:12:48.000+0000"
				},
				{
					"id": "441939",
					"author": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"updateAuthor": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-24T08:00:13.000+0000",
					"updated": "2018-09-24T08:00:13.000+0000"
				},
				{
					"id": "441940",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "That is not the test-case for this issue, it's another one (the one I linked). This one is about a label inside a scroll-view that crashes when laying out. If that sounds familiar, please provide a test from your app as this will reproduce it. ",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-24T08:03:25.000+0000",
					"updated": "2018-09-24T08:03:25.000+0000"
				},
				{
					"id": "441941",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "If the latest test-case is what's been looked for, it's a leak in the Ti.UI.TableView method \"insertRowBefore\" where the data is not correctly released. See the attachment for details.\r\n\r\n !Bildschirmfoto 2018-09-24 um 10.19.33.png|thumbnail! ",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-24T08:21:24.000+0000",
					"updated": "2018-09-24T08:21:24.000+0000"
				},
				{
					"id": "441942",
					"author": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"updateAuthor": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-24T08:26:02.000+0000",
					"updated": "2018-09-24T08:26:02.000+0000"
				},
				{
					"id": "441945",
					"author": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"updateAuthor": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-09-24T10:07:19.000+0000",
					"updated": "2018-09-24T10:07:19.000+0000"
				},
				{
					"id": "442179",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hey Guys,\r\nI guess this issue has been fixed with changes of TIMOB-26391. Can you please verify at your end  and confirm? Thanks!",
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2018-10-01T04:17:17.000+0000",
					"updated": "2018-10-01T04:17:17.000+0000"
				},
				{
					"id": "442182",
					"author": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "We indeed did not have this issue again after disabling the jscrore framework",
					"updateAuthor": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-01T06:32:49.000+0000",
					"updated": "2018-10-01T06:32:49.000+0000"
				},
				{
					"id": "442220",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~nipoul], with the fix from TIMOB-26391 you can enable jscore framework again. If you don't mind testing with your app and let us know if the issue is fixed with jscore enabled, that would be greatly appreciated! Thanks!",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-02T17:59:10.000+0000",
					"updated": "2018-10-02T17:59:10.000+0000"
				},
				{
					"id": "442241",
					"author": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "@Jan OK we will test as soon as possible and let you know",
					"updateAuthor": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-03T08:06:25.000+0000",
					"updated": "2018-10-03T08:06:25.000+0000"
				},
				{
					"id": "442294",
					"author": {
						"name": "bar b",
						"key": "bar b",
						"displayName": "Bar Bruy",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "I tested my apps, 7.4.1 doesn't crash.\r\nGood job!",
					"updateAuthor": {
						"name": "bar b",
						"key": "bar b",
						"displayName": "Bar Bruy",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-04T14:23:03.000+0000",
					"updated": "2018-10-04T14:23:03.000+0000"
				},
				{
					"id": "442299",
					"author": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Issue seems to be resolved on our apps too.Nice!",
					"updateAuthor": {
						"name": "nipoul",
						"key": "nipoul",
						"displayName": "Nikos Poulios",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-04T15:52:51.000+0000",
					"updated": "2018-10-04T15:52:51.000+0000"
				},
				{
					"id": "442335",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Closing as duplicate of TIMOB-26391",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2018-10-05T12:16:02.000+0000",
					"updated": "2018-10-05T12:16:02.000+0000"
				}
			],
			"maxResults": 32,
			"total": 32,
			"startAt": 0
		}
	}
}