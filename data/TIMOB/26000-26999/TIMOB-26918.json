{
	"id": "173224",
	"key": "TIMOB-26918",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": {
			"id": "7",
			"description": "",
			"name": "Invalid"
		},
		"resolutiondate": "2019-03-26T18:13:33.000+0000",
		"created": "2019-03-22T08:53:35.000+0000",
		"priority": {
			"name": "None",
			"id": "6"
		},
		"labels": [],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "rmitro",
			"key": "rmitro",
			"displayName": "Rakhi Mitro",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2019-03-26T18:13:33.000+0000",
		"status": {
			"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
			"name": "Resolved",
			"id": "5",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [],
		"description": "The enterprise customer experiences the following issue:\r\nthe timeout value is not working properly for them. Meaning like, even if they are not getting response within 60000, the service call is not getting terminated. This is happening especially under low networks. The customer  said that he don't see a benefit of giving timeout in the service call. They noticed the issue mainly in Android, but issue is there in ios as well.\r\n*Test case:*\r\n\r\n{code}\r\n\r\n\r\n\r\n\r\nvar win = Ti.UI.createWindow();\r\n\r\nvar url = \"http://www.google.com\";\r\n \r\nvar client = Ti.Network.createHTTPClient({\r\n \r\n    onload : function(e) {\r\n \r\n        Ti.API.info(\"Received text: \" + this.responseText);\r\n \r\n        alert('success');\r\n \r\n    },\r\n \r\n    onerror : function(e) {\r\n \r\n        Ti.API.debug(e.error);\r\n \r\n        alert('error');\r\n \r\n    },\r\n \r\n    timeout : 60000\r\n \r\n});\r\n \r\n \r\n \r\nclient.open(\"GET\", url);\r\n \r\nclient.send();\r\n\r\n\r\n{code}\r\n\r\n\r\n\r\n Note:\r\n\r\n\r\n\r\n\r\nWe tested this issue on my end using the slow internet of the mobile with latest SDK 8.0.0.GA and it's working fine on this network( android 8 device). Steps that I have followed:\r\n1. Create a new project via studio\r\n2. Added the app.js fine on my new project\r\n3.  Change the mobile network to slow. I have used a mobile internet which has hotspot facility.The mobile is kept to some distance  from laptop  and the other device which I use for app build.  \r\n4. Run the application and its working fine.\r\n\r\nTest output:\r\n\r\n{code}\r\n[INFO]  Received text: <!doctype html><html itemscope=\"\" itemtype=\"http://schema.org/WebPage\" lang=\"bn\"><head><meta co\r\nntent=\"text/html; charset=UTF-8\" http-equiv=\"Content-Type\"><meta content=\"/images/branding/googleg/1x/googleg_standard\r\n_color_128dp.png\" itemprop=\"image\"><title>Google</title><script nonce=\"6V9xhs8v1+JSqnT1utq+iQ==\">(function(){window.go\r\nogle={kEI:'dp2UXKuyBtPgrQGtmIfwAw',kEXPI:'0,1353746,58,1957,1021,1402,698,527,730,224,528,228,751,68,30,1227,1895,70,3\r\n36,178,350,448,2333800,329543,1294,12383,4855,32692,15247,867,7505,4658,5281,7640,3600,369,3314,1263,4242,2442,5367,57\r\n5,835,284,2,1306,2432,1361,4323,4967,774,2253,1589,1256,3047,2,1751,214,2595,3602,668,536,514,1808,1397,81,7,474,17,62\r\n0,29,2373,7931,1288,2,4007,796,1220,38,363,557,682,36,35,120,1217,1364,484,47,1080,2082,610,44,1558,1503,2,631,2562,2,\r\n4,2,670,44,2187,1557,404,156,354,124,2608,632,1138,626,25,439,655,21,39,278,57,198,2,130,396,783,1153,128,386,138,781,\r\n369,1027,287,704,208,548,50,41,7,398,23,78,322,376,2,278,233,21,82,456,53,193,405,10,170,6,85,211,378,386,67,140,95,78\r\n,54,311,24,459,334,564,166,7,257,147,612,15,9,4,354,216,373,48,325,381,2,126,117,10,2,473,1,2,64,57,5,459,115,347,25,2\r\n82,173,4,42,4,478,12,103,467,14,88,85,71,574,140,62,90,1,264,160,181,124,12,130,5951368,13,2541,255,5997581,2799950,4,\r\n1572,549,333,444,1,2,80,1,900,575,17,304,1,8,1,2,2132,1,1,1,1,1,414,1,748,141,59,726,3,7,563,1,1191,96,32,23,3,\r\n{code}",
		"attachment": [],
		"flagged": false,
		"summary": "The timeout property is not working on HTTPClient",
		"creator": {
			"name": "rmitro",
			"key": "rmitro",
			"displayName": "Rakhi Mitro",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "rmitro",
			"key": "rmitro",
			"displayName": "Rakhi Mitro",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"environment": "Appcelerator Command-Line Interface, version 7.0.10\r\n\r\n\r\nOperating System\r\n  Name                        = Mac OS X\r\n  Version                     = 10.13.6\r\n  Architecture                = 64bit\r\n  # CPUs                      = 4\r\n  Memory                      = 8589934592\r\nNode.js\r\n  Node.js Version             = 8.9.1\r\n  npm Version                 = 5.5.1\r\nTitanium CLI\r\n  CLI Version                 = 5.1.1\r\nTitanium SDK\r\n  SDK Version                 = 7.5.1.GA,8.0.0.GA\r\nAndroid device: Huawei y9 2018",
		"closedSprints": [
			{
				"id": 1123,
				"state": "closed",
				"name": "2019 Sprint 7",
				"startDate": "2019-03-18T17:27:25.993Z",
				"endDate": "2019-03-30T17:27:00.000Z",
				"completeDate": "2019-03-29T18:02:37.441Z",
				"originBoardId": 114
			}
		],
		"comment": {
			"comments": [
				{
					"id": "447093",
					"author": {
						"name": "jquick",
						"key": "jquick",
						"displayName": "Joshua Quick",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "This is not a bug.\r\n\r\nThe given timeout is applied when it fails to connect to the end point or if response data is not being received anymore.\r\n\r\nSo, as long as data is being received (regardless of how slow it is), the timeout won't be applied. The timeout time is reset internally every time data is being received. Now, if downloaded data suddenly *stopped* being received, then yes the timeout will correctly be applied.\r\n\r\nLet me give you another example. Let's say you want to download a huge 1 GB file via HTTP GET. In this case, it doesn't make sense for the timeout to be applied to an active download because odds are a file that large won't download within the 1 minute default timeout time.\r\n\r\nAlso note that the timeout behavior is how it works natively on all platforms in C/C++, Java, .NET, etc. This is not the behavior dictated by Titanium. You would see the exact same behavior would coding native apps as well.\r\n\r\nI recommend that you assign a callback to the [HTTPClient.ondatastream|https://docs.appcelerator.com/platform/latest/#!/api/Titanium.Network.HTTPClient-property-ondatastream] property. This provides download progress. For example, the below code will show download progress via a {{ProgressBar}}.\r\n{code:javascript}\r\nvar url = \"https://github.com/appcelerator-modules/ti.admob/releases/download/ios-2.2.0/ti.admob-iphone-2.2.0.zip\";\r\nvar downloadFilePath = Ti.Filesystem.applicationDataDirectory + \"downloaded.zip\";\r\n\r\nvar window = Ti.UI.createWindow();\r\nvar button = Ti.UI.createButton({ title: \"Download\" });\r\nvar progressBar = Ti.UI.createProgressBar({\r\n\tmin: 0,\r\n\tmax: 100,\r\n\tbottom: \"40dp\",\r\n\tleft: \"5dp\",\r\n\tright: \"5dp\",\r\n});\r\nbutton.addEventListener(\"click\", function(e) {\r\n\tvar startTime = new Date();\r\n\tvar httpClient = Ti.Network.createHTTPClient({\r\n\t\tondatastream: function(e) {\r\n\t\t\tprogressBar.value = e.progress * 100;\r\n\t\t},\r\n\t\tonload: function(e) {\r\n\t\t\tvar duration =  (new Date()) - startTime;\r\n\t\t\tTi.API.info(\"@@@ onload() duration: \" + duration + \"ms\");\r\n\t\t\talert(\"Download Time: \" + duration + \"ms\");\r\n\t\t\tprogressBar.value = 100;\r\n\t\t\tbutton.enabled = true;\r\n\t\t},\r\n\t\tonerror: function(e) {\r\n\t\t\tTi.API.info(\"@@@ onerror()\");\r\n\t\t\talert(\"Download Failed\");\r\n\t\t\tbutton.enabled = true;\r\n\t\t},\r\n//\t\ttimeout: 5000,\r\n\t});\r\n\tprogressBar.value = 0;\r\n\tbutton.enabled = false;\r\n\thttpClient.open(\"GET\", url);\r\n\thttpClient.setRequestHeader(\"Accept-Encoding\", \"identity\");\r\n\thttpClient.file = downloadFilePath;\r\n\thttpClient.send();\r\n});\r\nwindow.add(button);\r\nwindow.add(progressBar);\r\nwindow.open();\r\n{code}\r\n",
					"updateAuthor": {
						"name": "jquick",
						"key": "jquick",
						"displayName": "Joshua Quick",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-03-22T20:54:58.000+0000",
					"updated": "2019-03-22T20:54:58.000+0000"
				},
				{
					"id": "447095",
					"author": {
						"name": "emerriman",
						"key": "emerriman",
						"displayName": "Eric Merriman ",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hello, closing based on engineering comment. Please reopen if you feel it is required.",
					"updateAuthor": {
						"name": "emerriman",
						"key": "emerriman",
						"displayName": "Eric Merriman ",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-03-22T21:37:51.000+0000",
					"updated": "2019-03-22T21:37:51.000+0000"
				},
				{
					"id": "447167",
					"author": {
						"name": "ahutton",
						"key": "ahutton",
						"displayName": "Alan Hutton",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hello, closing based on engineering comment. Please reopen if you feel it is required.",
					"updateAuthor": {
						"name": "ahutton",
						"key": "ahutton",
						"displayName": "Alan Hutton",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-03-26T18:13:33.000+0000",
					"updated": "2019-03-26T18:13:33.000+0000"
				}
			],
			"maxResults": 7,
			"total": 7,
			"startAt": 0
		}
	}
}