{
	"id": "173723",
	"key": "TIMOB-27133",
	"fields": {
		"issuetype": {
			"id": "2",
			"description": "A new feature of the product, which has yet to be developed.",
			"name": "New Feature",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [
			{
				"id": "20827",
				"name": "Release 8.2.0",
				"archived": false,
				"released": true,
				"releaseDate": "2019-09-19"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2019-09-02T12:56:45.000+0000",
		"created": "2019-06-05T15:32:13.000+0000",
		"epic": {
			"id": 173691,
			"key": "TIMOB-27114",
			"name": "Support iOS 13",
			"summary": "iOS: Support iOS 13 and Xcode 11",
			"color": {
				"key": "color_3"
			},
			"done": false
		},
		"priority": {
			"name": "High",
			"id": "2"
		},
		"labels": [],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "vijaysingh",
			"key": "vijaysingh",
			"displayName": "Vijay Singh",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2019-09-02T12:57:50.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10206",
				"name": "iOS",
				"description": "iOS Platform"
			}
		],
		"description": "SF symbols is a new iOS 13 feature that allows developers to use build-in icons (1500 icons!) in iOS apps.\r\n\r\nWe should allow users to use these icons. They're supposed to replace the system icons up-to iOS 12\r\n\r\nSource: https://developer.apple.com/design/human-interface-guidelines/sf-symbols/overview",
		"attachment": [],
		"flagged": false,
		"summary": "iOS 13: Add support for SF Symbols",
		"creator": {
			"name": "topener",
			"key": "topener",
			"displayName": "Rene Pot",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"subtasks": [],
		"reporter": {
			"name": "topener",
			"key": "topener",
			"displayName": "Rene Pot",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"environment": null,
		"closedSprints": [
			{
				"id": 1153,
				"state": "closed",
				"name": "2019 Sprint 15",
				"startDate": "2019-07-15T18:30:38.331Z",
				"endDate": "2019-07-28T18:30:00.000Z",
				"completeDate": "2019-07-29T15:34:51.860Z",
				"originBoardId": 114
			},
			{
				"id": 1157,
				"state": "closed",
				"name": "2019 Sprint 16",
				"startDate": "2019-07-29T15:35:47.313Z",
				"endDate": "2019-08-11T15:35:00.000Z",
				"completeDate": "2019-08-12T07:57:02.552Z",
				"originBoardId": 114
			},
			{
				"id": 1160,
				"state": "closed",
				"name": "2019 Sprint 17",
				"startDate": "2019-08-12T07:59:28.950Z",
				"endDate": "2019-08-25T07:59:00.000Z",
				"completeDate": "2019-08-26T15:35:29.980Z",
				"originBoardId": 114
			},
			{
				"id": 1161,
				"state": "closed",
				"name": "2019 Sprint 18",
				"startDate": "2019-08-26T21:46:26.269Z",
				"endDate": "2019-09-08T21:46:00.000Z",
				"completeDate": "2019-09-09T20:39:58.761Z",
				"originBoardId": 114
			}
		],
		"comment": {
			"comments": [
				{
					"id": "449664",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Hey Guys,\r\n I am planning to expose SF symbols  via a new API Ti.UI.iOS.systemImage in Titanium. This will be iOS specific.\r\n\r\nTestCase - \r\n\r\n{code:java}\r\nvar win = Ti.UI.createWindow({\r\n    backgroundColor: '#fff'\r\n});\r\nvar triangle = Ti.UI.iOS.systemImage('drop.triangle.fill');\r\nvar forward = Ti.UI.iOS.systemImage('forward');\r\nvar backward = Ti.UI.iOS.systemImage('backward');\r\nvar folder = Ti.UI.iOS.systemImage('folder.fill');\r\n\r\n\r\nvar imageView = Ti.UI.createImageView({\r\n    width: '150',\r\n    height: '150',\r\n    image: triangle,\r\n    tintColor: 'red'\r\n});\r\n\r\n\r\nvar button = Ti.UI.createButton({\r\n    top: 60,\r\n    width: 100,\r\n    height: 50,\r\n    //backgroundImage: folder\r\n    image: folder\r\n})\r\n\r\nvar stepper = Ti.UI.iOS.createStepper({\r\n    top: 150,\r\n    incrementImage: forward,\r\n    decrementImage: backward\r\n});\r\n\r\n\r\nwin.add(button);\r\nwin.add(stepper);\r\nwin.add(imageView);\r\nwin.open();\r\n{code}\r\n\r\nAny suggestion ?\r\n\r\nThanks!",
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-07-09T00:48:52.000+0000",
					"updated": "2019-07-13T00:05:03.000+0000"
				},
				{
					"id": "449665",
					"author": {
						"name": "amwinsauto",
						"key": "amwinsauto",
						"displayName": "Adam Armstrong",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "Will we be able to use in Alloy - XML Views directly?\r\n\r\nIf so, can you provide a sample code snippet of how that might look/work?",
					"updateAuthor": {
						"name": "amwinsauto",
						"key": "amwinsauto",
						"displayName": "Adam Armstrong",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2019-07-09T00:51:49.000+0000",
					"updated": "2019-07-09T00:51:49.000+0000"
				},
				{
					"id": "449690",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "[~amwinsauto] It can be used in Alloy-XML views directly in following way - \r\n\r\nIn alloy.js create -\r\n{code:java}\r\nAlloy.Globals.buttonImage = Ti.UI.iOS.systemImage('forward');\r\n{code}\r\n and use it inside view-\r\n\r\n{code:java}\r\n<Alloy>\r\n    <Window class=\"container\">\r\n        <Button id=\"webComponent\" image= Alloy.Globals.buttonImage/>\r\n    </Window>\r\n</Alloy>\r\n{code}\r\nIs this something you are asking for?\r\n\r\nMain purpose of this API is to provide ability to access System provided 1500 build-in icons in iOS 13+ to developers.",
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-07-09T21:40:52.000+0000",
					"updated": "2019-07-13T00:20:13.000+0000"
				},
				{
					"id": "449692",
					"author": {
						"name": "amwinsauto",
						"key": "amwinsauto",
						"displayName": "Adam Armstrong",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "I *guess* that would work.  But, in my opinion, it feels like a bandaid or hack.  Why not implement it in a manner similar to that of Titanium.UI.iOS.SystemButton?\r\nhttps://docs.appcelerator.com/platform/latest/#!/api/Titanium.UI.iOS.SystemButton \r\n\r\nWith Titanium.UI.iOS.SystemButton, you can do something like:\r\n<Button systemButton=\"CAMERA\"/>\r\n\r\nAnd there are dozens of icons to chose from (see that doc link above).\r\n\r\nWhy not use a similar property and extend to both Labels and Buttons?\r\n\r\n\r\n",
					"updateAuthor": {
						"name": "amwinsauto",
						"key": "amwinsauto",
						"displayName": "Adam Armstrong",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2019-07-09T21:49:26.000+0000",
					"updated": "2019-07-09T21:49:26.000+0000"
				},
				{
					"id": "449787",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "https://github.com/appcelerator/titanium_mobile/pull/11050",
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-07-12T23:38:20.000+0000",
					"updated": "2019-07-12T23:38:20.000+0000"
				},
				{
					"id": "449788",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "[~amwinsauto] \r\n\r\nThe use of SF images are not limited to Labels or Button. It can be used in Ti.UI.ImageView, Ti.UI.iOS.Stepper, Ti.UI.Button, ListView etc. I am not sure if parallel to 'setImage' we should add another api which is neither cross platform nor work for < iOS 12.\r\n [~jquick] what you think?\r\n\r\nI have moved the API under Ti.UI.iOS name space as this is iOS only.",
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-07-13T00:04:18.000+0000",
					"updated": "2019-07-13T00:06:46.000+0000"
				},
				{
					"id": "449790",
					"author": {
						"name": "jquick",
						"key": "jquick",
						"displayName": "Joshua Quick",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I think having an iOS only getter method to fetch the system image (wrapped in a {{Ti.Blob}}) is good to have in general. I don't think anyone here will question that. The question is what can we do to make this Alloy friendly.\r\n\r\nI like Vijay's Alloy solution where you can set the image in the view XML via a variable. Since this is an iOS 13 only feature, you'll need a solution for older iOS versions and Android. With his solution, you can easily assign a different image to that variable, making the view XML completely portable. Alternatively, the image variable can be assigned via an Alloy tss file as well.\r\n",
					"updateAuthor": {
						"name": "jquick",
						"key": "jquick",
						"displayName": "Joshua Quick",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-07-13T00:39:25.000+0000",
					"updated": "2019-07-13T00:39:25.000+0000"
				},
				{
					"id": "449800",
					"author": {
						"name": "topener",
						"key": "topener",
						"displayName": "Rene Pot",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "I guess a solution could be to add a PR to alloy to be able to set the new SF symbol directly in Alloy. Perhaps in the same way the {{L()}} method is supported in tss and xml. [~eharris] any thoughts?",
					"updateAuthor": {
						"name": "topener",
						"key": "topener",
						"displayName": "Rene Pot",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2019-07-15T10:52:42.000+0000",
					"updated": "2019-07-15T10:52:42.000+0000"
				},
				{
					"id": "449811",
					"author": {
						"name": "jquick",
						"key": "jquick",
						"displayName": "Joshua Quick",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "[~topener], remember that this is an iOS 13 only feature. So, what should and Alloy function like this do on other platforms and older iOS versions? Return null?\r\n\r\nThe advantage of the way Vijay is doing it is the app developer can implement a fallback-image if needed.",
					"updateAuthor": {
						"name": "jquick",
						"key": "jquick",
						"displayName": "Joshua Quick",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-07-15T17:33:07.000+0000",
					"updated": "2019-07-15T17:33:07.000+0000"
				},
				{
					"id": "449832",
					"author": {
						"name": "topener",
						"key": "topener",
						"displayName": "Rene Pot",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "As with every feature we have that only works on specific versions or platforms, the user will have to use platform/if filters. \r\n\r\n{code}\r\n\"#myImage[if=Alloy.Globals.isios13]\"\r\n{code}\r\n\r\nIt probably should throw a warning & return null for anything pre iOS 13, but obviously fail completely on android. ",
					"updateAuthor": {
						"name": "topener",
						"key": "topener",
						"displayName": "Rene Pot",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2019-07-16T09:19:30.000+0000",
					"updated": "2019-07-16T09:20:47.000+0000"
				},
				{
					"id": "450242",
					"author": {
						"name": "eharris",
						"key": "eharris",
						"displayName": "Ewan Harris",
						"active": true,
						"timeZone": "Europe/Dublin"
					},
					"body": "I think I do agree with Rene here. I was thinking about whether Alloy could make the semantic color usage introduced in TIMOB-27126 easier too. With SFSymbols and that, it seems like a lot of peoples application startup will include tacking on their required SFSymbols/colors onto Alloy.Globals/Alloy.Styles.\r\n\r\nI think something like L could work quite well, we could maybe expose {{systemImage}} and {{fetchSemanticColor}} to be used in tss/xml. But I don't want to do that bikeshedding in here, I'll open an ALOY ticket for each of those next week.",
					"updateAuthor": {
						"name": "eharris",
						"key": "eharris",
						"displayName": "Ewan Harris",
						"active": true,
						"timeZone": "Europe/Dublin"
					},
					"created": "2019-08-02T18:49:02.000+0000",
					"updated": "2019-08-02T18:49:02.000+0000"
				},
				{
					"id": "450606",
					"author": {
						"name": "smohammed",
						"key": "smohammed",
						"displayName": "Samir Mohammed",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "FR Passed for Master (8_2_X). [~vijaysingh] Could you add a PR for 8_3_X?",
					"updateAuthor": {
						"name": "smohammed",
						"key": "smohammed",
						"displayName": "Samir Mohammed",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-08-20T13:49:46.000+0000",
					"updated": "2019-08-20T13:49:46.000+0000"
				},
				{
					"id": "450711",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Without proper constants or Alloy support, this is useless for larger scaled apps since we cannot define 70+ icons in an alloy.js …",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2019-08-22T08:28:04.000+0000",
					"updated": "2019-08-22T08:28:04.000+0000"
				},
				{
					"id": "450966",
					"author": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "merged to master (8.2.0)",
					"updateAuthor": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2019-08-29T19:54:35.000+0000",
					"updated": "2019-08-29T19:54:35.000+0000"
				},
				{
					"id": "451019",
					"author": {
						"name": "smohammed",
						"key": "smohammed",
						"displayName": "Samir Mohammed",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "[~vijaysingh] Using SDK version {{8.2.0.v20190829124255}}. I get the following error with test case you mentioned above:\r\n\r\n{code:java}\r\n[ERROR] \b\b \bScript Error {\r\n[ERROR] \b\b \b column = 37;\r\n[ERROR] \b\b \b line = 5;\r\n[ERROR] \b\b \b message = \"Ti.UI.iOS.systemImage is not a function. (In 'Ti.UI.iOS.systemImage('drop.triangle.fill')', 'Ti.UI.iOS.systemImage' is undefined)\";\r\n[ERROR] \b\b \b sourceURL = \"file:///Users/Samir/Library/Developer/CoreSimulator/Devices/8B89634B-0E8B-4286-8839-7CEE6A035700/data/Containers/Bundle/Application/A7182763-051C-4CCD-B9E4-881337E281B7/anewp.app/app.js\";\r\n[ERROR] \b\b \b stack = \" at (/app.js:5:37)\\n at global code(/app.js:40:70)\\n at require@[native code]\\n at (/ti.main.js:11614:10)\\n at loadAsync(/ti.main.js:11540:13)\\n at global code(/ti.main.js:11611:10)\";\r\n[ERROR] \b\b \b toJSON = \"<KrollCallback: 0x6000002c8280>\";\r\n[ERROR] \b\b \b}\r\n[WARN] \b\b \b Cannot serialize object, trying to repair ...\r\n[WARN] \b\b \b Found invalid attribute \"toJSON\" that cannot be serialized, skipping it ...\r\n[ERROR] \b\b \bScript Error {\r\n[ERROR] \b\b \b column = 10;\r\n[ERROR] \b\b \b line = 11614;\r\n[ERROR] \b\b \b message = \"Module \\\"app.js\\\" failed to leave a valid exports object\";\r\n[ERROR] \b\b \b sourceURL = \"file:///Users/Samir/Library/Developer/CoreSimulator/Devices/8B89634B-0E8B-4286-8839-7CEE6A035700/data/Containers/Bundle/Application/A7182763-051C-4CCD-B9E4-881337E281B7/anewp.app/ti.main.js\";\r\n[ERROR] \b\b \b stack = \" at require@[native code]\\n at (/ti.main.js:11614:10)\\n at loadAsync(/ti.main.js:11540:13)\\n at global code(/ti.main.js:11611:10)\";\r\n[ERROR] \b\b \b toJSON = \"<KrollCallback: 0x6000002c24c0>\";\r\n[ERROR] \b\b \b}\r\n{code}\r\n\r\n\r\n",
					"updateAuthor": {
						"name": "smohammed",
						"key": "smohammed",
						"displayName": "Samir Mohammed",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-09-02T10:03:51.000+0000",
					"updated": "2019-09-02T10:04:14.000+0000"
				},
				{
					"id": "451023",
					"author": {
						"name": "smohammed",
						"key": "smohammed",
						"displayName": "Samir Mohammed",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"updateAuthor": {
						"name": "smohammed",
						"key": "smohammed",
						"displayName": "Samir Mohammed",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-09-02T12:56:59.000+0000",
					"updated": "2019-09-02T12:56:59.000+0000"
				},
				{
					"id": "451024",
					"author": {
						"name": "smohammed",
						"key": "smohammed",
						"displayName": "Samir Mohammed",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "^ SDK Version: {{8.2.0.v20190902041145}}",
					"updateAuthor": {
						"name": "smohammed",
						"key": "smohammed",
						"displayName": "Samir Mohammed",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-09-02T12:57:50.000+0000",
					"updated": "2019-09-02T12:57:50.000+0000"
				}
			],
			"maxResults": 18,
			"total": 18,
			"startAt": 0
		}
	}
}