{
	"id": "174085",
	"key": "TIMOB-27375",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": null,
		"resolutiondate": null,
		"created": "2019-08-31T05:41:32.000+0000",
		"priority": null,
		"labels": [
			"android",
			"engSchedule"
		],
		"versions": [
			{
				"id": "20432",
				"name": "Release 8.0.1",
				"archived": false,
				"released": true,
				"releaseDate": "2019-05-15"
			}
		],
		"issuelinks": [],
		"assignee": {
			"name": "ybanev",
			"key": "ybanev",
			"displayName": "Yordan Banev",
			"active": true,
			"timeZone": "Europe/Athens"
		},
		"updated": "2019-09-17T12:16:35.000+0000",
		"status": {
			"description": "The issue is open and ready for the assignee to start work on it.",
			"name": "Open",
			"id": "1",
			"statusCategory": {
				"id": 2,
				"key": "new",
				"colorName": "blue-gray",
				"name": "To Do"
			}
		},
		"components": [
			{
				"id": "10202",
				"name": "Android",
				"description": "Android Platform"
			}
		],
		"description": "For historical reasons, we had incorporated receiving the 'start' event from the launch activity into how our app unfolds.\r\n\r\nLet's look at a startup log for an app that just creates and opens a window.\r\n\r\napp.js:\r\n\r\n{code:javascript}\r\nif (Ti.Platform.osname === 'android') {\r\n    var launcher = Ti.Android.currentActivity;\r\n    launcher.addEventListener('create', function(e) {\r\n        Ti.API.info('+++ LAUNCHER onCreate');;\r\n    });\r\n    launcher.addEventListener('destroy', function(e) {\r\n        Ti.API.info('+++ LAUNCHER onDestroy');\r\n    });\r\n    launcher.addEventListener('pause', function(e) {\r\n        Ti.API.info('+++ LAUNCHER onPause');\r\n    });\r\n    launcher.addEventListener('resume', function(e) {\r\n        Ti.API.info('+++ LAUNCHER onResume');\r\n    });\r\n    launcher.addEventListener('start', function(e) {\r\n            Ti.API.info('+++ LAUNCHER onStart: ');\r\n\r\n    });\r\n    launcher.addEventListener('stop', function(e) {\r\n        Ti.API.info('+++ LAUNCHER onStop');\r\n    });\r\n\r\n    launcher.addEventListener('newintent', function(e) {\r\n        Ti.API.info('+++ LAUNCHER onNewIntent: ' + JSON.stringify(e));\r\n    });\r\n}\r\n\r\nvar window = Ti.UI.createWindow({\r\n    backgroundColor: 'white',\r\n    layout: 'vertical'\r\n});\r\n\r\nwindow.open();\r\n{code}\r\n\r\n The log looks like this for SDK 8.0.0.GA:\r\n\r\n-- Start application log -----------------------------------------------------\r\n[INFO] :   Project built successfully in 57s 612ms\r\n[ERROR] :  Zygote: v2\r\n[INFO] :   SELinux: SELinux: seapp_context_lookup: seinfo=untrusted, level=s0:c512,c768, pkgname=com.phondini.test\r\n[INFO] :   TiApplication: (main) [0,0] checkpoint, app created.\r\n[INFO] :   MultiDex: VM with version 2.1.0 has multidex support\r\n[INFO] :   MultiDex: Installing application\r\n[INFO] :   MultiDex: VM has multidex support, MultiDex support library is disabled.\r\n[ERROR] :  Zygote: accessInfo : 0\r\n[WARN] :   SELinux: SELinux selinux_android_compute_policy_index : Policy Index[2],  Con:u:r:zygote:s0 RAM:SEPF_SECMOBILE_7.0_0010, [-1 -1 -4 -1 0 1]\r\n[INFO] :   TiApplication: (main) [110,110] Analytics have been disabled\r\n[INFO] :   TiApplication: (main) [1761,1871] Titanium Javascript runtime: v8\r\n[INFO] :   TiRootActivity: (main) [0,0] checkpoint, on root activity create, savedInstanceState: null\r\n[WARN] :   art: Before Android 4.1, method android.graphics.PorterDuffColorFilter android.support.graphics.drawable.VectorDrawableCompat.updateTintFilter(android.graphics.PorterDuffColorFilter, android.content.res.ColorStateList, android.graphics.PorterDuff$Mode) would have incorrectly overridden the package-private method in android.graphics.drawable.Drawable\r\n[INFO] :   test 1.0 (Powered by Titanium 8.0.0.3726240fa2)\r\n[INFO] :   TiRootActivity: (main) [0,0] checkpoint, on root activity resume. activity = com.phondini.test.TestActivity@db057c6\r\n[INFO] :   InputMethodManager: HSI ignore mServedView == null or mServedView.getWindowToken() != windowToken, mServedView :0\r\n{color:blue}[INFO] :   +++ LAUNCHER onCreate\r\n[INFO] :   +++ LAUNCHER onStart:{color}\r\n{color:red}[INFO] :   +++ LAUNCHER onResume{color}\r\n[ERROR] :  E/ViewRootImpl@819222d[TestActivity]: ViewRootImpl #2 Surface is not valid.\r\n[INFO] :   +++ LAUNCHER onPause\r\n[INFO] :   OpenGLRenderer: Initialized EGL, version 1.4\r\n[INFO] :   InputMethodManager: [IMM] startInputInner - mService.startInputOrWindowGainedFocus\r\n[INFO] :   +++ LAUNCHER onStop\r\n[INFO] :   TiVerify: (Timer-0) [4995,4995] Verifying module licenses...\r\n[INFO] :   I/System.out: (HTTPLog)-Static: isSBSettingEnabled false\r\n[INFO] :   I/System.out: (HTTPLog)-Static: isSBSettingEnabled false\r\n[INFO] :   TiVerify: (Timer-0) [372,5367] Successfully verified module licenses\r\n\r\nbut with the SDK 8.0.1.GA, the log looks like this:\r\n\r\n-- Start application log -----------------------------------------------------\r\n[INFO] :   Project built successfully in 56s 798ms\r\n[ERROR] :  Zygote: v2\r\n[INFO] :   SELinux: SELinux: seapp_context_lookup: seinfo=untrusted, level=s0:c512,c768, pkgname=com.phondini.test\r\n[INFO] :   TiApplication: (main) [0,0] checkpoint, app created.\r\n[INFO] :   art: Background partial concurrent mark sweep GC freed 49185(3MB) AllocSpace objects, 14(1184KB) LOS objects, 39% free, 11MB/19MB, paused 7.077ms total 77.640ms\r\n[INFO] :   MultiDex: VM with version 2.1.0 has multidex support\r\n[INFO] :   MultiDex: Installing application\r\n[ERROR] :  Zygote: accessInfo : 0\r\n[WARN] :   SELinux: SELinux selinux_android_compute_policy_index : Policy Index[2],  Con:u:r:zygote:s0 RAM:SEPF_SECMOBILE_7.0_0010, [-1 -1 -4 -1 0 1]\r\n[INFO] :   MultiDex: VM has multidex support, MultiDex support library is disabled.\r\n[INFO] :   TiApplication: (main) [213,213] Analytics have been disabled\r\n[INFO] :   TiApplication: (main) [2051,2264] Titanium Javascript runtime: v8\r\n[INFO] :   TiRootActivity: (main) [0,0] checkpoint, on root activity create, savedInstanceState: null\r\n[WARN] :   art: Before Android 4.1, method android.graphics.PorterDuffColorFilter android.support.graphics.drawable.VectorDrawableCompat.updateTintFilter(android.graphics.PorterDuffColorFilter, android.content.res.ColorStateList, android.graphics.PorterDuff$Mode) would have incorrectly overridden the package-private method in android.graphics.drawable.Drawable\r\n[INFO] :   TiRootActivity: (main) [0,0] checkpoint, on root activity resume. activity = com.phondini.test.TestActivity@db057c6\r\n[INFO] :   test 1.0 (Powered by Titanium 8.0.1.c4f6f25c7d)\r\n[INFO] :   InputMethodManager: HSI ignore mServedView == null or mServedView.getWindowToken() != windowToken, mServedView :0\r\n{color:red}[INFO] :   +++ LAUNCHER onResume{color}\r\n[INFO] :   +++ LAUNCHER onPause\r\n[INFO] :   +++ LAUNCHER onStop\r\n[INFO] :   OpenGLRenderer: Initialized EGL, version 1.4\r\n[INFO] :   InputMethodManager: [IMM] startInputInner - mService.startInputOrWindowGainedFocus\r\n\r\nThese events are missing starting with the 8.0.1.GA SDK.\r\n\r\n[INFO] :   +++ LAUNCHER onCreate\r\n[INFO] :   +++ LAUNCHER onStart:\r\n\r\nI don't know whether this was intentional or not, but it did take us a while to figure out what was going on in our code when our app behaved differently starting with 8.0.1.\r\n\r\nAnyway, not sure whether this is a bug or a documentation issue but felt it was important to point out that this is a change in behavior.",
		"attachment": [],
		"flagged": false,
		"summary": "Android: launch activity no longer throws create & start lifecycle events as of 8.0.1",
		"creator": {
			"name": "jfalcone",
			"key": "jfalcone",
			"displayName": "Joe Falcone",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "jfalcone",
			"key": "jfalcone",
			"displayName": "Joe Falcone",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": "Operating System\r\n  Name                        = Mac OS X\r\n  Version                     = 10.14.6\r\n  Architecture                = 64bit\r\n  # CPUs                      = 8\r\n  Memory                      = 68719476736\r\nNode.js\r\n  Node.js Version             = 8.4.0\r\n  npm Version                 = 6.0.1\r\nTitanium CLI\r\n  CLI Version                 = 5.2.1\r\nTitanium SDK\r\n  SDK Version                 = 8.0.0.GA and 8.0.1.GA\r\n  Target Platform             = android",
		"comment": {
			"comments": [
				{
					"id": "451057",
					"author": {
						"name": "jquick",
						"key": "jquick",
						"displayName": "Joshua Quick",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"updateAuthor": {
						"name": "jquick",
						"key": "jquick",
						"displayName": "Joshua Quick",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-09-03T18:15:41.000+0000",
					"updated": "2019-09-03T18:15:41.000+0000"
				},
				{
					"id": "451060",
					"author": {
						"name": "jfalcone",
						"key": "jfalcone",
						"displayName": "Joe Falcone",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "1. If you are going to change a significant behavior that has been around for many years, it is a good idea to document it at least in the release notes.  Assuming that no one is depending on it or using it for whatever reason is pretty dangerous.  It cost me hours of debugging to realize what was really going on when our app was stuck on the splash screen.  I don't work for some mega-corporation so this is time out of my own pocket.\r\n\r\n2.  We waited for 'start' for historical reasons (going back years - we've been using Titanium since 2012).  Years ago, there were issues with spinning up certain modules before the app was really well and truly running so we found that waiting for 'start' was a safe way of doing this.\r\n\r\n3. Again for historical reasons, our app startup using lifecycle events was completely separate for iOS and Android.  So this is good that we can fold them together.\r\n",
					"updateAuthor": {
						"name": "jfalcone",
						"key": "jfalcone",
						"displayName": "Joe Falcone",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-09-03T18:59:13.000+0000",
					"updated": "2019-09-03T18:59:13.000+0000"
				},
				{
					"id": "451064",
					"author": {
						"name": "jquick",
						"key": "jquick",
						"displayName": "Joshua Quick",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I hear you.\r\n\r\nIn Titanium 8.0.x, we've refactored the app startup/resume/exit behavior to resolve some design issues we've had and to improve intent/resume handling. The most noteworthy changes are the below.\r\n* [TIMOB-26075]\r\n* [TIMOB-26538]\r\n* [TIMOB-26555]\r\n* [TIMOB-26850]\r\n",
					"updateAuthor": {
						"name": "jquick",
						"key": "jquick",
						"displayName": "Joshua Quick",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2019-09-03T20:45:38.000+0000",
					"updated": "2019-09-03T20:45:38.000+0000"
				}
			],
			"maxResults": 3,
			"total": 3,
			"startAt": 0
		}
	}
}