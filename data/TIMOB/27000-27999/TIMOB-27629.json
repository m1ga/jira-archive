{
	"id": "174486",
	"key": "TIMOB-27629",
	"fields": {
		"issuetype": {
			"id": "4",
			"description": "An improvement or enhancement to an existing feature or task.",
			"name": "Improvement",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": null,
		"resolutiondate": null,
		"created": "2019-11-26T14:30:38.000+0000",
		"priority": {
			"name": "None",
			"id": "6"
		},
		"labels": [],
		"versions": [
			{
				"id": "20033",
				"name": "Release 9.0.0",
				"archived": false,
				"released": true,
				"releaseDate": "2020-03-18"
			}
		],
		"issuelinks": [],
		"assignee": {
			"name": "jvennemann",
			"key": "jvennemann",
			"displayName": "Jan Vennemann",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"updated": "2019-11-26T14:36:17.000+0000",
		"status": {
			"description": "The issue is open and ready for the assignee to start work on it.",
			"name": "Open",
			"id": "1",
			"statusCategory": {
				"id": 2,
				"key": "new",
				"colorName": "blue-gray",
				"name": "To Do"
			}
		},
		"components": [
			{
				"id": "10207",
				"name": "Tooling"
			}
		],
		"description": "Currently we pre-bundle our common JS sources with Rollup and transpile them with Babel to the minimum supported platform JS runtime. This also includes all polyfills required for that runtime. However, on iOS the user can increase the minimum deployment target for their app. This results in unnecessary polyfills being included in our commons JS bundle.\r\n\r\nWith Webpack it will would be possible to transpile our common JS sources for each app project individually, respecting the minimum iOS deployment target configured by users in their {{tiapp.xml}}. Our common JS sources and the user's code would then only include the polyfills actually required for the target JS runtime.",
		"attachment": [],
		"flagged": false,
		"summary": "Webpack: Add common JS sources as entry point",
		"creator": {
			"name": "jvennemann",
			"key": "jvennemann",
			"displayName": "Jan Vennemann",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"subtasks": [],
		"reporter": {
			"name": "jvennemann",
			"key": "jvennemann",
			"displayName": "Jan Vennemann",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "452916",
					"author": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "[~gmathews], here is the ticket related to our recent conversation about Android snapshots. While writing this ticket i realized that your snapshotting work on Android might not be an issue at all.\r\n\r\nPlease correct me if i'm wrong, but on Android we are locked on a specific V8 runtime anyway. Only on iOS it possible to change the JS runtime (JavaScriptCore) because it is shipped with iOS. Is this correct? This would mean there is only a use case for iOS app to dynamically include polyfills based on the minimum deployment target of the app.",
					"updateAuthor": {
						"name": "jvennemann",
						"key": "jvennemann",
						"displayName": "Jan Vennemann",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2019-11-26T14:35:10.000+0000",
					"updated": "2019-11-26T14:35:10.000+0000"
				}
			],
			"maxResults": 1,
			"total": 1,
			"startAt": 0
		}
	}
}