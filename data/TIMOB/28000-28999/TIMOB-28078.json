{
	"id": "175430",
	"key": "TIMOB-28078",
	"fields": {
		"issuetype": {
			"id": "2",
			"description": "A new feature of the product, which has yet to be developed.",
			"name": "New Feature",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [
			{
				"id": "21051",
				"description": "",
				"name": "Release 9.2.0",
				"archived": false,
				"released": true,
				"releaseDate": "2020-09-23"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2020-09-11T19:54:03.000+0000",
		"created": "2020-08-11T19:53:47.000+0000",
		"epic": {
			"id": 175154,
			"key": "TIMOB-27964",
			"name": "Support iOS 14",
			"summary": "iOS: Support iOS 14 and Xcode 12",
			"color": {
				"key": "color_1"
			},
			"done": false
		},
		"priority": {
			"name": "High",
			"id": "2"
		},
		"labels": [
			"httpclient",
			"ios"
		],
		"versions": [],
		"issuelinks": [
			{
				"id": "58641",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"outwardIssue": {
					"id": "175452",
					"key": "TIMOB-28091",
					"fields": {
						"summary": "LiveView: App running on iOS 14 device with live view enabled is failing",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Critical",
							"id": "1"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "58625",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"inwardIssue": {
					"id": "175429",
					"key": "TIMOB-28077",
					"fields": {
						"summary": "iOS14: Expose new error type in Bonjure Service and update doc to align with Local n/w privacy restrictions ",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "High",
							"id": "2"
						},
						"issuetype": {
							"id": "4",
							"description": "An improvement or enhancement to an existing feature or task.",
							"name": "Improvement",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": {
			"name": "vijaysingh",
			"key": "vijaysingh",
			"displayName": "Vijay Singh",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2020-09-11T19:54:03.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10206",
				"name": "iOS",
				"description": "iOS Platform"
			}
		],
		"description": "In iOS 14, Due to local network access prompt it may be that request get failed while waiting for user's permission. See more detail in WWDC video https://developer.apple.com/videos/play/wwdc2020/10110/.\r\n In titanium, we need to provide APIs corresponding to [waitsForConnectivity|https://developer.apple.com/documentation/foundation/urlsessionconfiguration/2908812-waitsforconnectivity]   and [timeoutIntervalForResource |https://developer.apple.com/documentation/foundation/urlsessionconfiguration/1408153-timeoutintervalforresource]",
		"attachment": [],
		"flagged": false,
		"summary": "iOS14: Expose new APIs Titanium.Network.HTTPClient which will require while accessing local http server",
		"creator": {
			"name": "vijaysingh",
			"key": "vijaysingh",
			"displayName": "Vijay Singh",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "vijaysingh",
			"key": "vijaysingh",
			"displayName": "Vijay Singh",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"closedSprints": [
			{
				"id": 1204,
				"state": "closed",
				"name": "2020 Sprint 17",
				"startDate": "2020-08-17T15:48:00.000Z",
				"endDate": "2020-08-28T15:48:00.000Z",
				"completeDate": "2020-08-31T15:36:28.040Z",
				"originBoardId": 114
			}
		],
		"comment": {
			"comments": [
				{
					"id": "456420",
					"author": {
						"name": "jquick",
						"key": "jquick",
						"displayName": "Joshua Quick",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "[~vijaysingh], this ticket states iOS14 will prompt the end-user when you attempt to connect to an end-point on the LAN. Does this also include \"localhost\"? _(I would assume so.)_\r\n\r\nThe below test code uses {{HTTPClient}} to send a request to a local TCP socket. We should test this on on iOS14 to see what the behavior is.\r\n{code:javascript}\r\nvar listenSocket = Ti.Network.Socket.createTCP({\r\n\thost: \"localhost\",\r\n\tport: 40404,\r\n\taccepted: function(e) {\r\n\t\tTi.API.info(\"@@@ accepted() host: \" + e.inbound.host);\r\n\t\tTi.Stream.pump(e.inbound, function(e) {\r\n\t\t\tvar httpRequestMessage = \"\";\r\n\t\t\tif (e.buffer) {\r\n\t\t\t\thttpRequestMessage = e.buffer.toString();\r\n\t\t\t}\r\n\t\t\tTi.API.info(\"@@@ Received HTTP Request:\\n\" + httpRequestMessage);\r\n\t\t\tlistenSocket.accept({ timeout: 30000 });\r\n\t\t}, 1024, true);\r\n\t},\r\n\terror: function(e) {\r\n\t\tTi.API.info(\"@@@ Socket Listener Error: \" + e.error);\r\n\t},\r\n});\r\nlistenSocket.listen();\r\nlistenSocket.accept({ timeout: 30000 });\r\n\r\nvar window = Titanium.UI.createWindow();\r\nvar buttonView = Ti.UI.createButton({ title: \"Send HTTP Request\" });\r\nbuttonView.addEventListener(\"click\", function(e) {\r\n\tvar url = \"http://localhost:40404?test=hello+world\";\r\n\tTi.API.info(\"@@@ Sending HTTP request for url:\\n\" + url);\r\n\tvar httpClient = Ti.Network.createHTTPClient();\r\n\thttpClient.open(\"POST\", url);\r\n\thttpClient.send(\"This is the HTTP content.\");\r\n});\r\nwindow.add(buttonView);\r\nwindow.open();\r\n{code}\r\n",
					"updateAuthor": {
						"name": "jquick",
						"key": "jquick",
						"displayName": "Joshua Quick",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2020-08-11T21:49:32.000+0000",
					"updated": "2020-08-11T21:51:22.000+0000"
				},
				{
					"id": "456421",
					"author": {
						"name": "jquick",
						"key": "jquick",
						"displayName": "Joshua Quick",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "We should also double-check LiveView on iOS14 since it operates over the LAN.\r\n[~eharris], this is a heads-up. You \"might\" get sucked into this.",
					"updateAuthor": {
						"name": "jquick",
						"key": "jquick",
						"displayName": "Joshua Quick",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2020-08-11T21:54:52.000+0000",
					"updated": "2020-08-11T21:54:52.000+0000"
				},
				{
					"id": "456424",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "[~jquick] Thanks for test case.\r\nIt is not showing prompt if host is \"localhost\". \r\nIf we set the host to the address of the wifi interface (Ti.Platform.address), it shows the prompt.\r\n\r\nUpdated Test Case -\r\n\r\n{code:java}\r\nvar hostname = Ti.Platform.address;\r\n\r\nvar listenSocket = Ti.Network.Socket.createTCP({\r\n\thost: hostname,\r\n\tport: 40404,\r\n\taccepted: function(e) {\r\n\t\tTi.API.info(\"@@@ accepted() host: \" + e.inbound.host);\r\n\t\tTi.Stream.pump(e.inbound, function(e) {\r\n\t\t\tvar httpRequestMessage = \"\";\r\n\t\t\tif (e.buffer) {\r\n\t\t\t\thttpRequestMessage = e.buffer.toString();\r\n\t\t\t}\r\n\t\t\tTi.API.info(\"@@@ Received HTTP Request:\\n\" + httpRequestMessage);\r\n\t\t\tlistenSocket.accept({ timeout: 30000 });\r\n\t\t}, 1024, true);\r\n\t},\r\n\terror: function(e) {\r\n\t\tTi.API.info(\"@@@ Socket Listener Error: \" + e.error);\r\n\t},\r\n});\r\nlistenSocket.listen();\r\nlistenSocket.accept({ timeout: 30000 });\r\n \r\nvar window = Titanium.UI.createWindow();\r\nvar buttonView = Ti.UI.createButton({ title: \"Send HTTP Request\" });\r\nbuttonView.addEventListener(\"click\", function(e) {\r\n\tvar url = \"http://\" + hostname + \":40404?test=hello+world\";\r\n\tTi.API.info(\"@@@ Sending HTTP request for url:\\n\" + url);\r\n\tvar httpClient = Ti.Network.createHTTPClient();\r\n\thttpClient.open(\"POST\", url);\r\n\thttpClient.send(\"This is the HTTP content.\");\r\n});\r\nwindow.add(buttonView);\r\nwindow.open();\r\n{code}\r\n",
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2020-08-11T22:48:38.000+0000",
					"updated": "2020-08-11T22:48:38.000+0000"
				},
				{
					"id": "456447",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "PR(APSHttpClient)- https://github.com/appcelerator/APSHTTPClient/pull/53\r\nPR (SDK) - https://github.com/appcelerator/titanium_mobile/pull/11897\r\n",
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2020-08-12T23:25:24.000+0000",
					"updated": "2020-08-12T23:25:24.000+0000"
				},
				{
					"id": "456448",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Test Case 1.\r\n1. Run app on iOS 14 device.\r\n2. Go to iPhone settings and disconnect from wifi.\r\n3. Open app and click on 'Send HTTP request'. It should not show error.\r\n4. Again go to settings and connect wifi, it should show 'request successful'\r\n5. In test case uncomment line having \"timeoutForResource: 10000\".\r\n6. Run app again. \r\n7. Disconnect wifi.\r\n8. Click on 'Send HTTP Request',\r\n9. Wait for 10 seconds, it should show 'request failed'\r\n\r\n{code:java}\r\nvar window = Titanium.UI.createWindow();\r\nvar buttonView = Ti.UI.createButton({ title: \"Send HTTP Request\" });\r\nbuttonView.addEventListener(\"click\", function(e) {\r\n\tvar url = \"https://www.google.com\";\r\n\tvar httpClient = Ti.Network.createHTTPClient({\r\n\t\twaitsForConnectivity: true,\r\n\t//\ttimeoutForResource:  10000\r\n\t});\r\n\thttpClient.open(\"GET\", url);\r\n\thttpClient.send();\r\n\thttpClient.onload =  function() {\r\n\t\talert('request successful');\r\n\t}\r\n\r\n\thttpClient.onerror =  function(e) {\r\n\t\talert('request failed');\r\n               Ti.API.info(\"@@@ Error is: \");\r\n\t\tTi.API.error(JSON.stringify(e));\r\n\t}\r\n});\r\nwindow.add(buttonView);\r\nwindow.open();\r\n{code}\r\n",
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2020-08-12T23:50:16.000+0000",
					"updated": "2020-08-12T23:50:16.000+0000"
				},
				{
					"id": "456449",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Test Case 2:\r\n1. Create an app, add test case and run on iOS 14 device.\r\n2. Click on 'Send HTTP Request' .\r\n3. An alert should show with some default message. See the log. There should be no error message.\r\n4. Click on 'Ok'. See the log. There should be message having 'Received HTTP Request'.\r\n5. Delete the app from iPhone.\r\n6. Set the 'waitsForConnectivity' to false in code and run app again.\r\n7. Click on 'Send HTTP Request', alert should be shown.\r\n8. Without doing any action on alert see the log. It should show error message.\r\n9. Delete app from iPhone. Add key 'NSLocalNetworkUsageDescription' in tiapp.xml (see doc).\r\n10. Run again. On click of 'Send HTTP Request' alert should be shown with message given in value of key 'NSLocalNetworkUsageDescription'\r\n  \r\n{code:java}\r\nvar hostname = Ti.Platform.address;\r\n \r\nvar listenSocket = Ti.Network.Socket.createTCP({\r\n\thost: hostname,\r\n\tport: 40404,\r\n\taccepted: function(e) {\r\n\t\tTi.API.info(\"@@@ accepted() host: \" + e.inbound.host);\r\n\t\tTi.Stream.pump(e.inbound, function(e) {\r\n\t\t\tvar httpRequestMessage = \"\";\r\n\t\t\tif (e.buffer) {\r\n\t\t\t\thttpRequestMessage = e.buffer.toString();\r\n\t\t\t}\r\n\t\t\tTi.API.info(\"@@@ Received HTTP Request:\\n\" + httpRequestMessage);\r\n\t\t\tlistenSocket.accept({ timeout: 30000 });\r\n\t\t}, 1024, true);\r\n\t},\r\n\terror: function(e) {\r\n\t\tTi.API.info(\"@@@ Socket Listener Error: \" + e.error);\r\n\t},\r\n});\r\nlistenSocket.listen();\r\nlistenSocket.accept({ timeout: 30000 });\r\n \r\nvar window = Titanium.UI.createWindow();\r\nvar buttonView = Ti.UI.createButton({ title: \"Send HTTP Request\" });\r\nbuttonView.addEventListener(\"click\", function(e) {\r\n\tvar url = \"http://\" + hostname + \":40404?test=hello+world\";\r\n\tTi.API.info(\"@@@ Sending HTTP request for url:\\n\" + url);\r\n\tvar httpClient = Ti.Network.createHTTPClient({\r\n\t\twaitsForConnectivity: true,\r\n\t});\r\n\thttpClient.open(\"POST\", url);\r\n\thttpClient.send(\"This is the HTTP content.\");\r\n\thttpClient.onload =  function() {\r\n\t\talert('request successful');\r\n\t}\r\n\r\n\thttpClient.onerror =  function(e) {\r\n\t\tTi.API.info(\"@@@ Error is: \");\r\n\t\tTi.API.error(JSON.stringify(e));\r\n\t}\r\n});\r\nwindow.add(buttonView);\r\nwindow.open();\r\n{code}\r\n",
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2020-08-13T00:11:38.000+0000",
					"updated": "2020-08-13T00:12:02.000+0000"
				},
				{
					"id": "456502",
					"author": {
						"name": "eharris",
						"key": "eharris",
						"displayName": "Ewan Harris",
						"active": true,
						"timeZone": "Europe/Dublin"
					},
					"body": "[~jquick], thanks for the heads up, LiveView injects the development machines IP (so something like 192.168.x.y), I don't currently have an iOS 14 device and can't even do LiveView to device on my Axway MBP as something is blocking the port from being accessed. I watched the video and it seems like we'll have to update LiveView for this, have you been able to test it at all [~vijaysingh]? This totally could be a pain to handle I feel if we need to somehow inject a plist value to describe _why_ that prompt is occuring",
					"updateAuthor": {
						"name": "eharris",
						"key": "eharris",
						"displayName": "Ewan Harris",
						"active": true,
						"timeZone": "Europe/Dublin"
					},
					"created": "2020-08-18T14:06:06.000+0000",
					"updated": "2020-08-18T14:06:06.000+0000"
				},
				{
					"id": "456517",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "[~eharris] I didn't test it for LiveView. Let me try.\r\n\r\nTo note here -\r\nIf we do not add key in plist, it will show the prompt. But message will be generic.\r\nTo show more relevant message, it need to be added.",
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2020-08-19T17:29:55.000+0000",
					"updated": "2020-08-19T17:29:55.000+0000"
				},
				{
					"id": "456520",
					"author": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"updateAuthor": {
						"name": "vijaysingh",
						"key": "vijaysingh",
						"displayName": "Vijay Singh",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2020-08-20T00:26:26.000+0000",
					"updated": "2020-08-20T00:26:26.000+0000"
				},
				{
					"id": "456643",
					"author": {
						"name": "ssekhri",
						"key": "ssekhri",
						"displayName": "Satyam Sekhri",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "FR Passed.\r\nWaiting for Jenkins build",
					"updateAuthor": {
						"name": "ssekhri",
						"key": "ssekhri",
						"displayName": "Satyam Sekhri",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2020-08-28T17:44:52.000+0000",
					"updated": "2020-08-28T17:44:52.000+0000"
				},
				{
					"id": "456853",
					"author": {
						"name": "ssekhri",
						"key": "ssekhri",
						"displayName": "Satyam Sekhri",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Verified on:\r\nMac OS: 10.15.4\r\nSDK: 9.2.0.v20200911073932, 9.3.0.v20200911052140\r\nAppc CLI: 8.1.0\r\nJDK: 11.0.4\r\nNode: 10.17.0\r\nStudio: 6.0.0.202005141803\r\nXcode: 12.0 Beta6\r\niPhone 7Plus(v14.0 Beta6)",
					"updateAuthor": {
						"name": "ssekhri",
						"key": "ssekhri",
						"displayName": "Satyam Sekhri",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2020-09-11T19:54:03.000+0000",
					"updated": "2020-09-11T19:54:03.000+0000"
				}
			],
			"maxResults": 12,
			"total": 12,
			"startAt": 0
		}
	}
}