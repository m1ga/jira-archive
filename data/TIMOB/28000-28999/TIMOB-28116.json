{
	"id": "175514",
	"key": "TIMOB-28116",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [
			{
				"id": "21051",
				"description": "",
				"name": "Release 9.2.0",
				"archived": false,
				"released": true,
				"releaseDate": "2020-09-23"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2020-09-10T16:00:21.000+0000",
		"created": "2020-09-09T11:00:35.000+0000",
		"priority": {
			"name": "Critical",
			"id": "1"
		},
		"labels": [],
		"versions": [
			{
				"id": "21051",
				"description": "",
				"name": "Release 9.2.0",
				"archived": false,
				"released": true,
				"releaseDate": "2020-09-23"
			}
		],
		"issuelinks": [
			{
				"id": "58712",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"outwardIssue": {
					"id": "173720",
					"key": "TIMOB-27132",
					"fields": {
						"summary": "iOS 13: Add MacOS as a target for deployment",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Medium",
							"id": "3"
						},
						"issuetype": {
							"id": "6",
							"description": "gh.issue.epic.desc",
							"name": "Epic",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "58708",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"outwardIssue": {
					"id": "175425",
					"key": "TIMOB-28075",
					"fields": {
						"summary": "iOS: Update build script of APSHTTPClient to exclude arm64 from simulator build",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "None",
							"id": "6"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "58721",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"outwardIssue": {
					"id": "175525",
					"key": "TIMOB-28124",
					"fields": {
						"summary": "iOS: Rebuild modules with macOS/xcframeworks support",
						"status": {
							"description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
							"name": "Resolved",
							"id": "5",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "High",
							"id": "2"
						},
						"issuetype": {
							"id": "7",
							"description": "gh.issue.story.desc",
							"name": "Story",
							"subtask": false
						}
					}
				}
			},
			{
				"id": "58709",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"outwardIssue": {
					"id": "175426",
					"key": "TIMOB-28076",
					"fields": {
						"summary": "iOS: Update build script of APSAnalytics to exclude arm64 from simulator build",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "None",
							"id": "6"
						},
						"issuetype": {
							"id": "4",
							"description": "An improvement or enhancement to an existing feature or task.",
							"name": "Improvement",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": {
			"name": "cwilliams",
			"key": "cwilliams",
			"displayName": "Christopher Williams",
			"active": true,
			"timeZone": "America/New_York"
		},
		"updated": "2020-09-22T23:07:43.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10206",
				"name": "iOS",
				"description": "iOS Platform"
			}
		],
		"description": "Since a few beta versions, it's not possible to build modules (like Ti.Facebook) with Xcode 12 anymore. Make sure Xcode 12 is selected ({{sudo xcode-select -s /Applications/Xcode-beta.app}}) and build the module with {{ti build -p ios --build-only}}.\r\n\r\nThe error is:\r\n{code}\r\n[ERROR] Failed to generate universal binary (code 1):\r\n[ERROR] fatal error: /Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/lipo: ti.facebook/ios/build/Release-iphoneos/libfacebook.a and ti.facebook/ios/build/Release-iphonesimulator/libfacebook.a have the same architectures (arm64) and can't be in the same fat output file\r\n{code}",
		"attachment": [],
		"flagged": false,
		"summary": "Xcode 12: Cannot build modules anymore",
		"creator": {
			"name": "hknoechel",
			"key": "hansknoechel",
			"displayName": "Hans Knöchel",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"subtasks": [],
		"reporter": {
			"name": "hknoechel",
			"key": "hansknoechel",
			"displayName": "Hans Knöchel",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"environment": null,
		"closedSprints": [
			{
				"id": 1205,
				"state": "closed",
				"name": "2020 Sprint 18",
				"startDate": "2020-08-31T15:45:10.220Z",
				"endDate": "2020-09-11T15:45:00.000Z",
				"completeDate": "2020-09-11T19:56:20.674Z",
				"originBoardId": 114
			}
		],
		"comment": {
			"comments": [
				{
					"id": "456795",
					"author": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "Hey [~hknoechel] - the long story short is that with Xcode 12, Apple is adding arm64 simulator as a target/arch combo. That \"clashes\" with arm64 device. So trying to create a \"fat universal binary\" doesn't work. We have to move over to xcframeworks (or explicitly exclude arm64 sim). The work is already done in the macOS support PR (since that already requires move to xcframeworks). \r\n\r\nYou can try to build with that PR, our wait until we land that PR (or the xcframeworks support separately). Or you can do what the linked tickets did and hack a short-term fix of just excluding arm64 sim.",
					"updateAuthor": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2020-09-09T17:21:49.000+0000",
					"updated": "2020-09-09T17:21:49.000+0000"
				},
				{
					"id": "456797",
					"author": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "https://github.com/appcelerator/titanium_mobile/pull/12026",
					"updateAuthor": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2020-09-09T19:09:28.000+0000",
					"updated": "2020-09-09T19:09:28.000+0000"
				},
				{
					"id": "456804",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Thanks Chris! The PR can btw be tested with https://github.com/hansemannn/titanium-widget-kit which is also affected by this change.",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2020-09-10T09:30:28.000+0000",
					"updated": "2020-09-10T09:30:28.000+0000"
				},
				{
					"id": "456827",
					"author": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"body": "[~hknoechel] A quick note if you didn't create the module from the template in one of the xcframework PRs - I had to hack in a reference to TitaniumKit.xcframework for a swift based module. The module template sticks in an absolute path pointing to the version of the xcframework from the SDK used to create the module. In apple-sign-in, I use {{$TITANIUM_SDK}} to build the path which works when building from CLI, but not in the Xcode project: https://github.com/appcelerator-modules/titanium-apple-sign-in/pull/16/files#diff-ab2479047e1642c6a102069cd6069bb2R24",
					"updateAuthor": {
						"name": "cwilliams",
						"key": "cwilliams",
						"displayName": "Christopher Williams",
						"active": true,
						"timeZone": "America/New_York"
					},
					"created": "2020-09-10T17:05:12.000+0000",
					"updated": "2020-09-10T17:05:12.000+0000"
				},
				{
					"id": "456836",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Good to know! I just pulled latest master and tried migrating the module in [this commit|https://github.com/hansemannn/titanium-widget-kit/commit/0cde540c4bbe169e3ce6f3ad248cee8bb3894c8b], but it still fails (with a different error now):\r\n{code}\r\n[TRACE] [xcode-macos] #import <TitaniumKit/TiBase.h>\r\n[TRACE] [xcode-macos]         ^\r\n[TRACE] [xcode-macos] /Users/hans/Documents/dev/titanium/titanium-widget-kit/ios/Classes/TiWidgetkitModule.swift:11:8: error: could not build Objective-C module 'TitaniumKit'\r\n[TRACE] [xcode-macos] import TitaniumKit\r\n[TRACE] [xcode-macos]        ^\r\n[ERROR] [xcode-macos] ** ARCHIVE FAILED **\r\n[ERROR] [xcode-macos] The following build commands failed:\r\n[ERROR] [xcode-macos] \tCompileSwift normal arm64 /Users/hans/Documents/dev/titanium/titanium-widget-kit/ios/Classes/TiWidgetkitModule.swift\r\n[ERROR] [xcode-macos] \tCompileSwiftSources normal arm64 com.apple.xcode.tools.swift.compiler\r\n[ERROR] [xcode-macos] \tCompileSwift normal x86_64 /Users/hans/Documents/dev/titanium/titanium-widget-kit/ios/Classes/TiWidgetkitModule.swift\r\n[ERROR] [xcode-macos] \tCompileSwiftSources normal x86_64 com.apple.xcode.tools.swift.compiler\r\n[ERROR] [xcode-macos] (4 failures)\r\n{code}\r\n\r\nIt works when building in Xcode (CMD+B), but the CLI is required to package it. Same happens btw when creating a new Swift module from the scratch.",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2020-09-11T10:57:56.000+0000",
					"updated": "2020-09-11T11:02:44.000+0000"
				}
			],
			"maxResults": 5,
			"total": 5,
			"startAt": 0
		}
	}
}