{
	"id": "168129",
	"key": "TIMOB-28268",
	"fields": {
		"issuetype": {
			"id": "2",
			"description": "A new feature of the product, which has yet to be developed.",
			"name": "New Feature",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": null,
		"resolutiondate": null,
		"created": "2017-06-06T19:22:24.000+0000",
		"epic": {
			"id": 168100,
			"key": "TIMOB-24772",
			"name": "iOS: Support iOS 11 / Xcode 9",
			"summary": "iOS: Add support for iOS 11 and Xcode 9",
			"color": {
				"key": "color_1"
			},
			"done": false
		},
		"priority": {
			"name": "Medium",
			"id": "3"
		},
		"labels": [
			"cb-tooling",
			"ios11"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "cwilliams",
			"key": "cwilliams",
			"displayName": "Christopher Williams",
			"active": true,
			"timeZone": "America/New_York"
		},
		"updated": "2020-12-04T00:36:53.000+0000",
		"status": {
			"description": "The issue is open and ready for the assignee to start work on it.",
			"name": "Open",
			"id": "1",
			"statusCategory": {
				"id": 2,
				"key": "new",
				"colorName": "blue-gray",
				"name": "To Do"
			}
		},
		"components": [
			{
				"id": "10206",
				"name": "iOS",
				"description": "iOS Platform"
			}
		],
		"description": "Xcode 9 finally includes support for wireless debugging of iOS- and tvOS-based apps. We should support the same in Titanium from both CLI and Studio.\r\n\r\nRead more about Xcode 9 [here|https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/WhatsNewXcode/xcode_9/xcode_9.html].",
		"attachment": [],
		"flagged": false,
		"summary": "Xcode 9: Add support for wireless debugging",
		"creator": {
			"name": "hknoechel",
			"key": "hansknoechel",
			"displayName": "Hans Knöchel",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"subtasks": [],
		"reporter": {
			"name": "hknoechel",
			"key": "hansknoechel",
			"displayName": "Hans Knöchel",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "421132",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "I figured out a way to do wireless debugging a while ago. Not sure if this feature will affect the way I was thinking we could do it.",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2017-06-06T21:25:11.000+0000",
					"updated": "2017-06-06T21:25:11.000+0000"
				},
				{
					"id": "436660",
					"author": {
						"name": "ygbr",
						"key": "ygbr",
						"displayName": "Ygor Lemos",
						"active": true,
						"timeZone": "America/Sao_Paulo"
					},
					"body": "Hi guys. Any hints on how to enable this on Xcode 9 for Ti apps?\r\n",
					"updateAuthor": {
						"name": "ygbr",
						"key": "ygbr",
						"displayName": "Ygor Lemos",
						"active": true,
						"timeZone": "America/Sao_Paulo"
					},
					"created": "2018-04-09T19:09:02.000+0000",
					"updated": "2018-04-09T19:09:02.000+0000"
				},
				{
					"id": "436661",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "[~ygbr] No idea how it works for native iOS apps and I have no idea if our debugger today supports it. I know you can launch Safari and see the iOS device somewhere in the Developer menu, but I don't recall if that was over USB or WiFi.\r\n\r\nWhat I found was a way for node-ios-device (which uses the private MobileDevice.framework) to detect if it sees the device over USB or WiFi. I built node-ios-device not knowing it treated USB and WiFi devices differently. I use the UDID to track the devices and filter out all non-USB devices (https://github.com/appcelerator/node-ios-device/blob/master/src/runloop.cpp#L71). I actually should be using the interface type and the UDID to uniquely identify a device. Once I fix this, which won't be anytime soon (maybe Q3 or Q4?), then we should be able to support debugging over WiFi. It will require a bit of hacking on our part and a bit of luck.",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2018-04-09T19:21:00.000+0000",
					"updated": "2018-04-09T19:21:00.000+0000"
				},
				{
					"id": "444078",
					"author": {
						"name": "nsalahin",
						"key": "nsalahin",
						"displayName": "Nazmus Salahin",
						"active": true,
						"timeZone": "Asia/Dhaka"
					},
					"body": "Hi ! Is there any update on this issue?",
					"updateAuthor": {
						"name": "nsalahin",
						"key": "nsalahin",
						"displayName": "Nazmus Salahin",
						"active": true,
						"timeZone": "Asia/Dhaka"
					},
					"created": "2018-11-30T03:54:59.000+0000",
					"updated": "2018-11-30T03:54:59.000+0000"
				},
				{
					"id": "444103",
					"author": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"body": "[~nsalahin] No update. :(",
					"updateAuthor": {
						"name": "cbarber",
						"key": "cbarber",
						"displayName": "Chris Barber",
						"active": true,
						"timeZone": "America/Chicago"
					},
					"created": "2018-11-30T16:02:24.000+0000",
					"updated": "2018-11-30T16:02:24.000+0000"
				},
				{
					"id": "454392",
					"author": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "You can use [ios-deploy|https://github.com/ios-control/ios-deploy/] to support wireless installs. Would be great to be incorporated into ioslib / node-ios-device.\r\n\r\n*EDIT*: Two additional things:\r\n\r\n1. This should be moved to TIMOB, since this is not a studio thing\r\n2. Here is an example to use wireless installs today:\r\n{code}\r\n➜  my-app git:(master) ✗ ios-deploy --justlaunch --debug --bundle build/iphone/build/Products/Debug-iphonesimulator/MyApp.app\r\n[....] Waiting for iOS device to be connected\r\n[....] Using 00008020-001435260A28002E (D321AP, iPhone XS, iphoneos, arm64e) a.k.a. 'iPhone from Hans'.\r\n------ Install phase ------\r\n[  0%] Found 00008020-001435260A28002E (D321AP, iPhone XS, iphoneos, arm64e) a.k.a. 'iPhone from Hans' connected through WIFI, beginning install\r\n{code}",
					"updateAuthor": {
						"name": "hknoechel",
						"key": "hansknoechel",
						"displayName": "Hans Knöchel",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2020-02-23T13:42:43.000+0000",
					"updated": "2020-02-23T13:49:04.000+0000"
				}
			],
			"maxResults": 8,
			"total": 8,
			"startAt": 0
		}
	}
}