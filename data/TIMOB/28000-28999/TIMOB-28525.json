{
	"id": "176272",
	"key": "TIMOB-28525",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [
			{
				"id": "21201",
				"description": "",
				"name": "Release 10.1.0",
				"archived": false,
				"released": true,
				"releaseDate": "2021-09-28"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2021-09-06T11:14:09.000+0000",
		"created": "2021-08-17T09:08:33.000+0000",
		"priority": {
			"name": "High",
			"id": "2"
		},
		"labels": [
			"M1",
			"build",
			"iOS",
			"module"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "jquick",
			"key": "jquick",
			"displayName": "Joshua Quick",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2021-09-06T11:14:09.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10206",
				"name": "iOS",
				"description": "iOS Platform"
			}
		],
		"description": "This will become a very common issue over the next few months as more Macs will run on the M1/MX chips: The build fails due to the {{arm64}} architecture. In the native world, Apple resolves this by providing Rosetta, an architecture bridge that allows apps to be started in {{x86_64}} (Intel) mode.\r\n\r\nSo practically, users can just start their VSCode or Terminal with Rosetta (right click > Info > \"Use Rosetta\") and the app would compile with x86_64. But currently, the Titanium CLI uses {{process.arch}} to detect the architecture, which causes a problem, because it still detects {{arm64}} and therefore fails early, although the build would run through.\r\n\r\nTo fix this, the command {{uname -a}} can be used and returns the actual used process architecture. And since iOS apps don't run on Windows anyway, we don't have to fear Windows compatibility for the command.",
		"attachment": [],
		"flagged": false,
		"summary": "iOS: Cannot run apps with non-arm64 modules on Apple Silicon (even with Rosetta)",
		"creator": {
			"name": "hknoechel",
			"key": "hansknoechel",
			"displayName": "Hans Knöchel",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"subtasks": [],
		"reporter": {
			"name": "hknoechel",
			"key": "hansknoechel",
			"displayName": "Hans Knöchel",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"environment": null,
		"comment": {
			"comments": [],
			"maxResults": 0,
			"total": 0,
			"startAt": 0
		}
	}
}