{
	"id": "79572",
	"key": "TIMOB-5090",
	"fields": {
		"issuetype": {
			"id": "2",
			"description": "A new feature of the product, which has yet to be developed.",
			"name": "New Feature",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": {
			"id": "2",
			"description": "The problem described is an issue which will never be fixed.",
			"name": "Won't Fix"
		},
		"resolutiondate": "2020-02-13T15:14:09.000+0000",
		"created": "2011-08-24T06:15:23.000+0000",
		"priority": {
			"name": "Trivial",
			"id": "5"
		},
		"labels": [
			"core",
			"tbs-1.9.0"
		],
		"versions": [],
		"issuelinks": [],
		"assignee": {
			"name": "emerriman",
			"key": "emerriman",
			"displayName": "Eric Merriman ",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2020-02-13T15:14:09.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10206",
				"name": "iOS",
				"description": "iOS Platform"
			}
		],
		"description": "If you do something like console out 'this' inside a callback you get\r\nback \"KrollCallback 0x000123\".  In Instruments you can see where this is\r\nat by looking at the '0x000123' or however many characters it is.\r\n\r\nIs there a way to name these?  A good example is NodeJS.  When you're\r\ndoing any debugging in NodeJS you can name your callbacks in place and\r\nthey will show up in the stack trace.  I.e.  someEvent('res', function\r\ncoolbeans() {});  Then 'coolbeans' will show up in the stack trace.  Is\r\nit possible to give KrollCallbacks actual names?",
		"attachment": [],
		"flagged": false,
		"summary": "Giving names to KrollContext, KrollCallback, etc.",
		"creator": {
			"name": "rblalock",
			"key": "rblalock",
			"displayName": "Rick Blalock",
			"active": false,
			"timeZone": "America/Havana"
		},
		"subtasks": [],
		"reporter": {
			"name": "rblalock",
			"key": "rblalock",
			"displayName": "Rick Blalock",
			"active": false,
			"timeZone": "America/Havana"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "252970",
					"author": {
						"name": "blainhamon",
						"key": "blainhamon",
						"displayName": "Blain Hamon",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I do want the memory address (it'd be 32 bits, so 8 digits) to stay, as it vastly helps in differentiating between objects on the native side. However, we do have some options on what other information is provided as well. The following Kroll classes have JS analogs.\n\n* KrollBridge: Not visible to JS.\n* KrollContext: Not visible to JS.\n* KrollMethod: Represents a function on a proxy.\n* KrollCallback: Represents a JS function held natively.\n* KrollWrapper: Represents a JS object, not held.\n* KrollObject: Proxy, already reports the proxy information.\n",
					"updateAuthor": {
						"name": "blainhamon",
						"key": "blainhamon",
						"displayName": "Blain Hamon",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2013-05-20T23:01:47.000+0000",
					"updated": "2013-05-20T23:01:47.000+0000"
				},
				{
					"id": "454249",
					"author": {
						"name": "topener",
						"key": "topener",
						"displayName": "Rene Pot",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "no longer relevant",
					"updateAuthor": {
						"name": "topener",
						"key": "topener",
						"displayName": "Rene Pot",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2020-02-13T15:14:09.000+0000",
					"updated": "2020-02-13T15:14:09.000+0000"
				}
			],
			"maxResults": 2,
			"total": 2,
			"startAt": 0
		}
	}
}