{
	"id": "80396",
	"key": "TIMOB-5312",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": {
			"id": "5",
			"description": "All attempts at reproducing this issue failed, or not enough information was available to reproduce the issue. Reading the code produces no clues as to why this behavior would occur. If more information appears later, please reopen the issue.",
			"name": "Cannot Reproduce"
		},
		"resolutiondate": "2012-02-10T00:31:17.000+0000",
		"created": "2011-09-18T23:37:50.000+0000",
		"priority": {
			"name": "Critical",
			"id": "1"
		},
		"labels": [
			"filesystem",
			"remote"
		],
		"versions": [],
		"issuelinks": [
			{
				"id": "12768",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"outwardIssue": {
					"id": "78922",
					"key": "TIMOB-5334",
					"fields": {
						"summary": "iOS: Write remote images to disk fails!",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Critical",
							"id": "1"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": {
			"name": "hpham",
			"key": "hpham",
			"displayName": "Hieu Pham",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2012-02-10T00:31:17.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10202",
				"name": "Android",
				"description": "Android Platform"
			}
		],
		"description": "When download an image gallery and save it to the phones filesystem, problems occur. \r\nIt works great with 30-50 images at the time. But a large amount of images resolves in some of the images are not saved to disk. The skipped images are random each time I test this. Sometimes it is only a few that are left out, other times its 20 images out of 150.  \r\nIts the same behaviour on iOS and Android. \r\n\r\nHere is my json loader of the remote images:\r\n{code:javascript} \r\nxhr.onload = function() {\r\n    try {\r\n        var items = eval('('+this.responseText+')');\r\n        for (var c=1;c<items.length;c++)\r\n        {           \r\n            var id = items[c].id;\r\n            var imageLarge = items[c].imageLarge;\r\n            var imageSmall = items[c].imageSmall;\r\n            var imageMedium = items[c].imageMedium; \r\n \r\n            //image related content\r\n            var imageArr = [imageLarge, imageSmall, imageMedium];\r\n            var imageNameArr = ['imageLarge_', 'thumb_', 'thumb_'];\r\n            var imageNativePath = [];\r\n \r\n            for (var i=0; i < imageArr.length; i++) {\r\n                var filename = xtractFile(imageArr[i]);\r\n                var imageName = '' + imageNameArr[i] + id + filename.extension;\r\n \r\n                //SAVE REMOTE FILE NOW !\r\n                //get_remote_file( filename, url, debug, progress, override)\r\n                getRemoteFile('gallery/'+imageName, imageArr[i], function(fileobj){ Ti.API.info(fileobj) }, null, true );\r\n            };\r\n \r\n        //all done \r\n        showContent();\r\n    }\r\n        catch(e) {\r\n            //something goes wrong - showcontent\r\n            trace(\"CATCH ERROR: \" + e);\r\n        }\r\n    };\r\n    xhr.onerror = function() {\r\n        trace(\"ONERROR: \" + e);\r\n    };\r\n    xhr.open(\"GET\",rssFeed);\r\n    xhr.send(); \r\n};\r\n{code} \r\n\r\nThe below is my save to disk function. It works great when the app is handling 50 images at the time, but once its higher, some of the images are not stored, even though this below function is called. \r\n\r\n{code:javascript} \r\nfunction getRemoteFile(filename, url, fn_end, fn_progress, override ) {\r\n    var file_obj = {file:filename, url:url, path: null};\r\n    var file = Titanium.Filesystem.getFile(Titanium.Filesystem.applicationDataDirectory,filename);\r\n \r\n    if ( file.exists() ) {\r\n        file_obj.path = Titanium.Filesystem.applicationDataDirectory+Titanium.Filesystem.separator;\r\n        if(override) {\r\n            file.deleteFile();\r\n        } else {\r\n            return;\r\n        }     \r\n    }\r\n    if ( Titanium.Network.online ) {\r\n        var c = Titanium.Network.createHTTPClient();\r\n        c.setTimeout(10000);\r\n        c.onload = function()\r\n        {\r\n            if (c.status == 200 ) {\r\n                var f = Titanium.Filesystem.getFile(Titanium.Filesystem.applicationDataDirectory,filename);\r\n \r\n                //write file to disk\r\n                f.write(this.responseData);\r\n \r\n                if(f.size == 0) {\r\n                    //size 0 - start over\r\n                    trace(\"ERROR: image write, try again\");\r\n                    getRemoteFile(filename, url, fn_end, fn_progress, override )\r\n                }\r\n \r\n                file_obj.path = Titanium.Filesystem.applicationDataDirectory+Titanium.Filesystem.separator;\r\n            } else {\r\n                file_obj.error = 'file not found'; // to set some errors codes\r\n            }\r\n        };\r\n        c.ondatastream = function(e)\r\n        {\r\n            if ( fn_progress ) fn_progress(e.progress);\r\n        };\r\n        c.error = function(e)\r\n        {\r\n \r\n            file_obj.error = e.error;\r\n            fn_end(file_obj);\r\n            trace(\"error: \" + e);\r\n        };\r\n        c.open('GET',url);\r\n        c.send();           \r\n    } else {\r\n        file_obj.error = 'no internet';\r\n        fn_end(file_obj);\r\n    }  \r\n};\r\n{code}\r\n\r\n\r\njson feed: http://cph.napp.dk/index.php?option=com_phocagallery&view=napp&format=json\r\n\r\nThere are no errors or exceptions I can paste in, due to the fact that Titanium does not make \"errors\" it just skips a lot of files. \r\nYes, it has nothing to do with the server. I have tried without the \"write remote to disk functionality\" and the gallery works great.\r\nQ&A Thread at [save 100+ remote images to disk|http://developer.appcelerator.com/question/123769/save-100-remote-images-to-disk]",
		"attachment": [
			{
				"id": "22970",
				"filename": "TestImageApp.zip",
				"author": {
					"name": "viezel",
					"key": "viezel",
					"displayName": "Mads Moller",
					"active": true,
					"timeZone": "Europe/Berlin"
				},
				"created": "2011-09-18T23:37:50.000+0000",
				"size": 2330453,
				"mimeType": "application/zip"
			}
		],
		"flagged": false,
		"summary": "Android: Write remote images to disk fails",
		"creator": {
			"name": "viezel",
			"key": "viezel",
			"displayName": "Mads Moller",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"subtasks": [],
		"reporter": {
			"name": "viezel",
			"key": "viezel",
			"displayName": "Mads Moller",
			"active": true,
			"timeZone": "Europe/Berlin"
		},
		"environment": "Titanium SDK version: 1.7.1 timestamp=06/21/11 14:28 githash=1293a6d\r\nTitanium Studio version: 1.0.2.201107130739\r\nPlatform: Android 2.1, Android 2.2, Android 2.3.3\r\nDevice: Android simulators and Android Devices\r\nHost: osx 1.6.6",
		"comment": {
			"comments": [
				{
					"id": "168103",
					"author": {
						"name": "viezel",
						"key": "viezel",
						"displayName": "Mads Moller",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"body": "Hi, any new progress here?\r\nI would love a fix to this, due to my apps cannot write these images to the filesystem...\r\ncheers!",
					"updateAuthor": {
						"name": "viezel",
						"key": "viezel",
						"displayName": "Mads Moller",
						"active": true,
						"timeZone": "Europe/Berlin"
					},
					"created": "2011-10-06T00:24:53.000+0000",
					"updated": "2011-10-06T00:24:53.000+0000"
				},
				{
					"id": "178724",
					"author": {
						"name": "hpham",
						"key": "hpham",
						"displayName": "Hieu Pham",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "I tested the app and I was unable to see any images (sometimes I saw 1) inside the scrollView. The process of downloading images was fine. I ran it about 10 times and I got nearly 300 images every time, without any missing images. After simplifying the code, it seemed that the test app did not wait for the images to be generated in /gallery folder before adding it to imageView, which resulted in incorrect path for the image file. I confirmed this by separating the process, i.e download only on the first run, check to make sure image is there, then load it with imageView in the next run, and it works.  \r\n\r\nUnable to reproduce the behavior described in this ticket. ",
					"updateAuthor": {
						"name": "hpham",
						"key": "hpham",
						"displayName": "Hieu Pham",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-01-10T11:42:25.000+0000",
					"updated": "2012-01-10T11:42:25.000+0000"
				},
				{
					"id": "182642",
					"author": {
						"name": "thomashuelbert",
						"key": "thomashuelbert",
						"displayName": "Thomas Huelbert",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "closing as we are not able to reproduce using master (1.9.0 Feb 9 2012 09:46 rd47ce8a4)",
					"updateAuthor": {
						"name": "thomashuelbert",
						"key": "thomashuelbert",
						"displayName": "Thomas Huelbert",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-02-09T14:05:13.000+0000",
					"updated": "2012-02-09T14:05:13.000+0000"
				}
			],
			"maxResults": 3,
			"total": 3,
			"startAt": 0
		}
	}
}