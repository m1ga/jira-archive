{
	"id": "85252",
	"key": "TIMOB-7319",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": {
			"id": "10100",
			"description": "This issue won't be actioned.",
			"name": "Won't Do"
		},
		"resolutiondate": "2020-01-09T23:32:12.000+0000",
		"created": "2012-01-20T14:04:33.000+0000",
		"priority": {
			"name": "High",
			"id": "2"
		},
		"labels": [
			"parity"
		],
		"versions": [],
		"issuelinks": [
			{
				"id": "14698",
				"type": {
					"id": "10001",
					"name": "Cloners",
					"inward": "is cloned into",
					"outward": "is cloned from"
				},
				"outwardIssue": {
					"id": "85251",
					"key": "TIDOC-269",
					"fields": {
						"summary": "APIDoc: Label, TextArea support add method on iOS only",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Low",
							"id": "4"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": {
			"name": "emerriman",
			"key": "emerriman",
			"displayName": "Eric Merriman ",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2020-01-10T10:30:20.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10224",
				"name": "TiAPI",
				"description": "This component is used for cross-platform API work. Specifications are most likely to use this component."
			}
		],
		"description": "See related Q&A Item:\r\n\r\nhttp://developer.appcelerator.com/question/130925/about-textaress-methodadd\r\n\r\nNeed to define which controls can/should accept children and which cannot or should not.",
		"attachment": [],
		"flagged": false,
		"summary": "Ti API: Label, TextArea support add method on iOS only",
		"creator": {
			"name": "aevans",
			"key": "aevans",
			"displayName": "Arthur Evans",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "aevans",
			"key": "aevans",
			"displayName": "Arthur Evans",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"closedSprints": [
			{
				"id": 1176,
				"state": "closed",
				"name": "2020 Sprint 1",
				"startDate": "2020-01-02T21:15:56.301Z",
				"endDate": "2020-01-17T21:15:00.000Z",
				"completeDate": "2020-01-21T17:44:29.577Z",
				"originBoardId": 114
			}
		],
		"comment": {
			"comments": [
				{
					"id": "180146",
					"author": {
						"name": "ivan.skugor",
						"key": "ivan.skugor",
						"displayName": "Ivan Skugor",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"body": "In my opinion ... in the documentation, there should be clear separation between different types of UI components: windows, views and controls. \r\n\r\n\r\nHere is example of how I explain UI namespace:\r\n\r\n\r\nControls are components that are used for user interaction (selecting data values, entering data values, etc) and that can't contain other components: Label, TextField, TextArea, Button etc. There are special cases of composite control components that can contain other specific controls (so, they are also of view type). Picker->PickerColumn->PickerRow is currently the only one special case on both platforms.\r\n\r\nViews are components that are used for UI layout and that can contain other components of view or control type. There are also special composite views like TableView->TableViewSection->TableViewRow (TableViewRow is of view type so it can contain other views and controls), which means that TableViewSection and TableViewRow can't visually exist for themselves, they can only be added to TableView component. \r\nAll views have different layout mechanisms and some view types are scrollable which means they can show content that is greater than their size by scrolling in different directions.\r\n\r\n\r\nWindows are components that are used for navigation. They have methods like \"open\" or \"close\" that are responsible for creating and destroying new visual surface on the screen. The most basic and main component is Window component. Beside Window, there is special composite TabGroup component that is basic navigation control. It is top level composite component that can contain only Tab components and each Tab component can contain Window component (TabGroup->Tab->Window).\r\nThey are also of view type, which means other views and controls can be added to them and different layout mechanisms can be applied to them. TabGroup is restricted and can't have different layout mechanism, it's visual behavior is determined by native platform on which app runs.\r\n\r\n\r\n\r\n\r\nAnyway ... that's just basic explanation (and it can be massively improved firstly because English is not my native language :) ) but in my opinion it is much better than basic (\"flat\") explanation. Organization of UI components in semantically correct hierarchy can greatly improve learning curve for new developers. That way nobody would ask why can't he add TableViewRow to ScrollView, or why Tab can't be added to Picker and other great questions. Also, this way concerns are separated and developers are implicitly pushed to direction of designing applications in a way that different application parts are separated: navigation, high-level layout (that can easily be modified for different platforms and screen resolutions) and low-level controls.",
					"updateAuthor": {
						"name": "ivan.skugor",
						"key": "ivan.skugor",
						"displayName": "Ivan Skugor",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"created": "2012-01-23T02:45:54.000+0000",
					"updated": "2012-01-23T02:45:54.000+0000"
				},
				{
					"id": "187459",
					"author": {
						"name": "mculpepper",
						"key": "mculpepper",
						"displayName": "Marshall Culpepper",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "This will require changes to our UI type hierarchy which are planned with our upcoming UI Layout API implementation",
					"updateAuthor": {
						"name": "mculpepper",
						"key": "mculpepper",
						"displayName": "Marshall Culpepper",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-03-20T12:52:29.000+0000",
					"updated": "2012-03-20T12:52:29.000+0000"
				},
				{
					"id": "187466",
					"author": {
						"name": "bhughes",
						"key": "bhughes",
						"displayName": "Bryan Hughes",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "FWIW Mobile Web supports the add() method on all controls, including label. We have architected mobile web so that the transition mentioned by Marshall should be relatively painless.",
					"updateAuthor": {
						"name": "bhughes",
						"key": "bhughes",
						"displayName": "Bryan Hughes",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-03-20T13:03:37.000+0000",
					"updated": "2012-03-20T13:03:37.000+0000"
				},
				{
					"id": "187477",
					"author": {
						"name": "ngupta",
						"key": "ngupta",
						"displayName": "Neeraj Gupta",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "We can take care of this issue in few different ways. We should keep it open for further discussion.",
					"updateAuthor": {
						"name": "ngupta",
						"key": "ngupta",
						"displayName": "Neeraj Gupta",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-03-20T13:35:15.000+0000",
					"updated": "2012-03-20T13:35:15.000+0000"
				},
				{
					"id": "187619",
					"author": {
						"name": "ivan.skugor",
						"key": "ivan.skugor",
						"displayName": "Ivan Skugor",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"updateAuthor": {
						"name": "ivan.skugor",
						"key": "ivan.skugor",
						"displayName": "Ivan Skugor",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"created": "2012-03-21T01:32:57.000+0000",
					"updated": "2012-03-21T01:32:57.000+0000"
				},
				{
					"id": "187679",
					"author": {
						"name": "bhughes",
						"key": "bhughes",
						"displayName": "Bryan Hughes",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Ivan: it adds that view to the label...just as if the label were a view (in fact label inherits from view). I believe the contents of the view will sit on top of the text. As for the CommonJS thing, talk to Chris Barber. He's the one who implemented that part of mobile web.",
					"updateAuthor": {
						"name": "bhughes",
						"key": "bhughes",
						"displayName": "Bryan Hughes",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-03-21T08:21:26.000+0000",
					"updated": "2012-03-21T08:22:17.000+0000"
				},
				{
					"id": "453622",
					"author": {
						"name": "ahutton",
						"key": "ahutton",
						"displayName": "Alan Hutton",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "This issue is out of date with our current supported SDK release (7.5.2.GA as of the date of closure), and out of date with mobile OS versions. \r\n\r\nIf community members feel that the issue is still valid, please create a new ticket. Please reference this closed ticket number, include SDK used, comments, and code that demonstrates/reproduces the issue.",
					"updateAuthor": {
						"name": "ahutton",
						"key": "ahutton",
						"displayName": "Alan Hutton",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2020-01-09T23:32:12.000+0000",
					"updated": "2020-01-09T23:32:12.000+0000"
				},
				{
					"id": "453624",
					"author": {
						"name": "smohammed",
						"key": "smohammed",
						"displayName": "Samir Mohammed",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Closing ticket as it marked as {{Won't Do}}.",
					"updateAuthor": {
						"name": "smohammed",
						"key": "smohammed",
						"displayName": "Samir Mohammed",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2020-01-10T10:30:14.000+0000",
					"updated": "2020-01-10T10:30:14.000+0000"
				}
			],
			"maxResults": 10,
			"total": 10,
			"startAt": 0
		}
	}
}