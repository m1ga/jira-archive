{
	"id": "86135",
	"key": "TIMOB-7558",
	"fields": {
		"issuetype": {
			"id": "2",
			"description": "A new feature of the product, which has yet to be developed.",
			"name": "New Feature",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": null,
		"resolutiondate": null,
		"created": "2012-02-06T15:35:13.000+0000",
		"priority": {
			"name": "High",
			"id": "2"
		},
		"labels": [],
		"versions": [
			{
				"id": "12677",
				"description": "Release 1.8 Service Pack 1",
				"name": "Release 1.8.1",
				"archived": true,
				"released": true,
				"releaseDate": "2012-01-31"
			}
		],
		"issuelinks": [
			{
				"id": "15082",
				"type": {
					"id": "10001",
					"name": "Cloners",
					"inward": "is cloned into",
					"outward": "is cloned from"
				},
				"outwardIssue": {
					"id": "84222",
					"key": "TIDOC-188",
					"fields": {
						"summary": "APIDOC: UI - scrollView contentWidth/Height relative dimensions such as percentages are not supported",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Low",
							"id": "4"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": {
			"name": "emerriman",
			"key": "emerriman",
			"displayName": "Eric Merriman ",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2018-08-02T17:31:42.000+0000",
		"status": {
			"description": "The issue is open and ready for the assignee to start work on it.",
			"name": "Open",
			"id": "1",
			"statusCategory": {
				"id": 2,
				"key": "new",
				"colorName": "blue-gray",
				"name": "To Do"
			}
		},
		"components": [
			{
				"id": "10224",
				"name": "TiAPI",
				"description": "This component is used for cross-platform API work. Specifications are most likely to use this component."
			}
		],
		"description": "The following feature request came up in the comments for the linked documentation bug.\r\n\r\nIvan:\r\n\r\n\"contentWidth\" should be calculated according to the size of it's parent container/element, which is not scroll view's parent element or something unknown, but it is scroll view itself. So, when setting \"contentWidth\" to \"100%\", scroll view's content width should be same as scroll view's width.\r\n\r\nThis way if someone wants to have scrollable area that has width two times bigger that scroll view's width, he can easily define that with percentage and does not have to calculate it manually. I think that in most cases people will use \"auto\" as content area's size value, but framework shouldn't limit users to use it on cases that it finds useful.\r\n\r\nFrom other point of view, if fixed values are used, for example, if content's width is 100px and scroll view's width is 50px, percentage can be calculated (200%) without ambiguity.\r\n\r\nThe only issue here is whether content area can be seen as a child element of scroll view. I think it can, no matter the fact that scroll view's content area does not exist as separate entity and that you actually can't do anything with it (except defining it's size). But, from implementation point of view, what is a scroll view but a view with fixed size that contains another view that can be positioned if it's size is bigger. I would say that content area is not real element, but virtual element that is a child of real scroll view element. \r\nThat means, it cannot be created explicitly, it cannot be manipulated directly and it must behave like it does not exists from outside (so, adding elements to scroll view would add elements to content area virtual element and so on).\r\n",
		"attachment": [],
		"flagged": false,
		"summary": "Ti API: UI - support setting ScrollView contentWidth/Height using relative dimensions",
		"creator": {
			"name": "pdowsett",
			"key": "pdowsett",
			"displayName": "Paul Dowsett",
			"active": true,
			"timeZone": "Europe/London"
		},
		"subtasks": [],
		"reporter": {
			"name": "aevans",
			"key": "aevans",
			"displayName": "Arthur Evans",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": null,
		"comment": {
			"comments": [
				{
					"id": "182187",
					"author": {
						"name": "ivan.skugor",
						"key": "ivan.skugor",
						"displayName": "Ivan Skugor",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"body": "This could be implemented as more generalized behavior as I explained in TIDOC ticket.\r\n\r\n\r\n\r\nIf there is a need for more explanation, please let me know. :)\r\n\r\n\r\n\r\nThanks.",
					"updateAuthor": {
						"name": "ivan.skugor",
						"key": "ivan.skugor",
						"displayName": "Ivan Skugor",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"created": "2012-02-07T02:02:38.000+0000",
					"updated": "2012-02-07T02:02:38.000+0000"
				}
			],
			"maxResults": 1,
			"total": 1,
			"startAt": 0
		}
	}
}