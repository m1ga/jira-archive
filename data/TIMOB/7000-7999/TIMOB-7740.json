{
	"id": "85928",
	"key": "TIMOB-7740",
	"fields": {
		"issuetype": {
			"id": "2",
			"description": "A new feature of the product, which has yet to be developed.",
			"name": "New Feature",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": {
			"id": "7",
			"description": "",
			"name": "Invalid"
		},
		"resolutiondate": "2012-08-08T15:49:41.000+0000",
		"created": "2012-02-03T08:14:10.000+0000",
		"priority": {
			"name": "Medium",
			"id": "3"
		},
		"labels": [],
		"versions": [],
		"issuelinks": [
			{
				"id": "19765",
				"type": {
					"id": "10003",
					"name": "Relates",
					"inward": "relates to",
					"outward": "relates to"
				},
				"outwardIssue": {
					"id": "94532",
					"key": "TIMOB-9901",
					"fields": {
						"summary": "TiAPI: Review and clean up platform bugs and reduce bug count by 20%.",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "High",
							"id": "2"
						},
						"issuetype": {
							"id": "7",
							"description": "gh.issue.story.desc",
							"name": "Story",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": {
			"name": "ngupta",
			"key": "ngupta",
			"displayName": "Neeraj Gupta",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2017-03-24T18:22:53.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10206",
				"name": "iOS",
				"description": "iOS Platform"
			}
		],
		"description": "It would be useful to create a parameter for adjusting scrollend event like this :\r\n\r\nmyscrollview.addEventListener('scrollend', callbackfunction, seconds)\r\n\r\nThus, the parameter *seconds* would be the number of seconds before thescrollview stops. \r\nAt this time, the callback function would be called.",
		"attachment": [],
		"flagged": false,
		"summary": "iOS: Add a parameter to addEventListener for scrollEnd listener",
		"creator": {
			"name": "max",
			"key": "max",
			"displayName": "process",
			"active": true,
			"timeZone": "Europe/Paris"
		},
		"subtasks": [],
		"reporter": {
			"name": "max",
			"key": "max",
			"displayName": "process",
			"active": true,
			"timeZone": "Europe/Paris"
		},
		"environment": "Titanium mobile 1.8.0.1",
		"comment": {
			"comments": [
				{
					"id": "213432",
					"author": {
						"name": "blainhamon",
						"key": "blainhamon",
						"displayName": "Blain Hamon",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Going to mark this one as invalid, and offer dragend instead, which triggers on the user lifting up their finger, before the scroll view slows to a stop.\r\n\r\nThe reason this wouldn't work is because at best it would be inconsistent, at worst it would be fully wrong. For one, if there's a scroll that's not animated, there's no way to fire off except after the fact.\r\n\r\nOkay, let's limit it to user-driven events. Suppose we do properly reverse engineer Apple's inertial scrolling algorithm. And that Apple doesn't tweak it from OS to OS. If you scroll, stop, then lift your finger, the time left of scrolling is 0, making the event listener be late as if it were not animated.\r\n\r\nPerhaps only when the finger is up and the scroll view is decelerating. Even then, the clairvoyant event listener would be wrong. Many users, when scrolling a large list, will swipe up or down multiple times to keep scrolling. As such, if the event listener wants to fire 0.5s before the end of scrolling, and we properly predict that the scrolling will stop in 0.5s, the event listener fires. But it would be erroneous, because the user's finger lands and continues the scroll 0.4s before the scroll ends, meaning the scroll handler fired on a nonexistent situation.\r\n\r\nIt is for this reason that this functionality cannot be done.",
					"updateAuthor": {
						"name": "blainhamon",
						"key": "blainhamon",
						"displayName": "Blain Hamon",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-08-08T15:48:56.000+0000",
					"updated": "2012-08-08T15:48:56.000+0000"
				},
				{
					"id": "415673",
					"author": {
						"name": "lmorris",
						"key": "lmorris",
						"displayName": "Lee Morris",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Closing ticket as invalid with reference to the above comments.",
					"updateAuthor": {
						"name": "lmorris",
						"key": "lmorris",
						"displayName": "Lee Morris",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2017-03-24T18:22:53.000+0000",
					"updated": "2017-03-24T18:22:53.000+0000"
				}
			],
			"maxResults": 2,
			"total": 2,
			"startAt": 0
		}
	}
}