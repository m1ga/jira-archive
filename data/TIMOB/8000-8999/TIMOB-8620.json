{
	"id": "89535",
	"key": "TIMOB-8620",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [
			{
				"id": "13271",
				"description": "Release 2.1.0",
				"name": "Release 2.1.0",
				"archived": false,
				"released": true,
				"releaseDate": "2012-06-29"
			},
			{
				"id": "13401",
				"description": "Sprint 2012-09 Core",
				"name": "Sprint 2012-09 Core",
				"archived": true,
				"released": true,
				"releaseDate": "2012-05-06"
			}
		],
		"resolution": {
			"id": "1",
			"description": "A fix for this issue is checked into the tree and tested.",
			"name": "Fixed"
		},
		"resolutiondate": "2012-04-30T16:45:24.000+0000",
		"created": "2012-04-05T03:00:15.000+0000",
		"priority": {
			"name": "Medium",
			"id": "3"
		},
		"labels": [
			"SupportTeam",
			"core",
			"module_view",
			"qe-port"
		],
		"versions": [
			{
				"id": "12570",
				"name": "Release 1.7.5",
				"archived": true,
				"released": true,
				"releaseDate": "2011-11-02"
			},
			{
				"id": "13070",
				"description": "Release 1.8 Service Pack 2",
				"name": "Release 1.8.2",
				"archived": true,
				"released": true,
				"releaseDate": "2012-02-29"
			}
		],
		"issuelinks": [
			{
				"id": "16895",
				"type": {
					"id": "10020",
					"name": "Depends",
					"inward": "is dependent of",
					"outward": "depends on"
				},
				"inwardIssue": {
					"id": "90997",
					"key": "TIMOB-8909",
					"fields": {
						"summary": "iOS: Ti.UI.View.children is not the empty array when no children are present",
						"status": {
							"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
							"name": "Closed",
							"id": "6",
							"statusCategory": {
								"id": 3,
								"key": "done",
								"colorName": "green",
								"name": "Done"
							}
						},
						"priority": {
							"name": "Medium",
							"id": "3"
						},
						"issuetype": {
							"id": "1",
							"description": "A problem which impairs or prevents the functions of the product.",
							"name": "Bug",
							"subtask": false
						}
					}
				}
			}
		],
		"assignee": {
			"name": "stephentramer",
			"key": "stephentramer",
			"displayName": "Stephen Tramer",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2012-06-23T15:33:39.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10206",
				"name": "iOS",
				"description": "iOS Platform"
			}
		],
		"description": "h1. BUG\r\n----\r\n\r\nCurrently, when {{Ti.UI.View.children}} is queried, the live copy of children is returned, meaning that if it is modified in-place during a loop (which might be a common operation) there are some issues. Even worse, it follows copy semantics before a view is put into the full hierarchy, and reference semantics after.\r\n\r\nh1. INITIAL DESCRIPTION\r\n----\r\nh4. Feature description\r\nProvide an easy way to clean the contents of a view/window, like a magic \"remove all children\" that will remove them in the right order. \r\n\r\nh4. Current behavior\r\n\r\nCustomer is trying to do this:\r\n\r\n{code}\r\nfor(var i=0;i<parent.children.length;i++)\r\n{\r\n   parent.remove(parent.children[i]);\r\n}\r\n{code}\r\n\r\nwhich causes a crash in the app because they are removing stuff without any order. Maybe we should provide a tree with all the dependencies in the view, so they can be properly removed. \r\n\r\n",
		"attachment": [],
		"flagged": false,
		"summary": "iOS: Ti.UI.View is a live reference, not copy",
		"creator": {
			"name": "suresh",
			"key": "suresh",
			"displayName": "Suresh Sharma",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"subtasks": [],
		"reporter": {
			"name": "suresh",
			"key": "suresh",
			"displayName": "Suresh Sharma",
			"active": true,
			"timeZone": "America/Los_Angeles"
		},
		"environment": "iPhone",
		"comment": {
			"comments": [
				{
					"id": "190408",
					"author": {
						"name": "ivan.skugor",
						"key": "ivan.skugor",
						"displayName": "Ivan Skugor",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"body": "Here is my solution: https://gist.github.com/1779850 (and explanation why it does not work with \"customer's way\")",
					"updateAuthor": {
						"name": "ivan.skugor",
						"key": "ivan.skugor",
						"displayName": "Ivan Skugor",
						"active": true,
						"timeZone": "Europe/Amsterdam"
					},
					"created": "2012-04-09T23:57:18.000+0000",
					"updated": "2012-04-09T23:57:18.000+0000"
				},
				{
					"id": "193047",
					"author": {
						"name": "stephentramer",
						"key": "stephentramer",
						"displayName": "Stephen Tramer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "h4. Testing\r\n----\r\n\r\n* Run the following code sample - no interactions necessary. Note that the long delays are necessary due to inefficiencies in the rendering system.\r\n\r\nAlso note that there may be occasional errors as the system tries to remove the same view more than once - this is because {{remove()}} is asynchronous. This is not a fatal error.\r\n\r\n{code}\r\nvar win = Ti.UI.createWindow();\r\n\r\nfunction construct() {\r\n\tfor (var i=0; i < 30; i++) {\r\n\t\tfor (var j=0; j < 30; j++) {\r\n\t\t\tvar bgcolor;\r\n\t\t\tswitch (i % 3) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tbgcolor = 'red';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tbgcolor = 'blue';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tbgcolor = 'green';\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tvar view = Ti.UI.createView({\r\n\t\t\t\ttop:(j*10),\r\n\t\t\t\tleft:(i*10),\r\n\t\t\t\twidth:10,\r\n\t\t\t\theight:10,\r\n\t\t\t\tbackgroundColor:bgcolor\r\n\t\t\t});\r\n\t\t\twin.add(view);\r\n\t\t\tTi.API.info(win.children.length);\r\n\t\t}\r\n\t}\r\n\tsetTimeout(destruct, 3000);\r\n}\r\n\r\nfunction destruct() {\r\n\twhile (win.children != null && \r\n\t\t\twin.children != undefined && \r\n\t\t\twin.children.length > 0) \r\n\t{\r\n\t\tTi.API.info(win.children.length);\r\n\t\twin.remove(win.children[0]);\r\n\t}\r\n\tsetTimeout(construct, 3000);\r\n}\r\n\r\nwin.open();\r\nconstruct();\r\n{code}\r\n\r\nThere is a separate issue with {{Ti.UI.View.children}} being {{undefined}} when the view does not have children. This may be a problem on Android as well, and we are investigating the parity problem.",
					"updateAuthor": {
						"name": "stephentramer",
						"key": "stephentramer",
						"displayName": "Stephen Tramer",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-04-27T17:38:21.000+0000",
					"updated": "2012-04-27T17:42:00.000+0000"
				},
				{
					"id": "199951",
					"author": {
						"name": "mpettiford",
						"key": "mpettiford",
						"displayName": "Michael Pettiford",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Closing issue\r\n\r\nTested with Ti Studio build 2.1.0.201206211609\r\nTi Mobile SDK 2.1.0.v20120622174154 hash rdc9dfbe5\r\nOSX Lion 10.7.3\r\niPhone 4S OS 5.1\r\n\r\nVerified expected behavior is shown",
					"updateAuthor": {
						"name": "mpettiford",
						"key": "mpettiford",
						"displayName": "Michael Pettiford",
						"active": true,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-06-23T15:33:39.000+0000",
					"updated": "2012-06-23T15:33:39.000+0000"
				}
			],
			"maxResults": 4,
			"total": 4,
			"startAt": 0
		}
	}
}