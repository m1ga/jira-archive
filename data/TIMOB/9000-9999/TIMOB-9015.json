{
	"id": "91474",
	"key": "TIMOB-9015",
	"fields": {
		"issuetype": {
			"id": "1",
			"description": "A problem which impairs or prevents the functions of the product.",
			"name": "Bug",
			"subtask": false
		},
		"project": {
			"id": "10153",
			"key": "TIMOB",
			"name": "Titanium SDK/CLI",
			"projectCategory": {
				"id": "10100",
				"description": "Titanium and related SDKs used in application development",
				"name": "Client"
			}
		},
		"fixVersions": [],
		"resolution": {
			"id": "7",
			"description": "",
			"name": "Invalid"
		},
		"resolutiondate": "2012-05-07T12:40:14.000+0000",
		"created": "2012-05-07T09:48:42.000+0000",
		"priority": {
			"name": "High",
			"id": "2"
		},
		"labels": [
			"SupportTeam",
			"api",
			"regression"
		],
		"versions": [
			{
				"id": "13271",
				"description": "Release 2.1.0",
				"name": "Release 2.1.0",
				"archived": false,
				"released": true,
				"releaseDate": "2012-06-29"
			}
		],
		"issuelinks": [],
		"assignee": {
			"name": "vduggal",
			"key": "vduggal",
			"displayName": "Vishal Duggal",
			"active": false,
			"timeZone": "America/Los_Angeles"
		},
		"updated": "2017-03-14T23:38:41.000+0000",
		"status": {
			"description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
			"name": "Closed",
			"id": "6",
			"statusCategory": {
				"id": 3,
				"key": "done",
				"colorName": "green",
				"name": "Done"
			}
		},
		"components": [
			{
				"id": "10206",
				"name": "iOS",
				"description": "iOS Platform"
			}
		],
		"description": "h4. Problem description\r\nWhen you add an event to the TableViewRow, you don't get the source of which tableviewrow was pressed. The customer wants to select/deselect a checkbox in a row, just with clicking on the row.\r\n\r\nh4. Actual Results\r\nThe event is not getting the source of the event. \r\n\r\nh4. Expected Results\r\nThe event behave the same as with 1.7.6\r\n\r\nh4. Test Case\r\n1. Create a new mobile Project\r\n2. Paste this: \r\n{code}\r\n\r\n\tvar fundListSize,fundCheckboxArray=[],fundsToPlotCount,grey=false,lightBlue=false,clickEvent=false,fundsSitemanagerMsg=null,rowCounter=0;\r\nvar win = createHistoricalFundGraphFundsWindow();\r\nwin.orientationModes = [Titanium.UI.LANDSCAPE_LEFT, Titanium.UI.LANDSCAPE_RIGHT];\r\nwin.open()\r\n\r\n\t/*\r\n\t * Function to display the available funds that can be selected to display on the graph\r\n\t */\r\n\tfunction createHistoricalFundGraphFundsWindow() {\r\n\t\r\n\t\t\t/* Declaring the variables*/\r\n\t\t\tvar iOSTopTitle, planText, navTitleText, menuTitle, winLeftNavButton, winRightNavButton, winBackButtonTitle, winBackButtonTitleImage, winTabBarHidden, subHeader, tableViewDS, genericTableView, win;\r\n\t\t\tfundsSitemanagerMsg = ''//_response.historicalFundGraphFundMessage;\r\n\t\t\tfundsToPlotCount = 3;\r\n\t\t\t\r\n\r\n\t\t\t/* reset fundlistsize*/\r\n\t\t\tfundListSize = 0;\r\n\r\n\t\t\t\ttableViewDS = createHistoricalFundGraphFundsTableViewDS();\r\n\t\t\t\tgenericTableView = Titanium.UI.createTableView({\r\n\t\t\tseparatorColor:'#e7e7e7',\r\n\t\t\tdata : tableViewDS,\r\n\t\t\tbackgroundColor :'#e7e7e7'\r\n\r\n\t\t});\r\n\t\t\t\tgenericTableView.top = 0;\r\n\t\t\t\tgenericTableView.backgroundColor = '#e7e7e7';\r\n\t\t\t\ttableViewDS = null;\r\n\t\t\t\t\r\n\t\t\t\tvar menuWindow = Titanium.UI.createWindow({\r\n\t\t\t\t\tbarColor : '#929292',\r\n\t\t\t\t\tbackgroundColor : '#E7E7E7'\r\n\r\n\t\t\t\t});\r\n\t\t\t\tmenuWindow.add(genericTableView);\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\r\n\t\t\treturn menuWindow;\r\n\t};\r\n\t/* Event invoked after clicking done button if the fund does not have any data */\r\n\tTi.App.addEventListener('resetCheckBox', function(e) {\r\n\t\tfor(var i=0;i<fundListSize;i++) {\r\n\t\t\tif (fundCheckboxArray[i].fundName === e.fundName && fundCheckboxArray[i].value) {\r\n\t\t\t\tfundCheckboxArray[i].off();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t\r\n\t\r\n\t\r\n\t/*\r\n\t * Function to create the data source to be added to the tableview that displays the funds\r\n\t */\r\n\tfunction createHistoricalFundGraphFundsTableViewDS() {\r\n\t\t\tvar responseLength=2;\r\n\t\t\tvar datasource=[];\r\n\t\t\tvar datasourceChecked=[];\r\n\t\t\t\t\tvar fundRow,boxChecked;\r\n\t\t\t\t\tboxChecked=false;\r\n\r\n\t\t\t\t\tfundCheckboxArray.push(createHFGCheckBox('','xyz',boxChecked));\r\n\t\t\t\t\tfundCheckboxArray.push(createHFGCheckBox('','abc',boxChecked));\r\n\t\t\t\t\tfundRow=createHFGRowLndScpe({\r\n\t\t\t\t\t\tfFundName: 'xyz',\r\n\t\t\t\t\t\tsSwitch: fundCheckboxArray[0]\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvar fundRow1=createHFGRowLndScpe({\r\n\t\t\t\t\t\tfFundName: 'abc',\r\n\t\t\t\t\t\tsSwitch: fundCheckboxArray[1]\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tdatasource.push(fundRow);\r\n\t\t\t\t\tdatasource.push(fundRow1);\r\n\t\t\t\t\tfundListSize = 2;\r\n\t\t\t\r\n\t\t\treturn datasource;\r\n\t\t\r\n\t};\r\n\t/*\r\n\t * function to create checkbox ( a button masked as checkbox, not a switch ) for each row\r\n\t */\r\n\tfunction createHFGCheckBox(_fundNum,_fundName,_checked) {\r\n\r\n\t\tvar checkbox = Ti.UI.createButton({\r\n\t\t\ttitle:'',\r\n\t\t\tright:'5%',\r\n\t\t\twidth:28,\r\n\t\t\theight:28,\r\n\t\t\tfont: {\r\n\t\t\t\tfontSize: 25,\r\n\t\t\t\tfontWeight: 'bold'\r\n\t\t\t},\r\n\t\t\tvalue:_checked,\r\n\t\t\tfundNum:_fundNum,\r\n\t\t\tfundName:_fundName,\r\n\t\t\tcheckColor:'none'\r\n\t\t});\r\n\r\n\t\t/* attach on/off actions */\r\n\t\tcheckbox.on = function() {\r\n\t\t\tthis.value = true;\r\n\t\t};\r\n\t\tcheckbox.off = function() {\r\n\t\t\tthis.value = false;\r\n\r\n\t\t\t\r\n\t\t};\r\n\t\t/* fire action to check or uncheck based on _checked bool param */\r\n\t\tif (_checked) {\r\n\t\t\tcheckbox.on();\r\n\t\t} else {\r\n\t\t\tcheckbox.off();\r\n\t\t}\r\n\r\n\t\tcheckbox.addEventListener('click', function(e) {\r\n\t\t\t/* can always turn checkboxes off */\r\n\t\t\talert(e)\r\n\t\t});\r\n\t\treturn checkbox;\r\n\t};\r\n\t\r\n\t/*\r\n\t * Function to create  row for fund label\r\n\t */\r\n\tfunction createHFGRowLndScpe(_fundBalData) {\r\n\t\tif( typeof _fundBalData !== 'undefined' && _fundBalData !== null) {\r\n\t\t\tvar _fundName = _fundBalData.fFundName;\r\n\r\n\t\t\tvar row = Titanium.UI.createTableViewRow({\r\n\t\t\t\tbackgroundColor : '#FFFFFF',\r\n\t\t\t\tselectedBackgroundColor : '#FFFFFF',\r\n\t\t\t\tselectionStyle : 'NONE'\r\n\t\t\t});\r\n\t\t\tvar checkBoxView = Ti.UI.createView({\r\n\t\t\t\tright : 0,\r\n\t\t\t\theight : 30,\r\n\t\t\t\twidth : '30%',\r\n\t\t\t\tuniqueRowId : rowCounter\r\n\t\t\t})\r\n\t\t\trow.addEventListener('click', function(e) {\r\n\t\t\t\t\r\n\t\t\t\tvar id = e.source.uniqueRowId;\r\n\t\t\t\tif( typeof id !== 'undefined' && id !== null) {\r\n\t\t\t\t\tfundCheckboxArray[e.source.uniqueRowId].fireEvent('click');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tvar fundNameLabel = Titanium.UI.createLabel({\r\n\t\t\t\tleft : '5%',\r\n\t\t\t\twidth : '65%',\r\n\t\t\t\ttop : 15,\r\n\t\t\t\tbottom : 15,\r\n\t\t\t\theight : 'auto',\r\n\t\t\t\tcolor : '#363636',\r\n\t\t\t\ttext : _fundName,\r\n\t\t\t\tfont : {\r\n\t\t\t\t\tfontSize : 15,\r\n\t\t\t\t\tfontFamily : 'Helvetica Neue',\r\n\t\t\t\t\tfontWeight : 'bold'\r\n\t\t\t\t},\r\n\t\t\t\tuniqueRowId : rowCounter\r\n\t\t\t});\r\n\t\t\trowCounter += 1;\r\n\t\t\trow.add(fundNameLabel);\r\n\t\t\t_fundName = null;\r\n\t\t\tcheckBoxView.add(_fundBalData.sSwitch);\r\n\t\t\trow.add(checkBoxView);\r\n\t\t\treturn row;\r\n\t\t}\r\n\r\n\t};\r\n\t\r\n{code}\r\n\r\nh4. Extra info \r\nThis used to work properly in 1.7.6, but now in 2.1CI it's not working as before. ",
		"attachment": [],
		"flagged": false,
		"summary": "iOS: Tablerows' events are not returning the source",
		"creator": {
			"name": "mpmiranda",
			"key": "mpmiranda",
			"displayName": "Mauro Parra-Miranda",
			"active": true,
			"timeZone": "America/Mexico_City"
		},
		"subtasks": [],
		"reporter": {
			"name": "mpmiranda",
			"key": "mpmiranda",
			"displayName": "Mauro Parra-Miranda",
			"active": true,
			"timeZone": "America/Mexico_City"
		},
		"environment": "Titanium SDK version:  2.1.0 (05/04/12 11:49 83be541)\r\nPlatform & version: iOS 5.0 \r\nDevice Details: iOS simulator \r\nHost Operating System: OS X 10.7.3 \r\nTitanium Studio version: 2.0",
		"comment": {
			"comments": [
				{
					"id": "193990",
					"author": {
						"name": "vduggal",
						"key": "vduggal",
						"displayName": "Vishal Duggal",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "The source of the event is always available. Tested with current master and 2_0_X branch. The problem is the way the code is written. \r\n\r\nThe click event handler for the tableView row can have 4 possible sources (button,label,row,checkBoxView). However the uniqueId is associated with only 2 elements(label,checkBoxView). So the if condition fails for 2 possible sources. \r\n\r\nFrom the way the code is written, the uniqueId is completely un-required since it simply is the row index which is always available via e.index. Also if you fire a `click` event to a child of the row from within the `click` event handler of the row, there is a very real possibility of causing a stack overflow and a crash.\r\n\r\nThe way that CS has written the code is correct where the update of the button is done in a different method and not click. \r\n\r\nAttaching modified code that shows the source is always available and the right way to update the checkbox.\r\n\r\n{code}\r\nvar fundListSize,fundCheckboxArray=[],fundsToPlotCount,grey=false,lightBlue=false,clickEvent=false,fundsSitemanagerMsg=null;\r\nvar win = createHistoricalFundGraphFundsWindow();\r\nwin.orientationModes = [Titanium.UI.LANDSCAPE_LEFT, Titanium.UI.LANDSCAPE_RIGHT];\r\nwin.open()\r\n \r\n/*\r\n * Function to display the available funds that can be selected to display on the graph\r\n */\r\nfunction createHistoricalFundGraphFundsWindow() {\r\n\t/* Declaring the variables*/\r\n\tvar iOSTopTitle, planText, navTitleText, menuTitle, winLeftNavButton, winRightNavButton, winBackButtonTitle, winBackButtonTitleImage, winTabBarHidden, subHeader, tableViewDS, genericTableView, win;\r\n\tfundsSitemanagerMsg = ''//_response.historicalFundGraphFundMessage;\r\n\tfundsToPlotCount = 3;\r\n\r\n    /* reset fundlistsize*/\r\n\tfundListSize = 0;\r\n \r\n\ttableViewDS = createHistoricalFundGraphFundsTableViewDS();\r\n\tgenericTableView = Titanium.UI.createTableView({\r\n\t\tseparatorColor:'#e7e7e7',\r\n\t\tdata : tableViewDS,\r\n\t\tbackgroundColor :'#e7e7e7'\r\n\t});\r\n    \r\n\tgenericTableView.top = 0;\r\n\tgenericTableView.backgroundColor = '#e7e7e7';\r\n\ttableViewDS = null;\r\n                 \r\n\tvar menuWindow = Titanium.UI.createWindow({\r\n\t\tbarColor : '#929292',\r\n\t\tbackgroundColor : '#E7E7E7'\r\n\t});\r\n    \r\n\tmenuWindow.add(genericTableView);\r\n\treturn menuWindow;\r\n};\r\n \r\n/*\r\n * Function to create the data source to be added to the tableview that displays the funds\r\n */\r\nfunction createHistoricalFundGraphFundsTableViewDS() {\r\n\tvar responseLength=2;\r\n\tvar datasource=[];\r\n\tvar datasourceChecked=[];\r\n\tvar fundRow,boxChecked;\r\n\tboxChecked=false;\r\n\tfundCheckboxArray.push(createHFGCheckBox('','xyz',boxChecked));\r\n\tfundCheckboxArray.push(createHFGCheckBox('','abc',boxChecked));\r\n\tfundRow=createHFGRowLndScpe({\r\n\t\tfFundName: 'xyz',\r\n\t\tsSwitch: fundCheckboxArray[0]\r\n\t});\r\n\tvar fundRow1=createHFGRowLndScpe({\r\n\t\tfFundName: 'abc',\r\n\t\tsSwitch: fundCheckboxArray[1]\r\n\t});\r\n\r\n\tdatasource.push(fundRow);\r\n\tdatasource.push(fundRow1);\r\n\tfundListSize = 2;\r\n\treturn datasource;\r\n};\r\n/*\r\n * function to create checkbox ( a button masked as checkbox, not a switch ) for each row\r\n */\r\nfunction createHFGCheckBox(_fundNum,_fundName,_checked) {\r\n \r\n\tvar checkbox = Ti.UI.createButton({\r\n\t\ttitle:'',\r\n\t\tright:'5%',\r\n\t\twidth:28,\r\n\t\theight:28,\r\n\t\tfont: {\r\n\t\t\tfontSize: 14,\r\n\t\t\tfontWeight: 'bold'\r\n\t\t},\r\n\t\tvalue:_checked,\r\n\t\tfundNum:_fundNum,\r\n\t\tfundName:_fundName,\r\n\t\tcheckColor:'none'\r\n\t});\r\n\r\n\t/* attach on/off actions */\r\n\tcheckbox.on = function() {\r\n\t\tthis.value = true;\r\n\t\tthis.title='ON';\r\n\t};\r\n\tcheckbox.off = function() {\r\n\t\tthis.value = false;\r\n\t\tthis.title='OFF';\r\n\t};\r\n \r\n\t/* fire action to check or uncheck based on _checked bool param */\r\n\tif (_checked) {\r\n\t\tcheckbox.on();\r\n\t} else {\r\n\t\tcheckbox.off();\r\n\t}\r\n \r\n\tcheckbox.addEventListener('updateCheckBox', function(e) {\r\n\t\t/* can always turn checkboxes off */\r\n\t\tif(e.source.value == true)\r\n\t\t{\r\n\t\t\tcheckbox.off();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tcheckbox.on();\r\n\t\t}\r\n\t});\r\n\treturn checkbox;\r\n};\r\n     \r\n/*\r\n * Function to create  row for fund label\r\n */\r\nfunction createHFGRowLndScpe(_fundBalData) {\r\n\tif( typeof _fundBalData !== 'undefined' && _fundBalData !== null) {\r\n\t\tvar _fundName = _fundBalData.fFundName;\r\n\t\tvar row = Titanium.UI.createTableViewRow({\r\n\t\t\tbackgroundColor : '#FFFFFF',\r\n\t\t\tselectedBackgroundColor : '#FFFFFF',\r\n\t\t\tselectionStyle : 'NONE'\r\n\t\t});\r\n\t\tvar checkBoxView = Ti.UI.createView({\r\n\t\t\tright : 0,\r\n\t\t\theight : 30,\r\n\t\t\twidth : '30%',\r\n\t\t})\r\n\t\trow.addEventListener('click', function(e) {\r\n\t\t\tvar id = e.index;\r\n\t\t\tTi.API.info('Row got click Source: '+e.source+' Row Index:'+e.index);\r\n\t\t\tif( typeof id !== 'undefined' && id !== null) {\r\n\t\t\t\tfundCheckboxArray[id].fireEvent('updateCheckBox');\r\n    \t\t}\r\n\t\t});\r\n\t\tvar fundNameLabel = Titanium.UI.createLabel({\r\n\t\t\tleft : '5%',\r\n\t\t\twidth : '65%',\r\n\t\t\ttop : 15,\r\n\t\t\tbottom : 15,\r\n\t\t\theight : 'auto',\r\n\t\t\tcolor : '#363636',\r\n\t\t\ttext : _fundName,\r\n\t\t\tfont : {\r\n\t\t\t\tfontSize : 15,\r\n\t\t\t\tfontFamily : 'Helvetica Neue',\r\n\t\t\t\tfontWeight : 'bold'\r\n\t\t\t},\r\n\t\t});\r\n\t\trow.add(fundNameLabel);\r\n\t\t_fundName = null;\r\n\t\tcheckBoxView.add(_fundBalData.sSwitch);\r\n\t\trow.add(checkBoxView);\r\n\t\treturn row;\r\n\t}\r\n};\r\n{code}",
					"updateAuthor": {
						"name": "vduggal",
						"key": "vduggal",
						"displayName": "Vishal Duggal",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2012-05-07T12:40:14.000+0000",
					"updated": "2012-05-07T12:40:14.000+0000"
				},
				{
					"id": "412448",
					"author": {
						"name": "lmorris",
						"key": "lmorris",
						"displayName": "Lee Morris",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"body": "Closing ticket as invalid.",
					"updateAuthor": {
						"name": "lmorris",
						"key": "lmorris",
						"displayName": "Lee Morris",
						"active": false,
						"timeZone": "America/Los_Angeles"
					},
					"created": "2017-03-14T23:38:41.000+0000",
					"updated": "2017-03-14T23:38:41.000+0000"
				}
			],
			"maxResults": 4,
			"total": 4,
			"startAt": 0
		}
	}
}